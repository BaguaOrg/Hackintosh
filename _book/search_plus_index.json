{"./":{"url":"./","title":"一、前言介绍","keywords":"","body":"国光的黑苹果安装教程：手把手教你配置 OpenCore 且行且珍惜 写这篇文章的时间是 2021 年 09 月 15 日，今天的苹果发布会暂时还没有下一代 Mac 的消息，如果下一代 Mac 不配备 intel CPU 的话，那么黑苹果这个技术会随着时间的流逝逐渐成功历史，为了证明自己来过，所以写了这个系列的黑苹果从 0 开始的教程。 实际上 OpenCore 官方文档写的已经很不错了，本教程的大部分内容也会搬运自 OpenCore 官方文档。 本 Gitbook 系列的原版文件开源项目地址为：https://github.com/sqlsec/Hackintosh 由于精力有限，本教程不维护了，如果还有人愿意维护这个教程可以 fork 上面的这个项目，Gitbook 搭建的，跑起来不难的。 配套视频教程 本系列教程也在 B 站开了系列，感兴趣的网友可以自行去观看： 视频教程链接传送门：https://www.bilibili.com/video/BV1yq4y1o7cT 配套的 QQ 群 建群的初衷不是请一帮伸手党大哥的，还是希望可以营造一个黑苹果技术讨论的地方，提问前自己先谷歌或者百度一下，别人也没有义务去帮你，虚心请教还是大家或多或少都会帮助的。 国光的黑苹果正经交流：708385833 （已满） 目前在我的督促下，目前群里绝大多数网友都可以自己配置 EFI 安装黑苹果了，所以别人可以的话，为什么你不可以呢？要相信自己。 更新一下，因为我不搞黑苹果了，所以也没有新的群了，这个群已经满了，所以没有人退出的话也就没有新的人可以进去，这样马很好的，因为随着时间的流逝，群里的绝大多数人应该都自己会配置 EFI 了。 为什么造轮子? 为什么要重复造轮子呢？国光我不是一个喜欢重复造轮子的人，而且这个工作量本身也很大，平时的工作任务本身就很有挑战性了，还得抽出时间写这个系列，这不是自讨苦吃吗。所以我想分享一下，写这个系列的 Gitbook 的几个原因： OpenCore 官方文档对小白不是很友好，也不符合国内的阅读习惯，阅读需要一定的门槛 OpenCore 黑苹果这块一直没有一个系统的教程，写这个系列日后还可以配合视频讲解在 B 站出一个教程系列 授人以鱼不如授人以渔，与其等待大佬们的 EFI，不如自己动手自己配置一个自己的 EFI 关于 Hackintosh 凡是存在即合理，黑苹果的英文 Hackintosh，里面出现了 Hack，说到 Hack 就不得不提 Hacker 的几个基本的精神：热爱、叛逆、共享、开源、免费...... 所以黑苹果本身也继承了这些特点，试想一下，如果著名的黑苹果 kexts 驱动：Liu、WhateverGreen、AppleALC 不开源的话，黑苹果技术还会和我们有关系吗？我们本质上就是一些 kexts 的搬运工，本身并没有创造什么，只是一些基本的排列组合。这也是国光我也坚持开源 EFI 的原因，毕竟喝水不忘挖井人。 好了，说了一堆乱七八糟的了，下面黑苹果教程正式开始。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ 参考资料 Dortania's OpenCore Install Guide [指南] hackintosh之SSDT/DSDT · Mac OS之程序员 · 看云 DSDT - ArchWiki 黑果小兵的部落阁 黑苹果星球-分享Mac的精彩世界 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 powered by Gitbook该文章最后修改时间： 2022-05-05 12:07:35 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"1-基础知识/":{"url":"1-基础知识/","title":"二、基础知识","keywords":"","body":"二、基础知识 黑苹果安装的一些基础知识点，主要包括如下内容： 1. 基操勿六 2. 硬件限制 3. 寻找硬件 4. 专业术语 powered by Gitbook该文章最后修改时间： 2022-02-02 21:33:49 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"1-基础知识/1-1.html":{"url":"1-基础知识/1-1.html","title":"1. 基操勿六","keywords":"","body":"1. 基操勿六 基础知识就是默认大家都懂的，如果不懂得话建议补一下基础再看此教程。 时间、稳定、版权 如果有项目要截止的话，请不要开始看这篇教程，因为刚开始黑苹果的过程基本上不会一帆风顺的，随便走一点弯路都是极其耗费时间的事情，另外注意休息，黑苹果的过程不差你熬夜的那几个小时。 如果你对系统要求追求稳定的话，也尽量不要使用黑苹果，虽然黑苹果完美度已经无限接近白苹果了，但是毕竟还是有个“黑”字，安装的时候要注意重要资料备份。 如果你的公司是正版化普及的公司（一般是 BAT 等大型公司），也不要使用黑苹果接入公司的网络，这样可能会收到苹果的律师函（树大招风），严格来说黑苹果属于 Hack 行为，侵犯了苹果公司的版权。 准备工作 一个满足黑苹果硬件限制的电脑和一个至少 16GB 的 U 盘，虽然目前来看 16GB 完全足够了，但是这几年苹果的镜像体积越拉越大，国光曾经在刻录一个 3 分区的镜像的时候，居然提示了 U 盘空间不足的情况。 另外，U 盘速度越快越好，可以极大的缩短黑苹果安装 U 盘的制作和系统安装的时间。 基本操作 首先安装黑苹果前得保证自己可以熟练安装 Windows 或者 Linux 系统（加分项），因为黑苹果安装需要磁盘满足一定要求，所以重新删除分区安装系统是常有的事情，如果你不会安装 Windows 不会熟练使用 PE 系统的话，建议去学习这些基本技能后再来学习黑苹果安装。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:01:04 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"1-基础知识/1-2.html":{"url":"1-基础知识/1-2.html","title":"2. 硬件限制","keywords":"","body":"2. 硬件限制 黑苹果的硬件和白苹果越接近约好，这样黑起来才比较顺利，最后的完成度也比较高。 因为时间有限，文档里面的信息难免有疏漏，目前最稳的就是买硬件前先多多谷歌或者和百度一下能不能黑苹果，这样可以让自己少走一些坑。 CPU 支持 11 代 12 代是否支持 CPU 本身是可以驱动的，关键的就是核显不能工作，这意味着你必须得有免驱的独显才可以，因为很少有笔记本搭配免驱独显（且要支持独显直连），所以笔记本 11代 12 代基本上是无解的，确实有少部分的笔记本会搭配 AMD CPU 配合 AMD 独显，但是这个价格也不便宜，且 AMD CPU 也完美，虚拟化这块没法工作，当然小问题还有很多我就不一一列举了。 桌面 CPU 以你的 CPU 代号架构为准，后面的例子仅供参考，CPU 型号混乱，所以并不完整。 CPU 代号 中文名 for example Penryn ？？？ 太老了 我也太懒了 不写了 Yonah 尤娜？ 太老了 我也太懒了 不写了 Conroe ？？？ 太老了 我也太懒了 不写了 Merom ？？？ 太老了 我也太懒了 不写了 Penryn ？？？ 太老了 我也太懒了 不写了 Lynnfield ？？？ 太老了 我也太懒了 不写了 Clarkdale ？？？ 太老了 我也太懒了 不写了 Sandy Bridge 桑迪桥 2 代酷睿 Ivy Bridge ？？？ 3 代酷睿 Haswell 哈斯威尔 4 代酷睿 Broadwell 布罗德韦尔 5 代酷睿 SkyLake 天空湖 6 代酷睿 Kaby Lake 卡比湖 7 代酷睿 Coffee Lake 咖啡湖 8、9 代酷睿 Comet Lake 彗星湖 10 代酷睿 intel 11 代目前核显（UHD 730/750）无法驱动，黑苹果上不是很完美。不追求核显的话，可以考虑直接上 intel 12 代 CPU，性能更强，搭配一个免驱的独显简直美滋滋： 12 代酷睿仿冒 10 代酷睿，在 OpenCore 的 config.plist → Kernel → Emulate 添加以下内容即可： Cpuid1Data：55060A00 00000000 00000000 00000000 Cpuid1Mask：FFFFFFFF 00000000 00000000 00000000 笔记本 CPU 以你的 CPU 代号架构为准，后面的例子仅供参考，CPU 型号混乱，所以并不完整。 CPU 代号 中文名 for example Clarksfield ？？？ 太老了 我也太懒了 不写了 Arrandale ？？？ 太老了 我也太懒了 不写了 Sandy Bridge 桑迪桥 2 代酷睿 Ivy Bridge ？？？ 3 代酷睿 Haswell 哈斯威尔 4 代酷睿 Broadwell 布罗德韦尔 5 代酷睿 SkyLake 天空湖 6 代酷睿 Kaby Lake 卡比湖 7 代酷睿 Whiskey Lake 威士忌湖 8 代酷睿 Coffee Lake 咖啡湖 8、9 代酷睿 Comet Lake 彗星湖 10 代酷睿 Ice Lake 冰湖 10 代酷睿 i5-1035G4、i7-1065G7... 高端桌面 CPU 以你的 CPU 代号架构为准，后面的例子仅供参考，CPU 型号混乱，所以并不完整。 CPU 代号 中文名 for example Nehalem ？？？ 太老了 我也太懒了 不写了 Westmere ？？？ 太老了 我也太懒了 不写了 Sandy Bridge-E 桑迪桥 i7-3960X、i7-3960K、i7-3820K Ivy Bridge-E ？？？ i7-4960X、i7-4960K、i7-4820K Haswell-E 哈斯威尔 i7 5960X、i7 5820K、i7 5930K Broadwell-E 布罗德韦尔 i7-6950X、i7-6900K、i7-6850K、i7-6800K Skylake-X/W 天空湖 i7-7800X、i7-9800X、Xeon W-2104 Cascade Lake-X/W 级联湖 Xeon Gold 6142M AMD CPU 以你的 CPU 代号架构为准，后面的例子仅供参考，CPU 型号混乱，所以并不完整。 CPU 代号 中文名 for example Bulldozer(15h) 推土机 FX-41X0、FX-6XX0、FX-81X0 Jaguar(16h) 美洲豹 太老了 我也太懒了 不写了 Ryzen 锐龙 比较著名的架构 Threadripper(17h and 19h) 线程撕裂者 1950X、2990WX、3990X、3995WX 锐龙 APU 笔记本系列因为独显是无法驱动的，所以就算安装好黑苹果的话，基本上也是不可以使用的，除非你的笔记本搭配 AMD CPU 以外还搭配了免驱的 AMD 独显（极少数昂贵的设备有这种情况），不过这种笔记本价格一般很贵了，可以买个全新的 MBP 了，所以没有黑的必要。 GPU 支持 显卡这块也比较杂，难以列的很全，建议买之前先确定你的型号显卡有成功的案例再进行购买。显卡驱动情况大体上可以参考如下： AMD 的 GPU 支持情况： AMD 的 APU 系列目前无法驱动 AMD 的独显从 GCN 架构开始后面驱动情况都还不错 Intel 的 GPU 支持情况： macOS 不支持 Pentium、Celeron 和 Atom 上的低端 GT1 iGPU 绝大多数的 intel 核显都可以很好的驱动 理论上最强的核显是 i7-1065G7、其次是 lris 锐矩系列、接着是 UHD、HD 系列 NVIDIA 的 GPU 支持情况： Maxwell 麦克斯韦（9XX）和 Pascal 帕斯卡（10XX）系列最高只能安装到 macOS 10.13 High Sierra Turing 图灵（20XX, 16XX）目前无解 Ampere 安培 （30XX）目前无解 Kepler （6XX，7XX）目前支持最新版本的 macOS，这是因为 MBP 历史上配备过这个显卡 GPU 型号也太杂了，这些也不在本教程范围类，OpenCore 官方总结的已经很详细了，大家可以参考： GPU Buyers Guide- 显卡购买指南 主板支持 绝大多数的主板都可以驱动，个人还是建议尽量选择 BIOS 功能多的主板，因为黑苹果需要调整不少 BIOS 选项，阉割过分的 BIOS 黑起来并不是很完美。 下面是主板选购方面的一些小 Tips： 技嘉 B250M、B360M 无法完美的让独显和核显工作，不是很推荐。 如果 BIOS 设置核显输出的话，此时如果你的显示器 HDMI/DP 插在独显上的话，直到进入系统都是黑屏状态 如果 BIOS 设置独显输出的话，此时虽然可以进系统，但是你会发现核显被主板 Ban 掉了，导致双硬解异常 完美的方法就是设置核显输出，显示器插核显点亮屏幕，输入密码进系统再插独显，此时双硬解正常（真滴蛋疼啊） BIOS 设置里面有 CFG Lock 选项的优先选择，可以带来更好的黑苹果体验 X79、X99、X299、C422、C612、C621 不支持 macOS NVRAM 读写，也是比较坑的，不建议入手 笔记本主板的话，优先选择支持 S3 睡眠模式的主板，这样可以让睡眠耗更少的电 笔记本从 10 代 CPU 开始，很多主板厂商厂商使用 S0 现代睡眠替代 S3，导致睡眠耗电量很不完美 硬盘支持 所有的 eMMC 的硬盘无法驱动（常见于某些平板或者低端笔记本），基本上所有的 SATA 硬盘都支持的，少部分 NVME 协议硬盘无法完美工作，甚至安装的时候还会造成内核恐慌，建议所有的 NVME 硬盘配合 NVMeFix.kext 使用。下面是硬盘相关的 Tips 供大家参考： TRIM 不完美工作的硬盘列表（可以禁用 TRIM 情况下使用） 三星 Samsung 950 Pro 三星 Samsung 960 Evo/Pro 三星 Samsung 970 Evo/Pro（玄学问题非常多 出现玄学问题建议屏蔽掉） TRIM 可完美工作的硬盘列表 西数 Western Digital Blue SN550 西数 Western Digital Blue SN570 西数 Western Digital Black SN700 西数 Western Digital Black SN720 西数 Western Digital Black SN750 (也叫 闪迪 SanDisk Extreme PRO，关闭性能模式可以安装) 西数 Western Digital Black SN850（需要更多的测试） 海力士 PC401 HFS512GD9TNG-62A0A（外星人笔记本自带） 威刚 ADATA XPG S11L Pro、S50 Lite、8200 Pro，貌似威刚系列黑苹果都还不错 SanDisk Ultra 3D NVme，貌似闪迪系列黑苹果都还不错 海康威视 C2000、C2000 Pro系列，貌似海康威视系列黑苹果都还不错，就是质量堪忧 雷克沙系列、光威系列、英睿达系列、先锋 APS–SE20G系列、忆联AH530、浦科特 M6S、建兴 SSD 与 IONVMeFamily 不兼容或者有其他的奇怪问题（开机跑代码会卡死等 尽量不要选购） 技嘉 512 GB GIGABYTE M.2 PCIe SSD（比如 GP-GSM2NE8512GNTD） 威刚剑鱼 ADATA Swordfish 2 TB M.2-2280 海力士 SK Hynix HFS001TD9TNG-L5B0B、HFS512GD9TNG-L2A0A、HFS512GD9TNI-L2A0B 海力士 SK Hynix P31、P711 海力士 BC501/PC601/PC611/PC711/BC501 （主要见于联想和戴尔笔记本，部分批次无法安装 macOS） 三星 Samsung PM961/PM981/PM981a/PM991 系列（MZVLB256HAHQ 等） 三星 Samsung 983ZET、SAMSUNGKLFGGAR4AA-K0T0 镁光 Micron 2200V MTFDHBA512TCK、Micron 2200S 英特尔 intel 600P/660P/760P 系列 （有一些奇怪问题） 金士顿 A2000 （需要搭配 NVMeFix.kext）、KINGSTONSA2000M8500G 阿斯加特 Asgard AN2 系列 阿斯加特 Asgard AN3+ (STAR1000P) 可能还需要配合 Kexts 补丁： IONVMeFamily F6C1100F 85440100 00 F6C1010F 85440100 00 铠侠 KIOXIA-EXCERIA PLUS 朗科 Netac NVME SSD 480 浦科特 PLEXTOR M9P Plus PX-512M9PGN 这些型号尽管部分后面使用 NVMeFix.kext 可以修复内核恐慌，但是依然可能会有一些小毛病，新手的话还是建议换硬盘，不建议碰这些型号。 有线网卡 几乎所有有线网络适配器在 macOS 中都有某种形式的支持，通过内置驱动程序或社区制作的 kexts。主但是也有一些棘手的型号： 英特尔 I225 2.5Gb 网卡 高端桌面 Comet Lake 主板可能配备 可能的解决方法：来源和例子 macOS 12.3 存在新的问题，参考 QA 里面第 12 个问题 Intel I350 1Gb 服务器网卡 在各代 Intel 和 Supermicro 服务器主板上可能配备 解决方法 Intel 10Gb 服务器网卡 X520 和 X540 芯片组可能的变通方法 Mellanox 和 Qlogic 服务器网卡 无线网卡 大多数笔记本电脑附带的无线网卡不受原生系统的支持，最好的选择是白苹果使用的 Broadcom 博通网卡。 关于网卡这块详情可参考： WiFi 购买者指南 下面主要列出博通系列的免驱网卡： 博通 PCIe 网卡 BCM943602CDP BCM943602CD BCM94360CD Fenvi FV T919 (蓝牙4.0) Fenvi AC1900（无蓝牙，EOL） TP-LINK Archer T9E AC1900（无蓝牙，EOL） TP-LINK Archer T8E（无蓝牙） RNX-AC1900PCE（无蓝牙） 华硕 PCE-AC66（无蓝牙） 华硕 PCE-AC68（无蓝牙） BCM94331CD（可能需要强制 kext 加载 Catalina） BCM94360CS2 Fenvi FV-HB1200 (蓝牙4.0) AWD 无线网卡（无蓝牙） BCM943602CS BCM94360CSAX BCM94360CS BCM94352Z TP-LINK Archer T6（无蓝牙） Rosewill RNX-AC1300PCE（无蓝牙） 华硕 PCE-AC56（无蓝牙） BCM94350ZAE 博通 Mini PCIe BCM94360HMB (ABGN+AC, BT 4.0, 3x3:3): AzureWave AW-CB160H Alpha Networks WMC-AC01 Arcadyan WN8833B-AC Gemtek WMDB-150AC Unex DAXB-81 Wistron NeWeb DNXB-C1 BCM94352HMB (ABGN+AC, BT 4.0, 2x2:2): AzureWave AW-CE123H Dell DW1550 HP TPC-Q013 Lenovo Lite-On WCBN606BH 博通 M.2 BCM94360NG Fenvi BCM94360NG(A+E Key, natively supported as based off of genuine Apple Airport card)(BT 4.0) BCM943602 Dell DW1830 (A+E Key, quite wide so make sure your laptop has room)(BT 4.1) BCM94352Z Fenvi AC1200 (A+E Key, natively supported as based off of genuine Apple Airport card)(BT 4.0) Dell DW1560 (A+E Key)(BT 4.0) Lenovo Lite-On WCBN802B(04X6020)(E Key)(BT 4.0) AzureWave AW-CB162NF(A+E Key)(BT 4.0) BCM94350ZAE Lenovo Foxconn T77H649(A+E Key)(BT 4.1) Lite-On WCBN808B(A+E Key)(BT 4.1) Dell DW1820A (A+E Key)(BT 4.1) 后续国内的大佬 zxystd 移植开源了 intel 的网卡驱动也可以解决大多数 intel 网卡的驱动问题，虽然目前暂时无法使用隔空投送 AirDrop 但是已经进步很大了： intel 网卡可驱动的型号列表 声卡支持 声卡主要依赖 AppleALC 开源 kexts 来驱动，可以启用原生的 macOS 高清音频。详细的支持原生驱动的声卡列表可参考： 黑苹果声卡的驱动情况表以及 layouts id 情况 其他硬件 指纹传感器 目前无法模拟 Touch ID 传感器，因此指纹传感器基本上无解 Windows Hello 人脸识别 某些笔记本电脑带有 I2C 连接的 WHFR（并通过您的 iGPU 使用），这些将无法正常工作。 一些笔记本电脑带有 USB 连接的 WHFR，如果幸运的话，您可能会获得相机功能，但没有其他功能。 英特尔智能声音技术 配备英特尔 SST 的笔记本电脑麦克风通常无法驱动，比如小新 13 Pro 系列。 但是有些也使用了 intel 智音技术的笔记本是可以完美驱动麦克风的。 所以具体麦克风能不能工作的话，只有实践了才知道。 耳机麦克风一体接口组合 某些带有组合耳机麦克风接口的笔记本电脑可能无法通过它们获得音频输入，而必须使用内置麦克风或通过 USB 的外部音频输入设备。 雷电接口 雷电接口比较难搞和玄学，OC 官方建议主板禁用掉雷电口，但是不代表无解只是难搞 读卡器 部分的 Realtek 读卡器是可以完美驱动的，详细可参考这个项目：https://github.com/0xFireWolf/RealtekCardReader 参考资料 2022年黑苹果硬件配置推荐表 https://github.com/dortania/bugtracker/issues/192 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:01:10 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"1-基础知识/1-3.html":{"url":"1-基础知识/1-3.html","title":"3. 寻找硬件","keywords":"","body":"3. 寻找硬件 上文中大家差不多清楚了硬件的驱动情况，本篇中就分享一下如果判断确定自己的硬件型号的方法和技巧。 使用 Windows 查看硬件 CPU 型号 可以使用 Windows 自带的设备管理器或者自带的任务管理等，或者使用第三方的软件：CPU-Z、AIDA64、鲁大师等 GPU 型号 可以使用 Windows 自带的设备管理器或者自带的任务管理等，或者使用第三方的软件：GPU-Z、AIDA64、鲁大师等 芯片组型号 设备管理器： 或者使用 AIDA64 这类第三方软件： 声卡型号 建议使用 AIDA64、鲁大师等第三方软件： 网卡型号 设备管理器或者 AIDA64，还是建议使用第三方的软件查看： 硬盘型号 硬盘的话通过软件一般看不到详细的信息，只能自己配合谷歌去确认 一下： 键盘、触控板、触控屏连接类型 遗憾的是，AIDA64 没有提供有这类设备的任何有用信息，因此我们建议为此使用设备管理器。 您可以在以下位置找到这些设备： Human Interface Devices 人体学接口设备(HID) Keyboards 键盘 Mice and other Pointer Devices 鼠标和其他指针设备 要查看设备的确切连接类型，请选择指针设备，然后输入View -> Device by Connection。这样比较直观地展示它是否通过 PS2、I2C、SMBus、USB 等连接情况 根据设备的不同，它可能会显示在多个名称和连接下。主要关注以下几点： SMBus 一般这种触控板的驱动支持比较友好，手势也很完美，在设备管理器中将显示为一条直线PCI设备，如Synaptics SMBus Driver或ELAN SMBus Driver USB 这些将显示为一个PS2 Compliant Trackpad，以及在USB当我们切换我们的连接视图Device by Connection I2C 这些几乎总是显示为 Microsoft HID 设备，但也可以显示为其他触控板。不过，它们将始终显示在 I2C 下。 使用 Linux 查看硬件 为了使用 Linux 查找硬件，我们将使用如下命令： pciutils dmidecode 大多数 Linux 发行版都已经安装了这些工具。如果没有，您可能会在发行版的包管理器中找到它们。 # CPU型号 grep -i \"model name\" /proc/cpuinfo # 显卡型号 lspci | grep -i --color \"vga\\|3d\\|2d\" # 芯片组型号 dmidecode -t baseboard # 声卡型号 aplay -l # 网卡型号 lspci | grep -i network lshw -class networ # 硬盘型号 lshw -class disk -class storage # 键盘、触控板、触控屏连接类型 dmesg | grep -i input 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:01:15 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"1-基础知识/1-4.html":{"url":"1-基础知识/1-4.html","title":"4. 专业术语","keywords":"","body":"4. 专业术语 基础名词 名词 描述 Hackintosh 将 macOS 安装到非苹果官方 PC 的过程，请注意Hackintosh 不是操作系统 Bootloader 加载操作系统的软件，通常由操作系统创建者制作 Boot Manager 管理引导加载程序的软件比如：Clover、OpenCore 等 Clover 被 OpenCore 逐步替代的一个引导方式 OpenCore 由Acidanthera 团队在打造的 Hackintosh 新的更完美的引导方式 ACPI 高级配置和电源接口 ，可以让系统更好的识别硬件信息 DSDT/SSDT ACPI 中的表格，描述设备以及操作系统应如何与它们交互 .AML ACPI 的编译文件格式 .DSL ACPI 的源代码文件 Kexts 全程叫 Kernel Extensions 内核扩展，我们国内可以通俗的翻译为驱动 BIOS 基本输出输入系统，可以通俗的理解为主板的操作系统 UEFI 统一可扩展固件接口，可以让 PC 从预启动的操作环境，加载到操作系统上 UEFI 驱动 与任何其他操作系统一样，UEFI 具有驱动程序，它们由 Clover 或 OpenCore 加载 NVRAM 非易失性随机访问存储器，主板自带的，UEFI 启动的时候会先加载 NVRM ACPI 相关 名词 描述 EC 嵌入式控制器。在主板和嵌入式外围设备（如热键、端口或电池）之间进行通信 PLUG 允许连接 XCPM、Apple XNU 电源管理，以实现更好的整体 CPU 控制 AWAC ACPI Wake Alarm Counter Clock，板的内部时钟，Hackintosh 必须对其进行修补 PMC 电源管理控制器，部分主板需要 SSDT-PMC 来进行修补 PNLF 内部背光显示，macOS 使用此 PNLF 设备发送和接收信息以进行亮度控制 XOSI/_OSI _OSI 用于确定正在启动的操作系统，重命名为 XOSI 允许我们欺骗硬件 HPET 高精度事件定时器，macOS 对设备的设置方式非常挑剔，因此我们有时需要修补 HPET RHUB 根 USB 集线器，其中定义了 USB 端口。 IMEI 英特尔管理引擎接口，处理杂项任务。macOS 依靠 IMEI 来实现 Intel GPU 加速 UNC Uncore Bridge，类似于北桥，它处理许多与缓存相关的功能 SMBS 系统管理总线，用于允许设备之间轻松通信。 UEFI 引导磁盘结构划分 UEFI 相关的概念 UEFI 是 Unified Extensible Firmware Interface（统一可扩展固件接口），可以让 PC 从预启动的操作环境，加载到操作系统上。大家可以理解为 UEFI 是一种系统引导方式，基本上 2010 年后的电脑都是支持 UEFI 引导方式的。 UEFI 引导常配合 GPT 分区表来使用，在 DiskGenius 中，选中磁盘，右键选【转换分区表类型为 GUID 格式】即可将磁盘转换为 GPT 分区表。 EFI 分区是 UEFI 引导必备的一个分区，在磁盘当中的名称一般叫做 ESP 分区，它大多位于磁盘的第 1 个分区，格式可以是 FAT16 也可以是 FAT32 格式，主要用来保存引导文件。安装黑苹果的话，要注意 ESP 的分区得大于 200MB，国光我建议设置为 300MB 基本上足够使用了。 单个硬盘安装单独的 macOS 值得一说的是，这种情况压根不需要我们手动创建 EFI 分区，直接安装的时候选择整个想要安装的磁盘即可，macOS 会自动创建磁盘分区的： 单个硬盘安装 Windows 和 macOS 这个一个 512GB SSD 双系统磁盘划分的情况： C 盘为未来会用作 Windows 的 C 盘，123 GB 一般也足够日常轻度使用了 D 盘到时候用来安装 macOS，353 GB 日常使用也足够了实际上 E 盘这个盘符是临时划分的，实际上他就是 ESP 引导分区，未来 Windows 和 macOS 的引导都会放这里 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:01:20 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"2-启动盘制作/":{"url":"2-启动盘制作/","title":"三、U盘制作","keywords":"","body":"三、启动盘制作 黑苹果安装 U 盘制作的一些知识点，主要包括如下内容： 1. 下载镜像 2. 写入镜像 3. 结构讲解 powered by Gitbook该文章最后修改时间： 2022-02-02 21:33:49 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"2-启动盘制作/2-1.html":{"url":"2-启动盘制作/2-1.html","title":"1. 下载镜像","keywords":"","body":"1. 下载镜像 我们国内黑苹果小兵前辈会经常更新一些懒人镜像，这些镜像很适合小白使用。 大家可以去前辈的博客去下载就行了，双分区、三分区的都是可以的。 如果大家想下载苹果官方的镜像，自己制作的话（不适合小白）可以直接参考 OC 官方文档，国光我就不搬运了，直接贴了地址： Creating the USB | OpenCore Install Guide 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:42 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"2-启动盘制作/2-2.html":{"url":"2-启动盘制作/2-2.html","title":"2. 写入镜像","keywords":"","body":"2. 写入镜像 写入镜像实际上也有很多工具，国光这里推荐一个后来居上的工具 balenaEthcher 官方支持 Windows、macOS、Linux 的版本，下载即可使用。下面简单说下安装制作镜像的方法： 这个软件使用也比较简单，就是上图标记的三步，是不是很简单呢？ 由于国光我手上的这个 U 盘是固态改的，所以几分钟时间就写入完成了，写入成功后的提示信息如下： 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:47 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"2-启动盘制作/2-3.html":{"url":"2-启动盘制作/2-3.html","title":"3. 结构讲解","keywords":"","body":"3. 结构讲解 黑苹果 U 盘制作完成了，下面来大概讲解一下目前 U 盘的结构划分情况，以及作用是啥，话不多说直接看图： macOS 下使用 Hackintool 可以直观的看到磁盘的结构信息： 如果是 Windows 的话，使用经典的磁盘工具 DiskGenius 也是可以看到的。下面来给大家一一展示下这 3 个分区里面放着哪些内容。 挂载 EFI 绝大多数的情况下 EFI 分区默认是隐藏的，我们在 Hackintool 工具下「右键」选择「装载」输入密码后即可挂载 EFI 分区： 挂载 EFI 分区后，桌面上的三个分区就全部显示出来了： EFI 默认 EFI 分区下的文件内容如下： 小兵前辈还放了 2 个 app，我们可以选择性保留。 默认的 EFI 文件夹是 Clover 配套的，所以后续我们需要删掉整个 EFI 文件夹，然后将 OC 的 EFI 拷贝进来。 WEPE 默认 WEPE 分区下的文件内容如下： 这个分区我们一般不用管，虽然这里也有 EFI 文件夹，但是这个是引导 Windows PE 使用的，了解一下就行。 Install macOS Big Sur Install macOS Big Sur 分区下面就躺着苹果官方的系统安装包了，这个实际上是 .app 结尾的格式，苹果的应用基本上都是这个格式，实际上我们后续安装黑苹果成功之后，也可以去 AppStore 里面手动下载这个镜像： 至此，启动盘初步就制作好了，接下来就是我们配置好一个适合我们机型的 EFI 驱动配置文件的事情了，配置好 EFI 直接放入到 U 盘 EFI 分区下即可。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:52 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/":{"url":"3-准备工作/","title":" 四、准备工作","keywords":"","body":"四、准备工作 配置 OC 的一些前戏，主要包括如下内容： 1. BIOS设置 2. OC 文件结构 3. 准备 ACPI 4. 准备 Kexts 5. Drivers说明 6. OC 编辑器 7. 初步配置 8. Kexts 微调 powered by Gitbook该文章最后修改时间： 2022-02-02 21:33:49 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-1.html":{"url":"3-准备工作/3-1.html","title":"1. BIOS设置","keywords":"","body":"1. BIOS设置 以下 BIOS 设置尽量参考一下，因为主板型号凌乱的原因，找不全也是很正常的，尽量靠齐这些设置就行。 Intel 主板 BIOS 设置 关闭 - Disable Fast Boot 快速启动 Secure Boot 安全启动 Serial/COM Port 串行通讯端口 Parallel Port 并行端口 VT-d Intel® Virtualization Technology for Directed I/O (VT-d) 的缩写，I/O 的虚拟化技术 如果找不到的话，配置里面设置 DisableIoMapper 选项为 YES 也是 OK 的 CSM 容性支持模块 Thunderbolt 雷电，安装的时候雷电口没有关容易引发一些玄学问题，建议关掉省事儿 Intel SGX 也叫做 Software Guard Extensions，是Intel 推出的一种基于 CPU 硬件的安全保障机制 Intel Platform Trust 英特尔平台可信技术，主要用于密钥管理（密钥的加密及存储）和安全认证服务 CFG Lock MSR 0xE2 写保护 必须关闭，如果找不到的话，配置里面设置 AppleXcpmCfgLock 选项为 YES 也是 OK 的 开启 - Enable VT-x intel 运用 Virtualization 虚拟化技术中的一个指令集，是CPU的硬件虚拟化技术 Above 4G decoding 4G 以上解码 Hyper-Threading 超线程技术 Execute Disable Bit Intel 新一代处理器的功能，主要做病毒防护使用 DVMT Pre-Allocated: 64MB 分配给DVMT所需要内存大小 EHCI/XHCI Hand-off EHCI/XHCI 切换 OS type: Windows 8.1/10 UEFI Mode 操作系统类型 SATA Mode: AHCI SATA 磁盘启动模式 AMD 主板 BIOS 设置 关闭 - Disable Fast Boot 快速启动 Secure Boot 安全启动 Serial/COM Port 串行通讯端口 Parallel Port 并行端口 Compatibility Support Module (CSM) 容性支持模块，必须关闭 开启 - Enable Above 4G decoding 4G 以上解码 必须打开，如果主板找不到的话，就在 boot-args 启动参数添加 npci=0x2000 也是 OK 的 EHCI/XHCI Hand-off EHCI/XHCI 切换 OS type: Windows 8.1/10 UEFI Mode 操作系统类型 SATA Mode: AHCI SATA 磁盘启动模式 部分主板的参考案例 华擎 AsRock Z490 Steel Legend 钢铁传奇 「高级」-「CPU 配置」-「Intel Hyper Threading Technology」-「开启」 「高级」-「CPU 配置」-「CFG Lock」-「关闭」 「高级」-「CPU 配置」-「Software Guard Extensions（SGX）」-「关闭」 「高级」-「芯片组配置」-「Above 4G Decoding」-「启用」 「高级」-「芯片组配置」-「VT-d」-「禁用」 「高级」-「芯片组配置」-「共享内存」-「64MB」 「高级」-「芯片组配置」-「IGPUA 多监视器」-「启用」 「高级」-「芯片组配置」-「深度睡眠」-「在 S4-S5 中启用」 「高级」-「存储 配置」-「SATA 模式选择」-「AHCI」 「高级」-「Intel(R) Thunderbolt」-「Discrete Thunderbolt(TM) Support」-「关闭」 「高级」-「ACPI 配置」-「挂起到内存」-「自动」 「高级」-「ACPI 配置」-「USB 键盘/远程开机」-「Disabled」 「高级」-「ACPI 配置」-「USB 鼠标开机」-「Disabled」 「高级」-「USB 配置」-「XHCI Hand-off」-「Enabled」 「安全」-「Secure Boot」-「安全引导」-「关闭」 「安全」-「Intel(R) Platform Trust Technology」-「禁用」 「引导」-「闪速启动」-「关闭」 「引导」-「CSM」-「关闭」 驰为 CoreBook X 14 「Advanced」-「Software Guard Extensions（SGX）」-「Disabled」 「Advanced」-「Hyper-Threading」-「Enabled」 「Advanced」-「ACPI Settings」-「Enable Hibernation」-「Enabled」 「Advanced」-「USB Configuration」-「Legacy USB Support」-「Enabled」 「Advanced」-「XHCI Hand-off」-「Enabled」 「Advanced」-「CSM Configuration」-「CSM Support」-「Disabled」 「Chipset」-「Type C Support」-「Platform-POR」 「Chipset」-「System Agent (SA) Configuration」-「VT-d」-「Disabled」 「Chipset」-「Above 4GB MMID BIOS assignment」-「Enabled」 「Chipset」-「Graphics Configuration」-「DVMT Pre-Allocated」-「64MB」 「Chipset」-「PCH-IO Configuration」-「SATA Mode Selection」-「AHCI」 「Security」-「Security Boot」-「Security Boot」-「Disabled」 「Boot」-「Quiet Boot」-「Enabled」 「Boot」-「Fast Boot」-「Disabled」 技嘉 GIGABYTE B360M AORUS PRO BIOS 版本 F3、日期：05/17/2019 【BIOS 功能】-【Windows 8/10】-【其他操作系统】 【BIOS 功能】-【CSM 支持】-【关闭】 【BIOS 功能】-【安全模式】-【Secure Boot Enable】-【关闭】 【集成外设】-【预设启动的显示设备】-【IGFX】（这里用的核显） 【集成外设】-【Intel Platform Trust Technology (PTT)】-【关闭】 【集成外设】-【Software Guard Extension (SGX)】-【关闭】 【集成外设】-【Trusted Computing】-【Security Device Support】-【Disable】 【集成外设】-【Super IO 配置】-【Serial Port】-【关闭】 【集成外设】-【USB 程序】-【Legacy USB Support】-【开启】 【集成外设】-【集成外设】-【XHCI Hand-off】-【开启】 【集成外设】-【集成外设】-【USB Mass Storege Driver Support】-【开启】 【集成外设】-【Network Stack Configuration】-【Network Stack】-【关闭】 【集成外设】-【SATA And RST Configuration】-【SATA Mode Selection】-【AHCI】 【芯片组】-【VT-d】-【关闭】 【芯片组】-【Internal Graphics】-【启动】 【芯片组】-【DVMT Pre-Allocated】-【64M】 【芯片组】-【DVMT Total Gfx Mem】-【256M】 【芯片组】-【4G 以上解码】-【启动】 【芯片组】-【Wake on LAN Enable】-【关闭】 【电源管理】-【平台电力管理】-【关闭】 【电源管理】-【鼠标唤醒】-【双击】 技嘉 GIGABYTE B250M-DS3H BIOS 版本 F9、日期：05/07/2018 【BIOS 功能】-【安全选项】-【系统】 【BIOS 功能】-【快速启动】-【关闭】 【BIOS 功能】-【Windows 8/10】-【其他操作系统】 【集成外设】-【预设启动的显示设备】-【PCIe 插槽1】 设置 IGFX 核显的话，你的显示器插独显，开机进系统都是黑屏 设置 PCIe 插槽的话，你的核显被 Ban 进系统会发现双硬解异常 完美情况就是 设置 IGFX 核显，显示器查主板，进系统后再插独显换回来 虽然上面的操作麻烦了一点，不在意双硬解的话，直接设置 PCIe 插槽，显示器插独显就行 【集成外设】-【SW Guard Extensions（SGX）】-【关闭】 【集成外设】-【Trusted Computing】-【Security Device Support】-【Disable】 【集成外设】-【Super IO 配置】-【Serial Port】-【关闭】 【集成外设】-【USB 程序】-【Legacy USB Support】-【启动】 【集成外设】-【USB 程序】-【XHCI Hand-off】-【启动】 【集成外设】-【SATA And RST 程序】-【SATA Mode Selection】-【AHCI】 【芯片组】-【VT-d】-【关闭】 华硕 ROG STRIX B460 I GAMING 【高级】 - 【CPU 设置】 - 【软件保护扩展（SGX）】- 【关闭】 【高级】 - 【CPU 设置】 - 【Intel VMX 虚拟化技术】 - 【开启】 【高级】- 【北桥】 - 【VT-d】 - 【关闭】 【高级】- 【北桥- 【显示设置】 - 【初始化IGPU】- 【开启】 【高级】-【可信计算-安全设备支持】-【关闭】 【高级】-【PCI Subsystem Settings-大于4G地址空间解码】-【开启】 【启动】- 【CSM-开启CSM】 - 【关闭】 【启动】-【启动设置- 快速启动】- 【关闭】 【启动】-【若出现错误等待按下F1键】-【关闭】 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:50 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-2.html":{"url":"3-准备工作/3-2.html","title":"2. OC 文件结构","keywords":"","body":"2. OC 文件结构 原始文件结构 OpenCore 引导的官方项目地址为：https://github.com/acidanthera/OpenCorePkg 查看最新版本的下载地址为：https://github.com/acidanthera/OpenCorePkg/releases 截止写文章的时间 2021 年 09 月 17 日，最新的 OC 引导为 0.7.3 的版本，所以我们下载 OpenCore-0.7.3-RELEASE.zip 并解压，这样就得到 OC 的最原始的文件了。 下面分别大概说明一下这些目录的作用： Docs：存放 OC 最新的配置文档、版本更新变化、ACPI 示例文件以及 Sample.list 配置文件模板 IA32：里面放着 32 位老机器使用的 EFI 引导文件 Utilities：OC 官方集成的小工具都放在这里 X64： 里面放着 64 位目前主流机器使用的 EFI 引导文件 知道了大概的目录结果的话，下面来详细的介绍一下这些目录里面的文件详细情况。 Docs ~/Downloads/OpenCore-0.7.3-RELEASE/Docs . ├── AcpiSamples # ACPI 示例文件 │ ├── Binaries # 编译好的 ACPI 文件 │ │ ├── SSDT-ALS0.aml │ │ ├── SSDT-AWAC-DISABLE.aml │ │ ... │ └── Source # ACPI 原始文件 │ ├── SSDT-ALS0.dsl │ ├── SSDT-AWAC-DISABLE.dsl │ ... ├── Changelog.md # 版本更新日志 ├── Configuration.pdf # 当期版本的官方配置文档 ├── Differences.pdf # 和上一个版本的改变部分 ├── Sample.plist # 当期版本的配置文件模板 └── SampleCustom.plist # 当期版本的配置文件模板 这里面文件都比较好理解，除了发现貌似 2 个配置文件模板，分别是 Sample.plist 和 SampleCustom.plist，但是国光我对比了一下，发现二者基本上没有差别，理论上都是可使用的，我们普遍使用 Sample.plist 这个配置文件比较多。 Utilities 这个目录下放着一些 OC 官方的小工具，下面来分别介绍一下这些小工具的作用 acdtinfo：检测当前机器的 kexts 安装情况 ACPIe：产生有用的 ACPI 查找跟踪排错使用 CreateVault：里面包含了 RSA 秘钥生成工具和用来创建 Valut 的脚本 disklabel：标签生成小工具，一般也用不到 icnspack：icns 合成制作小工具，想要自己自定义主题的时候可以用得上 kpdescribe：调式 Debug 排错使用，用于恢复堆栈跟踪 LegacyBoot：在旧电脑中模拟 UEFI 环境的工具和脚本 LogoutHook：用于模拟 NVRAM 保存的增强脚本 macrecovery：启动盘制作脚本 macserial：序列号生成工具 ocpasswordgen：OpenCore 密码数据生成工具 ocvalidate：检测 config.list 语法的正确与否 EFI 最后来到了我们的重头戏 EFI 部分，下面是 EFI 主要文件夹的作用讲解： ~/Downloads/OpenCore-0.7.3-RELEASE/X64/EFI . ├── BOOT # 引导文件夹 │ └── BOOTx64.efi # 引导文件 └── OC # OC 文件夹 ├── ACPI # ACPI 存放的文件夹 │ ├── SSDT-EC.aml │ ├── SSDT-PLUG.aml │ │── SSDT-PNLF.aml │ ... ├── Drivers # OC 驱动的文件夹 │ ├── AudioDxe.efi │ ├── CrScreenshotDxe.efi │ ├── HiiDatabase.efi │ ... ├── Kexts # 存放内核拓展 kexts 的文件夹 │ ├── AppleALC.kext │ ├── Lilu.kext │ ├── WhateverGreen.kext │ ... ├── OpenCore.efi # OC 的核心文件 ├── Resources # OC 的主题样式 │ ├── Audio │ ├── Font │ ├── Image │ └── Label └── Tools # OC 小工具文件夹 ├── BootKicker.efi ├── ChipTune.efi ├── CleanNvram.efi ... BOOT BOOT 引导文件夹，下面躺着 BOOTx64.ef 引导文件 OC/ACPI 下面存放这 SSDT 编译好的文件，格式均为 .aml 格式，关于 SSDT 详细的说明可以参考下面的章节 OC/Drivers 这里放着一些驱动文件，这些驱动均已 .efi 后缀结尾，OC 官方默认的驱动文件以及说明如下： AudioDxe.efi：用与启动的时候播放 Duang 的声音，就像白苹果那样 CrScreenshotDxe.efi：OC 引导界面截图驱动，按 F10 会保存当前界面的截图到 EFI 分区的根目录下 HiiDatabase.efi：用于支持 UEFI 字体渲染，四代酷睿后一般不需要 NvmExpressDxe.efi：用于让老主板支持 NVME Express 设备，四代酷睿后一般不需要 OpenCanopy.efi：使用图形化 OC 主题必备驱动 OpenHfsPlus.efi：文件系统驱动，用于支持识别 HFS+ 的磁盘格式 OpenLinuxBoot.efi：OC 0.7.3 新增的驱动，用于引导 Linux 系统 OpenPartitionDxe.efi：分区管理驱动程序。用于加载旧版 macOS 的 DMG 映像 OpenRuntime.efi：OC 核心必备驱动，功能比较强大，大家记住这个是必备的驱动就行 OpenUsbKbDxe.efi：USB 键盘驱动，用于模拟苹果热键，是 KeySupport 的等效方案 Ps2KeyboardDxe.efi：PS/2 键盘驱动，这个 PS/2 键盘也太老了吧，我好多年没见过了 Ps2MouseDxe.efi：PS/2 鼠标驱动，同样也太老了，很多年没有见过了 UsbMouseDxe.efi：USB 鼠标驱动，有些虚拟机需要依赖改驱动才可以在引导界面使用鼠标 XhciDxe.efi：XHCI USB controller 驱动程序，基本上 2 代酷睿开始大多数固件都自带这个驱动程序了 OC/Kexts 这里放着一些 Kexts 内核扩展文件，格式均为 .kext 文件，关于 Kexts 详细的说明可以参考下面的章节 Resources 这里放着 OC 的第三方主题文件，实际上国光我一直用的官方主题，就挺简约的。 Tools OC 小工具文件夹，像下面的 CleanNvram.efi 和 ResetSystem.efi 就是其中的一些小工具： OC 官方自带的工具文件以及说明如下： BootKicker.efi：调用苹果原生的引导切换 GUI, 给白苹果使用的，黑苹果不支持 ChipTune.efi：测试 BeepGen 协议并生成不同风格和长度的音频信号。 CleanNvram.efi：NVRAM 清理工具，实际上 OC 自带的 NVRAM 清理功能已经足够了 ControlMsrE2.efi：检查所有内核的CFG 锁定（MSR 0xE2写保护）一致性，并在更改此类隐藏选项 CsrUtil.efi：简单实现苹果csrutil的 SIP 相关功能 GopStop.efi：停止显卡 GOP，排错时使用用一个简单的场景测试 GraphicsOutput 协议 KeyTester.efi：在 SimpleText 模式下测试键盘输入。 MmapDump.efi：ProvideCustomSlide 选项的必要性 OpenControl.efi：为其他工具提供 NVRAM 保护，以便在从 OC 启动时能够获得完整的 NVRAM 访问权限。 OpenShell.efi：OpenCore 配置的 UEFI Shell ResetSystem.efi：用于执行系统重置的实用程序 RtcRw.efi：用于读取和写入 RTC (CMOS) 存储器的实用程序。 TpmInfo.efi：检查平台上的英特尔 PTT（平台信任技术）功能，如果启用，则允许使用 fTPM 2.0 好了，至此 OpenCore 的文件结构就介绍的差不多了，下面开始学习下 ACPI 的相关知识。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:55 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-3.html":{"url":"3-准备工作/3-3.html","title":"3. 准备 ACPI","keywords":"","body":"3. 准备 ACPI 基本概念 APCI 高级配置与电源接口（Advanced Configuration and Power Interface），是 1997 年由英特尔、微软、东芝共同提出、制定的操作系统电源管理、硬件配置接口，ACPI 定义了系统固件 BIOS 或 UEFI 和操作系统之间的硬件抽象接口。 它帮助操作系统合理控制和分配计算机硬件设备的电量，有 了 ACPI ，操作系统可以根据设备实际情况，根据需要把不同的硬件设备关闭。 它主要涵盖的功能包括： System power management（系统电源管理） Device power management（设备电源管理） Processor power management（处理器电源管理） Device and processor performance management（设备及处理器性能管理） Configuration / Plug and Play（配置/即插即用） System Events（系统事件） Battery management（电池管理） Thermal management（温度管理） Embedded Controller（嵌入式控制器） SMBus Controller（SMBus控制器） 在计算机应用平台，ACPI 越来越重要。ACPI 由很多表组成，包括：RSDP，SDTH，RSDT，FADT，FACS，DSDT，SSDT，MADT，SBST，XSDT，ECDT，SLIT，SRAT。其中 DSDT 就是它的一个重要的描述表。 DSDT 、SSDT 正如上面所说，DSDT 和 SSDT 是 ACPI 规范的一部分，概述了硬件设备，如 USB 控制器、CPU 线程、嵌入式控制器、系统时钟等。 DSDT（差分系统描述表）可以被视为包含大部分信息的主体 SSDT（辅助系统描述表）传递的信息较少 可以将 DSDT 视为建筑蓝图，其中 SSDT 是概述项目额外细节的便签。 黑苹果下一般是先提取 DSDT，然后根据 DSDT 内容来编写对应的 SSDT 来修正 DSDT，当然不使用 SSDT 直接在提起的 DSDT 基础上修改也可以的，就是得进行 DSDT 排错以及代码调整，工程量还是比较大的，不如使用 SSDT 修正起来简约方便。 Why？为什么要知道这些 macOS 可能对 DSDT 中存在的设备非常挑剔，因此我们需要纠正它。macOS 正常工作需要修正的主要设备： EC 嵌入式控制器 非苹果的机型都在其 DSDT 中公开了一个 EC，但是通常与 macOS 不兼容，可能会导致恐慌，因此需要对 macOS 隐藏。 对于笔记本电脑，实际的嵌入式控制器仍然需要启用电池和热键才能工作，并且重命名 EC 还会导致 Windows 出现问题，因此最好在不禁用真正的嵌入式控制器的情况下创建假 EC。 Plugin type 插件类型 允许使用 XCPM 在 Intel Haswell 以及更新架构的 CPU上提供本地 CPU 电源管理，这个不适合 AMD AWAC system clock AWAC 系统时钟 因为 macOS 无法与 AWAC 时钟通信，因此这要求我们要么强制使用传统 RTC 时钟，要么在不可用的情况下为 macOS 创建一个假的时钟来玩 NVRAM SSDT 真正的 300 系列主板（非 Z370）不会在 ACPI 中将 FW 芯片声明为 MMIO，因此内核会忽略 UEFI 内存映射声明的 MMIO 区域。这个 SSDT 带回了 NVRAM 支持 Backlight SSDT 用于修复笔记本电脑上的背光控制支持 GPIO SSDT 用于允许 VoodooI2C 连接，仅适用于笔记本电脑 XOSI SSDT 用于将 OSI 调用重新路由到此 SSDT，主要用于诱使我们的硬件认为其启动 Windows，以便我们获得更好的触控板支持 IRQ SSDT and ACPI patches 用于修复 DSDT 中的 IRQ 冲突，主要用于笔记本电脑。SSDT Time 独占 注意 Skylake 和较新的 CPU 很少有 IRQ 冲突，这主要在 Broadwell 和较旧的系统上使用 常见 ACPI 组合 ACPI 可以自己手动编译，也可以下载别人编译好的，虽然自己编译是最完美的，但是需要一定的学习门槛，所以小白用户还是建议下载编译好的 SSDT 文件即可。 下面可以根据自己的机型，参考下文，下载属于自己的 ACPI 文件即可。 下载不了的话是因为 Github 被国内墙掉的缘故，下面是几个解决方法思路： 使用电信网络访问下载 挂代理去下载 使用 Github 镜像站点下载 使用别人已配置好的 EFI 文件夹里面的文件，直接拿来使用 办法总比困难多，不要遇到一点点小挫折就放弃 Intel 桌面 Penryn、Younah、Conroe SSDT-EC-DESKTOP.aml Lynnfield、Clarkdale SSDT-EC-DESKTOP.aml SandyBridge、Ivy Bridge CPU-PM.aml 电源管理使用 需要自己脚本生成，比较老了，可以参考 Sandy and Ivy Bridge Power Management 生成后需要配合 ACPI 补丁：Delete CpuPm、Delete Cpu0Ist SSDT-EC-DESKTOP.aml SSDT-IMEI.aml 修复 Ivy Bridge CPU 与 6 系列主板混合的问题 修复 Sandy Bridge CPU 与 7 系列主板混合的问题 Hasewell、Broadwell SSDT-PLUG-DRTNIA.aml SSDT-EC-DESKTOP.aml Skylake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-DESKTOP.aml Kaby Lake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-DESKTOP.aml Coffee Lake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-DESKTOP.aml SSDT-AWAC.aml 修复较新硬件上的系统时钟 支持以下主板： B360、B365、H310、H370 Z370（具有较新 BIOS 版本的 Gigabyte 和 AsRock 主板） Z390 B460、Z490 400系列 （Comet Lake） 495系列 （Ice lake） Comet Lake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-DESKTOP.aml SSDT-AWAC.aml 修复较新硬件上的系统时钟 支持以下主板： B360、B365、H310、H370 Z370（具有较新 BIOS 版本的 Gigabyte 和 AsRock 主板） Z390 B460、Z490 400系列 （Comet Lake） 495系列 （Ice lake） SSDT-RHUB.aml 修复某些 OEM主板的问题，需要关闭 RHUB 设备并强制 macOS 手动重建端口 华硕 Z490 需要这个 SSDT 微星主板有待测试 技嘉和华擎主板工作很好，不需要这个 SSDT Intel 笔记本 Clarksfield、Arrandale SSDT-EC-LAPTOP.aml SSDT-XOSI.aml 触控板连接修复，默认工作在轮询模式 需要配合 ACPI 补丁：Change _OSI to XOSI 来使用 NUC 不需要这个 SSDT-PNLF.aml 修复笔记本亮度控制，NUC 不需要这个 Sany Bridge、Ivy Bridge CPU-PM.aml 电源管理使用 需要自己脚本生成，比较老了，可以参考 Sandy and Ivy Bridge Power Management 生成后需要配合 ACPI 补丁：Delete CpuPm、Delete Cpu0Ist SSDT-EC-LAPTOP.aml SSDT-XOSI.aml 触控板连接修复，默认工作在轮询模式 需要配合 ACPI 补丁：Change _OSI to XOSI 来使用 NUC 不需要这个 SSDT-PNLF.aml 修复笔记本亮度控制，NUC 不需要这个 SSDT-IMEI.aml 修复 Ivy Bridge CPU 与 6 系列主板混合的问题 修复 Sandy Bridge CPU 与 7 系列主板混合的问题 Haswell、Broadwell SSDT-PLUG-DRTNIA.aml SSDT-EC-LAPTOP.aml SSDT-XOSI.aml 触控板连接修复，默认工作在轮询模式 需要配合 ACPI 补丁：Change _OSI to XOSI 来使用 NUC 不需要这个 如果这个不成功的话，可手动使用 MaciASL 编译 SSDT-GPI0.dsl.zip 来替代 XOSI SSDT-PNLF.aml 修复笔记本亮度控制，NUC 不需要这个 Skylake、Kaby Lake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-LAPTOP.aml SSDT-XOSI.aml 触控板连接修复，默认工作在轮询模式 需要配合 ACPI 补丁：Change _OSI to XOSI 来使用 NUC 不需要这个 如果这个不成功的话，可手动使用 MaciASL 编译 SSDT-GPI0.dsl.zip 来替代 XOSI 但是 SSDT-GPI0 这种属于触控板进阶教程了，小白很难上手 感兴趣的朋友可以参考这个：触控板中断示例 SSDT-PNLF.aml 修复笔记本亮度控制，NUC 不需要这个 Coffee Lake、Whiskey Lake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-LAPTOP.aml SSDT-XOSI.aml 触控板连接修复，默认工作在轮询模式 需要配合 ACPI 补丁：Change _OSI to XOSI 来使用 NUC 不需要这个 如果这个不成功的话，可手动使用 MaciASL 编译 SSDT-GPI0.dsl.zip 来替代 XOSI 但是 SSDT-GPI0 这种属于触控板进阶教程了，小白很难上手 感兴趣的朋友可以参考这个：触控板中断示例 SSDT-PNLF.aml 修复笔记本亮度控制，NUC 不需要这个 SSDT-AWAC.aml 修复较新硬件上的系统时钟 支持以下主板： B360、B365、H310、H370 Z370（具有较新 BIOS 版本的 Gigabyte 和 AsRock 主板） Z390 B460、Z490 400系列 （Comet Lake） 495系列 （Ice lake） Coffee Lake Plus、Comet Lake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-LAPTOP.aml SSDT-XOSI.aml 触控板连接修复，默认工作在轮询模式 需要配合 ACPI 补丁：Change _OSI to XOSI 来使用 NUC 不需要这个 如果这个不成功的话，可手动使用 MaciASL 编译 SSDT-GPI0.dsl.zip 来替代 XOSI 但是 SSDT-GPI0 这种属于触控板进阶教程了，小白很难上手 感兴趣的朋友可以参考这个：触控板中断示例 SSDT-PNLF.aml 修复笔记本亮度控制，NUC 不需要这个 SSDT-AWAC.aml 修复较新硬件上的系统时钟 支持以下主板： B360、B365、H310、H370 Z370（具有较新 BIOS 版本的 Gigabyte 和 AsRock 主板） Z390 B460、Z490 400系列 （Comet Lake） 495系列 （Ice lake） SSDT-PMC.aml 用来支持适配 NVRAM 300 系列主板都需要此 SSDT（Z370除外） 支持以下主板： B360、B365 H310、H370（HM370 应该不需要这个） Z390 Ice Lake SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-LAPTOP.aml SSDT-XOSI.aml 触控板连接修复，默认工作在轮询模式 需要配合 ACPI 补丁：Change _OSI to XOSI 来使用 NUC 不需要这个 如果这个不成功的话，可手动使用 MaciASL 编译 SSDT-GPI0.dsl.zip 来替代 XOSI 但是 SSDT-GPI0 这种属于触控板进阶教程了，小白很难上手 感兴趣的朋友可以参考这个：触控板中断示例 SSDT-PNLF.aml 修复笔记本亮度控制，NUC 不需要这个 SSDT-AWAC.aml 修复较新硬件上的系统时钟 支持以下主板： B360、B365、H310、H370 Z370（具有较新 BIOS 版本的 Gigabyte 和 AsRock 主板） Z390 B460、Z490 400系列 （Comet Lake） 495系列 （Ice lake） SSDT-RHUB.aml 需要修复许多 Icelake 笔记本电脑上的根设备错误 Intel 高端桌面 Nehalem、Westmere SSDT-EC-DESKTOP.aml Sandy Bridge-E、Ivy Bridge-E SSDT-EC-DESKTOP.aml SSDT-UNC.aml 禁用 ACPI 中未使用的设备，确保 IOPCIFamily 不会出现内核恐慌 所有的 X99 主板和大多数 X79 主板需要这个 SSDT 此外还有一些 C602、C612 主板也需要这个 SSDT Haswell-E、Broadwell-E SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-DESKTOP.aml SSDT-RTC0-RANGE-HEDT.aml Big Sur 需要确保 RTC 设备的兼容 SSDT-UNC.aml 禁用 ACPI 中未使用的设备，确保 IOPCIFamily 不会出现内核恐慌 所有的 X99 主板和大多数 X79 主板需要这个 SSDT 此外还有一些 C602、C612 主板也需要这个 SSDT Skylake-X/W、Cascade Lake-X/W SSDT-PLUG-DRTNIA.aml SSDT-EC-USBX-DESKTOP.aml SSDT-RTC0-RANGE-HEDT.aml Big Sur 需要确保 RTC 设备的兼容 AMD 桌面 Bulldozer(15h)、Jaguar(16h) SSDT-EC-USBX-DESKTOP.aml Ryzen、Threadripper(17h and 19h) SSDT-EC-USBX-DESKTOP.aml SSDT-CPUR.aml 用于 B550 和 A520 主板修复 CPU 定义，其他主板可以不使用 X570 和较旧的主板不需要此 SSDT 黑苹果 ACPI 大全? 由于 ACPI 太多了，国光我不可能都列的很全，而且有些 SSDT 作用网上没有权威解释，所以下面的解释说明也会有误差，仅做参考使用，如果内容方面有所遗漏或者发现严重错误的话，欢迎 Github 提交 PR 补充： 序号 SSDT 文件名 解释说明 1 FixShutdown-USB-SSDT.aml 修复 USB 控制器，解决睡眠或者关机自动重启 2 Spoof-SSDT.aml 禁用 GPU 3 SSDT-ALS0.aml 添加虚拟的环境光传感器以在重启后保存之前亮度设置 4 SSDT-ARTC.aml 修复在较新的硬件上找到的系统时钟。OCC 自带的 5 SSDT-AWAC.aml 300 系列主板使用， 6 SSDT-BAT.aml ThinkPad 等型号的电池补丁 7 SSDT-BKey.aml 早期的亮度调节使用 8 SSDT-BRG0.aml BIOS 没有 Serial(COM) Port 串口或者找不到禁用 Super IO 的话可能需要 9 SSDT-CPUR.aml 能源管理，针对 AMD B550 和 A520 主板，X570 等较旧的主板不要使用 10 SSDT-EC-DESKTOP.aml 老的桌面平台使用，用于修复嵌入式控制器 11 SSDT-EC-LAPTOP.aml 老的笔记本平台使用，用于修复嵌入式控制器 12 SSDT-EC-USBX-DESKTOP.aml 新的桌面平台使用，用于修复嵌入式控制器 13 SSDT-EC-USBX-LAPTOP.aml 新的笔记本平台使用，用于修复嵌入式控制器 14 SSDT-EHCx_OFF.aml USB 兼容性表，禁用EHC1和EHC2。OCC 自带的 15 SSDT-NoHybGfx.aml 屏蔽独显 16 SSDT-GPI0.aml 触控板连接修复。OCC 也自带的 17 SSDT-GPRW.aml 修复睡眠自动唤醒补丁 18 SSDT-HPET.aml 主要用于 X79、X99 和笔记本电脑用户的 IRQ 补丁 19 SSDT-HV-CPU.aml 对 macOS 的 Hyper-V 集成支持 20 SSDT-HV-PLUG.aml 对 macOS 的 Hyper-V 集成支持 21 SSDT-HV-VMBUS.aml 对 macOS 的 Hyper-V 集成支持 22 SSDT-IMEI-S.aml 当 DSDT 中没有 IMEI 设备需要通过设备属性设置定义设备 ID 的时候才需要 23 SSDT-IMEI.aml 当 DSDT 中没有 IMEI 设备需要通过设备属性设置定义设备 ID 的时候才需要 24 SSDT-IRQ.aml 修复 IRQ 冲突 25 SSDT-LANC.aml 修复睡眠自动唤醒补丁 26 SSDT-LIDpatch.aml 合盖睡眠 27 SSDT-NDGP.aml 屏蔽独显 28 SSDT-OLARILA.aml 作用不详 来自于 Olaria.com 的特殊 SSDT 29 SSDT-GPU-SPOOF.aml AMD R9 系列仿冒使用，详细可参考 OC 教程 30 SSDT-PLUG_FX.aml 可能是 AMD FX 系列专用的 CPU 能源管理 31 SSDT-PLUG_RYZEN.aml 可能是 AMD Ryzen 系列专用的 CPU 能源管理 32 SSDT-PLUG-DRTNIA.aml 用于 Hasewell 和更新 CPU 的能源管理 33 SSDT-PMC.aml 300 系列主板原生的 NVRAM 补丁 34 SSDT-PNLF-CFL.aml Coffee Lake 和更新平台的笔记本背光修复补丁 35 SSDT-PNLF.aml 大多数主板的背光修复补丁 36 SSDT-PTSWAK.aml 修复关机、睡眠问题 37 SSDT-RHUB.aml 修复某些 400 系列主板的问题，需要关闭 RHUB 设备并强制 macOS 手动重建端口 38 SSDT-RTC0-RANGE-HEDT.aml 高端桌面平台专用，因为Big Sur 需要确保 RTC 设备的兼容 39 SSDT-SBUS-MCHC.aml 修复 SMBus 支持，解决 温度、风扇、电压等读数问题 40 SSDT-GPU-R9-370.aml AMD R9 370 的仿冒，实际替换成自己的实际路径使用 41 SSDT-ThinkPad_ClickPad ThinkPad 的 ClickPad 专用 42 SSDT-UNC.aml 禁用 ACPI 中未使用的设备，确保 IOPCIFamily 不会出现内核恐慌 43 SSDT-UPRW.aml 修复睡眠自动唤醒补丁 44 SSDT-USB3-1-XHC2.aml ASMedia ASM1142 USB 3.1 Type-A 和 Type-C 一体的 USB 专用 45 SSDT-SSCN.aml 某些 I2C 触控板轮询失败的情况下可以考虑使用看看 46 SSDT-XHC2.aml 自动注入 XHC 属性？ 47 SSDT-XOSI.aml 触控板连接修复，模拟 Windows 版本的 Darwin，需要配合补丁 48 SSDT-RP.PXSX-disbale.aml 屏蔽 NVME 硬盘补丁示例，记得替换自己电脑的实际硬盘路径 49 SSDT-PLUG-ALT.aml 12 代 CPU 大小核调度 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:02 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-4.html":{"url":"3-准备工作/3-4.html","title":"4. 准备 Kexts","keywords":"","body":"4. 准备 Kexts 基本概念 Kext 的英文全称叫做 Kernel Extension，即内核扩展，我们可以通俗的理解为这个就是 macOS 的驱动，使用方法只需要将这些 kext 文件放入到 EFI/OC/kexts 文件夹下面，然后编辑 OC 配置文件加载这些 kexts 并调节好顺序即可。 下载 Kexts 下面国光来简单列举一些下载 Kexts 的方法： 使用 OpenCore Configurator 这类第三方 OC 编辑器软件下载 搜索引擎搜索 Kexts 的Github 下面地址，手动去 Releases 里面寻找编译好的 kext 文件 使用 OC 官方的下载页面来下载常见的 kexts：https://dortania.github.io/builds/ 下载不了的话是因为 Github 被国内墙掉的缘故，下面是几个解决方法思路： 使用电信网络访问下载 挂代理去下载 使用 Github 镜像站点下载 使用别人已配置好的 EFI 文件夹里面的文件，直接拿来使用 办法总比困难多，不要遇到一点点小挫折就放弃 Kexts 的分类 必备驱动 必备的 kexts 如果缺失的话，你的黑苹果系统就无法启动了 VirtualSMC.kext 模拟白苹果的 SMC 芯片 替代古老的 FakeSMC 只支持 OS X 10.6+ 版本的系统 Lilu.kext 很多著名 kexts 的依赖，没有 Liu 就无法正常使用 AppleALC、WhateverGreen、VirtualSMC 等 只支持 OS X 10.8+ 版本的系统 VirualSMC 插件 大家下载好 VirtualSMC 编译好的 kexts 的话，会发现里面还躺着其他的 kexts，这些其他的 kexts 就是 VirtualSMC 的插件了，下面来列举说明一下这些插件的作用： SMCBatteryManager.kext 笔记本专用，用于正确读取显示电池容量 SMCDellSensors.kext 某些 Dell 机器专用，一般不是 Dell 的机器不需要使用 对支持 SMM（系统管理模式）的 Dell 机器的风扇进行更准确的监视和控制 SMCLightSensor.kext 笔记本专用，用于笔记本电脑上的环境光感应器 大多都的笔记本都没有这个感应器，所以就算用了也只是伪感光 SMCProcessor.kext 用于监控 CPU 温度，台式机和笔记本都适用 不支持 AMD 的 CPU SMCSuperIO.kext 用于监控风扇的转速，台式机和笔记本都适用 不支持 AMD 的 CPU 显卡驱动 WhateverGreen.kext 基本上所有的核显和独显都要使用这个 kext 用于图形修补、DRM 修复、缓冲区修复等 只支持 OS X 10.8+ 版本的系统 声卡驱动 AppleALC.kext 用于 AppleHDA 修补，支持大多数的板载声卡驱动 文件夹下的 AppleALCU.kext 是 AppleALC 的精简版，仅支持数字音频 AMD 的主板和 CPU 可能会遇到一些问题，很少可以驱动麦克风 只支持 OS X 10.8+ 版本的系统 详细的支持原生驱动的声卡列表可参考：黑苹果声卡的驱动情况表以及 layouts id 情况 注入此驱动后只需要在启动项（boot-args）里面添加 alcid=xxxx 这种形式即可 VoodooHDA.kext 比较古老且经典的声卡驱动，也叫万能声卡驱动 如果 AppeALC.kext 无法驱动话可以考虑这个 但是使用体验完美度肯定不如原生的 AppleALC.kext 的 只支持 OS X 10.6+ 版本的系统 USB 驱动 USBToolBox.kext 与 UTBMap.kext USBToolBox.kext 官方下载地址为：https://github.com/USBToolBox/kext/releases UTBMap.kext 需要参考 USB 定制教程自己生成 建议安装系统前先定制一下 USB，避免后面遇到不必要的麻烦 到 macOS 11 后面的版本的时候，传统的 USB 驱动定制的方法已经不再好用了，目前最完美的方法就是 Windows 下使用 USBToolBox 来定制 USB，最后再使用 Hackintool 简单微调修正一下。 下面是老的教程，不删掉，留着纪念参考。 USB 驱动只是最基础的 kexts，很多情况下你的主板还需要单独定制 USB 才可以让各个接口正常工作。关于 USB 定制可以参考后面 XHCI-unsupported.kext 如果你的主板不是 macOS 原生支持的 USB 驱动的话需要这个 常用于 400系列及其以上的主板 如果你定制了 USB 后但是发现所以 USB 3.0 都无法工作的话也需要这个 USBInjectAll.kext RehabMan 康复者之前的 USB 驱动 18 年 11 月发布的 0.7.1 是最后应该版本，后面再没有更新过 用于在 ACPI 中没有定义 USB 端口的系统上注入 Intel USB 控制器 Skylake+ 的桌面CPU 不需要这个 AsRock 华擎主板的话可能还是需要这个 Coffee Lake 貌似也还是需要这个 Skykak 之前的 CPU 理论上也是需要 支持 OS X 10.11+ 版本的系统 写到这里的时候感慨万千，RehabMan 可以说是黑苹果届的元老了，他也是 Tonymacx86 的一位版主，很多著名的黑苹果 kexts 都出自于他的手里，但是因为种种原因 18 年之后就再也没有活跃了，销声匿迹仿佛这个人没有来过一样，但是江湖上依然还有他的传说：Can we all thank RehabMan 我真的是太佩服这种人了，十年如一日的在论坛里面解答问题，定期更新这开源的 kexts，甚至有些 Apple 苹果开发者都来像他学习。黑苹果比较讽刺的是，伸手党没有感恩之心的人太多了，也许他安装系统遇到困难的时候就去你的 Github 下面提交 issue 催着你更新，就好像你开源这个驱动就要为他负责到底一样；安装成功之后呢，提问的人也就消失了，甚至连句谢谢都没有说，更不会留下任何有价值的文档信息之类的。这样就会导致很多大佬们每天千篇一律的回答各种重复的毫无技术含量的问题，如果是国光我的话，我肯定坚持不了几天的，但是 RehabMan 坚持了 10 余年，这真的是太令人震撼了。RehabMan 在 TonymacX86 的最后一个帖子说道：“我还在，但忙于其他（现实生活）的事情。将无法回答这里的问题。人是需要学习阅读的。” 但愿，希望真的如此，而不是被这些没有感恩之心的人伤透了心。 USBInjectAll.kext 国内黑苹果小兵大佬维护的版本 在 RehabMan 基础性更新完善的版本，目前到了 0.7.7 版本 支持后面新的 400、500 系列主板的支持 ~~说到黑苹果小兵，国光我也很佩服这样的人，初次接触认识他的时候，我还以为是一个 30 多岁的中年人，结果后面才知道他的儿子已经上大学了，而且他也快到了退休的年龄。 黑果小兵也像 RehabMan 一样，写了很多黑苹果教程文章，也开源了很多机型的驱动，而且常年来一直坚持提供黑苹果懒人镜像的下载包，最关键的是都快退休的年龄了，还坚持做黑苹果这个比较“时髦”的技术，真的厉害了，不知道国光我老的时候，还可以坚持做这些吗？哈哈~ 如果黑苹果技术还存在的话。 有线网卡驱动 AtherosE2200Ethernet.kext Atheros 高通和 Killer 杀手 网卡 需要 注意：Atheros Killer E2500 型号实际上是基于 Realtek 的，所以请使用 RealtekRTL8111 驱动 支持 OS X 10.8+ 版本的系统 IntelMausi.kext 大多数 Intel 因特尔的网卡驱动 基于 I211 的芯片组的网卡需要使用 SmallTreeIntel82576 kext 官方支持 Intel 的 82578、82579、I217、I218 和 I219 网卡 详细支持驱动的有线网卡型号可以参考：https://github.com/acidanthera/IntelMausi 需要 OS X 10.9 或更新版本，10.6-10.8 的老用户可以使用 IntelSnowMausi 替代 LucyRTL8125Ethernet.kext Realtek 的 2.5Gb 的网卡驱动 官方这个页面需要注册才可以下载，也可以下载国光我上传蓝奏云的版本 需要 macOS 10.15+ 版本的系统 RealtekRTL8111.kext 大多数 Realtek 的千兆网卡驱动 注意：有时最新版本的 kext 可能无法正常工作，这个时候可以尝试使用旧版本。 SmallTreeIntel82576.kext I211 有线网卡驱动 大多数配备 intel 有线网卡的 AMD 主板需要 版本支持情况 OS X 10.9-12(v1.0.6)、macOS 10.13-14(v1.2.5)、macOS 10.15+(v1.3.0) 其他不需要 kext 的有线网卡 Intel I225-V 某些高端的 Comet Lake 主板会配备这个 I225-V 2.5GBe 有线网卡 这个网卡比较坑爹，不同版本的驱动方式都有变化 如果这个网卡驱动不正常的话，进系统几分钟之后就死机黑屏重 驱动方法参考 QA 教程的第 12 个 Intel I350 OC 配置文件的设备属性里面添加 PciRoot(0x0)/Pci(0x1,0x1)/Pci(0x0,0x0) 内容如下： device-id 33150000 类型为 DATA 类型 需要 OS X 10.10 或更新版本 一些比较古老的百兆有线网卡驱动 AppleIntelE1000e.kext 主要与基于 10/100MBe 的 Intel 有线网卡相关 需要 10.6 或更高版本 RealtekRTL8100.kext 支持的网卡型号有 RTL8101E、RTL8102E、RTL8103E、RTL8401E、RTL8105E、RTL8402、RTL8106E、RTL8106EUS、RTL8107E 官方这个页面需要注册才可以下载，也可以下载国光我上传蓝奏云的版本 BCM5722D.kext Broadcom 的有线网卡驱动 支持的网卡型号有 BCM5722、BCM5754、BCM5754M、BCM5755、BCM5755M、BCM57788、BCM5787、BCM5787M、BCM5906、BCM5906M 需要 OS X 10.6 或更新版本 无线网卡驱动 intel 无线网卡系列 国内 zxystd 大佬从 Linux OpenBSD 移植的驱动，非常硬核，完成度很高，接力也都可以正常使用，隔空投送目前只能识别，暂时还无法传输文件，不过已经很厉害了。 AirportItlwm.kext Intel 网卡的 WiFi 驱动 支持驱动的 intel 无线网卡型号表：https://docs.oiw.workers.dev/itlwm/Compat.html 只支持 macOS 10.13 以及更高的版本 IntelBluetoothFirmware.kext 与 IntelBluetoothFirmware.kext Intel 网卡的蓝牙驱动，与 AirportItlwm.kext 搭配使用 只支持 macOS 10.13 以及更高的版本 如果确定你的网卡型号支持驱动，但是蓝牙无法使用，那么多半是你的 USB 没有定制好 macOS 12 后蓝牙驱动的姿势又有小变化，详细可参考：macOS 12 蓝牙 Broadcom 博通免驱系列 免驱网卡型号众多，可以参考 OC 官方的无线网卡购买指南 AirportBrcmFixup.kext 非苹果原装无线网卡或者非 Fenvi 奋威的博通网卡的无线网卡驱动 支持 OS X 10.10 以及更高的版本 Big Sur 后面的系统可能有些问题，可以参考官方的解决方案 BrcmPatchRAM 系列 所有非 Apple/非 Fenvi 无线网卡的蓝牙驱动 BrcmPatchRAM.kext 10.8-10.10 系统使用 BrcmPatchRAM2.kext 10.11-10.14 系统使用 BrcmPatchRAM3.kext 10.15+的系统使用 博通网卡的几个细节，Big Sur 以及后面的系统由于驱动有点异常，需要手动删除 AirPortBrcm4360_Injector.kext 蓝牙加载需要一定顺序，下面是 10.15+ 系统的蓝牙加载顺序 `Kernel -> Add `： BrcmBluetoothInjector.kext BrcmFirmwareData.kext BrcmPatchRAM3.kext macOS 12 后蓝牙驱动的姿势又有小变化，详细可参考：macOS 12 蓝牙 AMD 显卡传感器 RadeonSensor.kext 和 SMCRadeonGPU.kext 从 Radeon VII 开始，Apple 停止直接报告温度，需要 kexts 介入并实施该功能 对于 Vega 10 及更早版本，其他工具已经可以显示 GPU 温度，而无需额外的 kext 支持从 Radeon HD 7000 系列到 RX 6000 系列的所有 GPU RadeonSensor.kext：读取 GPU 温度所需，需要 Lilu SMCRadeonGPU.kext：可以选择用于将 GPU 温度导出到 VirtualSMC 以供监控工具读取 RadeonGadget.app：在状态栏中显示 GPU 温度，只需要加载 RadeonSensor.kext 其他驱动 VoodooPS2Controller.kext 如果你的台式机安装界面键盘或者鼠标不能使用的话，记得打这个 kext 适用于配备 PS2 键盘、鼠标和触控板的系统 MT2 (Magic Trackpad 2) 功能需要 macOS 10.11 或更新版本 CpuTscSync.kext 在某些 Intel 的 HEDT 和服务器主板上同步 TSC 需要,如果没有这个 macOS 可能会非常慢甚至无法启动。 不适用于 AMD CPU 需要 OS X 10.8 或更新版本 为具有MSR_IA32_TSC_ADJUST(03Bh) 的CPU 添加了 macOS 12 兼容性 NVMeFix.kext 用于修复非 Apple 苹果的 NVMe 上的电源管理和初始化 需要 macOS 10.14 或更高版本 HibernationFixup.kext 一个旨在修复休眠兼容性问题的 Lilu 插件 解决黑苹果系统睡眠后无法唤醒、死机、黑屏的问题 SATA-unsupported.kext 笔记本电脑 在 macOS 中无法看到 SATA 硬盘驱动器的话，可以考虑使用 CtlnaAHCIPort.kext 一般在 Big Sur 下笔记本电脑 在 macOS 中无法看到 SATA 硬盘驱动器的话，可以考虑使用 AMD 常用驱动 AMDRyzenCPUPowerManagement.kext AMD 处理器的电源管理驱动 SMCAMDProcessor.kext AMD 处理器的传感器监控和 VirtualSMC 插件 AppleMCEReporterDisabler.kext 用于关闭 AppleMCERReport AppleMCERReport会导致AMD CPU的内核崩溃 某些双 CPU 的主板可能也有帮助 受影响的 SMBIOS 为：MacPro6,1、MacPro7,1、iMacPro1,1 需要 macOS 10.15 或更高版本 XLNCUSBFix.kext AMD FX 系统的 USB 修复，不推荐用于 Ryzen 需要 macOS 10.13 或更高版本 VoodooHDA.kext FX 系统的音频和 Ryzen 系统的前面板麦克风和外放的支持 请勿与 AppleALC 混合使用 比较古老且经典的声卡驱动，也叫万能声卡驱动 如果 AppeALC.kext 无法驱动话可以考虑这个 但是使用体验完美度肯定不如原生的 AppleALC.kext 的 只支持 OS X 10.6+ 版本的系统 笔记本常用驱动 输入设备驱动 VoodooPS2Controller.kext 适用于配备 PS2 键盘、鼠标和触控板的系统 MT2 (Magic Trackpad 2) 功能需要 macOS 10.11 或更新版本 RehabMan 的 VoodooPS2Controller.kext 对于带有 PS2 键盘、鼠标和触控板的旧系统，或者当您不想使用 VoodooInput 时 支持 macOS 10.6+ 支持 VoodooRMI.kext 和 VoodooSMBus.kext 对于带有 Synaptics SMBus 设备的触控板驱动 主要用于触控板和轨迹点，ThinkPad 小红点也可以驱动 MT2 (Magic Trackpad 2) 功能需要 macOS 10.11 或更新版本 VoodooSMBus.kext 对于带有基于 ELAN SMBus 的设备触控板驱动 主要用于触控板和轨迹点 目前支持 macOS 10.14 或更新版本 VoodooI2C.kext 用于修复 I2C 设备的触控板驱动 一般是一些更高级的触摸板和或者是触摸屏 MT2 (Magic Trackpad 2) 功能需要 macOS 10.11 或更新版本 这个经常 PS2 的 Kexts 使用，需要微调才可以，否则可能会报错，详情可见：Kexts 微调 VoodooI2C 的一些插件 VoodooI2CHID.kext：微软 HID 驱动，也支持某些型号的触控屏 VoodooI2CELAN.kext：ELAN 专用，ELAN1200+ 的版本需要 VoodooI2CHID.kext 代替 VoodooI2CSynaptics.kext：Synaptics 专用，Synaptics F12 协议需VoodooI2CHID代替 VoodooI2CFTE.kext：FTE1001 触控板 VoodooI2CAtmelMXT.kext：Atmel 多点触控协议 使用前先确定你的触控板型号，一般笔记本只需要使用 1 个对应的 kext 即可 其他驱动 ECEnabler.kext 修复了在大多数笔记本上读取电池状态的问题（允许读取超过 8 位长的 EC 字段） BrightnessKeys.kext 笔记本亮度快捷键驱动 AsusSMC.kext 华硕笔记本电脑专用的 VirtualSMC 插件 提供 ALS、键盘背光和 Fn 键驱动，支持电池监控充电 支持配备了 ATK 设备的华硕笔记本电脑 CPUFriend.kext 和 CPUFriendDataProvider.kext 可以实现对 macOS CPU 频率睿频性能的调整 需要配合脚本生成时候自己机型的 kexts，可参考官方教程 RealtekCardReaderFriend.kext 和 RealtekCardReader.kext 适用于 macOS 的 Realtek 读卡器驱动程序 RealtekCardReaderFriend.kext RealtekCardReader.kext 两个 Kexts 同时搭配使用即可，且需要依赖 Lilu 1.4.7+ 的版本才可以 黑苹果 Kexts 大全? 由于 Kexts 太多太杂了，这个工作量太大了，我直接贴一些轮子的地址，大家自己去看看就行： OpenCore 常用 Kexts 一些比较老的 Kexts 一些基于Liu 的 Kexts 如果你是一个有耐心的人的话，如果整理好 Kexts 完整列表的话，欢迎提交 PR 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:08 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-5.html":{"url":"3-准备工作/3-5.html","title":"5. Drivers说明","keywords":"","body":"5. Drivers说明 完整的 Drivers 说明 OC/Drivers 里放着一些驱动文件，这些驱动均已 .efi 后缀结尾，OC 官方默认的驱动文件以及说明如下： AudioDxe.efi：用与启动的时候播放 Duang 的声音，就像白苹果那样 CrScreenshotDxe.efi：OC 引导界面截图驱动，按 F10 会保存当前界面的截图到 EFI 分区的根目录下 HiiDatabase.efi：用于支持 UEFI 字体渲染，四代酷睿后一般不需要 NvmExpressDxe.efi：用于让老主板支持 NVME Express 设备，四代酷睿后一般不需要 OpenCanopy.efi：使用图形化 OC 主题必备驱动 OpenHfsPlus.efi：文件系统驱动，用于支持识别 HFS+ 的磁盘格式 OpenLinuxBoot.efi：OC 0.7.3 新增的驱动，用于引导 Linux 系统 OpenPartitionDxe.efi：分区管理驱动程序。用于加载旧版 macOS 的 DMG 映像 OpenRuntime.efi：OC 核心必备驱动，功能比较强大，大家记住这个是必备的驱动就行 OpenUsbKbDxe.efi：USB 键盘驱动，用于模拟苹果热键，是 KeySupport 的等效方案 Ps2KeyboardDxe.efi：PS/2 键盘驱动，这个 PS/2 键盘也太老了吧，我好多年没见过了 Ps2MouseDxe.efi：PS/2 鼠标驱动，同样也太老了，很多年没有见过了 UsbMouseDxe.efi：USB 鼠标驱动，有些虚拟机需要依赖改驱动才可以在引导界面使用鼠标 XhciDxe.efi：XHCI USB controller 驱动程序，基本上 2 代酷睿开始大多数固件都自带这个驱动程序了 常用 Drivers 正常情况下，以下 2 个是必备的驱动： OpenRuntime.efi：OC 核心必备驱动，功能比较强大，大家记住这个是必备的驱动就行 OpenHfsPlus.efi：文件系统驱动，用于支持识别 HFS+ 的磁盘格式 因为国光有使用图形化界面引导和在引导界面截图的习惯，所以我还使用了如下两个驱动： OpenCanopy.efi：使用图形化 OC 主题必备驱动 CrScreenshotDxe.efi：OC 引导界面截图驱动，按 F10 会保存当前界面的截图到 EFI 分区的根目录下 使用主题前后对比 使用主题前 使用主题后 一些 OC 主题下载的渠道： https://dortania.github.io/OpenCanopy-Gallery/blackosx.html OC主题-黑苹果动力 https://github.com/LuckyCrack/OpenCore-Themes https://github.com/chris1111/My-Simple-OC-Themes 主题自定义也非常简单，准备好你的 icns 图标文件就行了，自己换背景、换图标不就成了以新的主题了吗？对吧，下面给大家看下国光我自定义主题的效果： 相关视频可见：你搁这召唤神龙呢？ 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:11 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-6.html":{"url":"3-准备工作/3-6.html","title":"6. OC 编辑器","keywords":"","body":"6. OC 编辑器 因为 OpenCore 的核显配置 文件是 .plist 结尾的，所以需要专门的编辑器来编辑，常见的 OC 编辑器的优缺点如下： 编辑器名称 优点 缺点 ProperTree 强大、专业、跨平台 上手难度高 OpenCore Configurator 强大、简单 只有 Mac 版本 OCAuxiliaryTools 跨平台、简单 使用体验有待提升 目前越来越强了 国光我的建议如下： 如果你有 Mac 系统可以使用，首选 OpenCore Configurator Windows 小白用户建议使用 OCAuxiliaryTools 下面来分别大概介绍一下这些编辑器的安装和使用方法。 提醒一下，不同版本的 OC 配置需要使用对应版本的 OC 编辑器，否则可能产生玄学问题 ProperTree 官方项目地址为：https://github.com/corpnewt/ProperTree macOS 平台下使用 因为 macOS 自带 Python 环境的原因，双击 ProperTree.command 即可打开程序： 通过 macOS 的菜单可以完成一些主要操作。 Windows 平台下使用 Windows 10 默认不带 Python 环境，所以首先得安装一下 Python 环境才可以。首先下载 Python3，这里推荐稳定一点的 Python 3.8 的版本，官方下载地址为：https://www.python.org/ftp/python/3.8.10/python-3.8.10-amd64.exe 安装的时候记得勾选：Add Python 3.8 to PATH： 这样会自动配置好环境变量，后面就不需要我们手动配置了，使用默认路径或者自定义路径都是OK的，国光比较偷懒使用了默认的「Install Now」，如果要使用自定义路径的话，那么这个路径最好不要出现中文，否则可能会引发一些玄学的问题。 验证是否安装成功的话，打开命令行，输入： python -V 可以看到 Python 的版本信息表示成功： 确实安装成功后，双击 ProperTree.bat 文件即可打开程序： 同样通过菜单中的 File 可以完成一些基础操作。 OpenCore Configurator OpenCore Configurator 最新版本的下载地址为： https://mackie100projects.altervista.org/download-opencore-configurator/ 找到 想要编辑的配置文件，「右键」-「打开方式」选择「OpenCore Configurator」即可： 打开后的主要界面如下： OCAuxiliaryTools OCAuxiliaryTools 建议在 Windows 使用，用来替代 ProperTree，因为 macOS 下有更棒的使用体验更好的 OpenCore Configurator 可以使用。 官方项目地址为：https://github.com/ic005k/OCAuxiliaryTools 中文说明为：https://github.com/ic005k/OCAuxiliaryTools/blob/master/READMe-cn.md 下载对应的 Windows 版本的，主要界面如下： 至此 OC 编辑器介绍完了，详细的使用方法大家可以参考本教程对应的 B 站讲解视频，接下来该准备配置 EFI 文件了。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:15 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-7.html":{"url":"3-准备工作/3-7.html","title":"7. 初步配置","keywords":"","body":"7. 初步配置 调整文件夹结构 本部分的截图均来自于我的华擎 Z490 的开源项目 感兴趣的朋友可以自行去下载学习。 拷贝并重命名 Sample.plist 首先将 Doc 目录下的 Sample.plist 拷贝到 EFI/OC/ 目录下，并将其重命名为 config.plist 精简 Drivers Drivers 里面只留了几个必要的，详细部分可以参考前面的 Drivers 说明章节 精简 Tools 国光没有使用 Tools 的习惯，所以这里面的工具全部删掉了，Tools 里面文件的详细作用可以参考 前面的 OC 文件结构 章节： 放置属于你的 SSDT 根据前面 准备 ACPI 的部分，把你准备好的 SSDT 放入进来： 放置属于你的 Kexts 根据前面 准备 Kexts 的部分，把你准备好的 Kexts 放入进来： 替换主题文件 OC 官方默认是没有主题的，可以下载官方的简约经典主题，替换默认的 Resources 文件夹即可： config.plist 加载文件 OC 和 Clover 不一样的地方在于，Clover 只需要把文件放入到该放的地方就行，但是 OC 不仅要放，还得手动加载才可以。 上一章推荐的 3 款编辑器都可以自动加载，下面来分部一一介绍一下他们加载的方法。 ProperTree ProperTree 运行后，通过按Cmd/Ctrl + O并选择config.plist上的文件来打开 config.plist，打开配置后，按Cmd/Ctrl + Shift + R 或者使用图形化菜单选择 「Clean Snapshot」： 接着选择要自带添加清理的 OC 文件夹： 完成后，您将在 config.plist 中看到就可以看到我们之前配置的 SSDT、Kexts 和 Drivers 信息了： 最后选择保存即可。 OpenCore Configurator 暂时没有发现 OpenCore Configurator 和 OCAuxiliaryTools 可以一键自动化添加 ACPI、Drivers、Kexts、Tools 之类的操作，所以我们只能手动来添加这些文件了。 添加 SSDTS 添加之前得删除原有的模板文件中的 SSDTS，操作很简单，选择所有，点击右下角的「减号」即可删除： 然后选择左下角的「快照添加」，选择你的 ACPI 文件夹里面的所有 SSDT 文件，打开即可完成添加操作： 添加好的效果如下： 可以看到自动添加好了路径信息，并都自动启用了。 添加 Kexts 添加 Kexts 也是类似的操作，国光这里不在啰嗦，先删除样例自带的，然后快照添加，选择 Kexts 文件夹即可： 当然 Kexts 加载的话还需要一些顺序等技巧，这个技巧会在下一个章节详细介绍。 添加 Drivers 添加 Drivers 也是类似的操作： 添加 Tools 添加 Tools 也是类似的操作，就是这个藏的稍微隐蔽了一点，具体添加入口参考下图： OCAuxiliaryTools OCAuxiliaryTools 的操作和 OpenCore Configurator 异曲同工，基本上都可以很快上手，如果不能很快上手的话，那肯定是这个图形化界面做的不够人人性化，使用体验不够友好。 添加 SSDTS 删除模板文件自带的 SSDT，然后选择你的 ACPI 文件夹里面的所有 SSDT 文件，打开即可完成添加操作： 添加 Kexts 添加 Kexts 也是类似的操作，但是 OCAuxiliaryTools 不支持添加整个 Kexts 文件夹，左下角加号只能手动一个个添加，为了高效的话可以选择所有的 Kexts 文件，然后拖入到 OCAuxiliaryTools 中的 Kernel 中即可： 当然 Kexts 加载的话还需要一些顺序等技巧，这个技巧会在下一个章节详细介绍。 添加 Drivers 添加 Drivers 也是类似的操作： 添加 Tools 添加 Tools 也是类似的操作，就是这个藏的稍微隐蔽了一点，具体添加入口参考下图： 至此我们之前收集的 ACPI、Kexts 等文件就这样手动加载完成了，下面章节开始介绍一下常见的 Kexts 的基本加载顺序。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:22 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"3-准备工作/3-8.html":{"url":"3-准备工作/3-8.html","title":"8. Kexts 微调","keywords":"","body":"8. Kexts 微调 Kexts 也有顺序的要求，而且有些 Kexts 会冲突无法开机，关于这块也比杂了，因为 Kexts 的开发者都不相同，所以国光我只能尽力去描述了，如果文档描述不清楚的话，可以去看 B 站对应的讲解视频。 自动调整 Kexts 顺序 ProperTree 在进行 Cmd/Ctrl + Shift + R 或者使用图形化菜单选择 「Clean Snapshot」操作的时候，会自动调整 Kexts 的加载顺序并且禁用掉冲突的 Kexts 实际上 OpenCore Configurator 也有这个功能，点击底部的「检查 Kexts」即可： 手动调整 Kexts 顺序 软件自动调整的顺序不一定是最准确的，因为他不知道你用了哪些乱七八糟的 Kexts，所以有时候还需要我们手动调整下 Kexts 的加载顺序。 OpenCore Configurator OpenCore Configurator 操作比较简单，选择好你要操作的 Kext，然后直接上下拖动即可调整顺序： OCAuxiliaryTools OCAuxiliaryTools 虽然无法直接拖动，但可以使用底部的「向上」和「向下」箭头的图标来调整 Kexts 的加载顺序： 常见 Kexts 的调整细节 必备 Kexts 的加载顺序 Lilu.kext VirtualSMC.kext WhateverGreen.kext SMCBatteryManager.kext （台式机不需要） SMCLightSensor.kext （台式机不需要） SMCProcessor.kext SMCSuperIO.kext AppleALC.kext BCM 博通无线和蓝牙加载顺序 AirportBrcmFixup.kext BrcmBluetoothInjector.kext BrcmFirmwareData.kext BrcmPatchRAM3.kext BCM 博通无线细节调整 直接加载 AirportBrcmFixup.kext 会发现实际上加载了 3 个 Kext： AirportBrcmFixup.kext AirportBrcmFixup.kext/Contents/PlugIns/AirPortBrcmNIC_Injector.kext AirportBrcmFixup.kext/Contents/PlugIns/AirPortBrcm4360_Injector.kext 其中安装 Big Sur 以及更新版本的话，AirPortBrcm4360_Injector.kext 默认情况下会出问题，所以需要我们设置一下最大内核为 19.9.9 ，这样可能会减少一些异常错误： 另外，BCM94352Z 芯片的网卡往往还需要在启动项里面添加：brcmfx-driver=2 解决一些睡眠或者其他玄学问题： Intel 无线和蓝牙加载顺序 AirportItlwm.kext IntelBluetoothInjector.kext IntelBluetoothFirmware.kext 笔记本 PS2 键鼠、触控板加载顺序 VoodooPS2Controller.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooPS2Keyboard.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooPS2Mouse.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooPS2Trackpad.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooInput.kext BrightnessKeys.kext（功能亮度调节按键驱动 不一定需要） 笔记本 I2C 和 PS2 配合驱动触控板加载顺序 VoodooI2C.kext/Contents/PlugIns/VoodooI2CServices.kext VoodooI2C.kext/Contents/PlugIns/VoodooGPIO.kext VoodooI2C.kext VoodooI2CHID.kext VoodooPS2Controller.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooPS2Keyboard.kext VoodooI2C.kext/Contents/PlugIns/VoodooInput.kext BrightnessKeys.kext （功能亮度调节按键驱动 不一定需要） 补充一个小姿势：因为 IC2 和 PS2 都有 VoodooInput.kext，所以如果不删除掉或者禁用掉 PS2 的 VoodooInput.kext 的话，会导致开机内核冲突卡死无法开机。 笔记本 PS2Smart 键盘驱动加载顺序 ApplePS2SmartTouchPad.kext/Contents/PlugIns/ApplePS2Controller.kext ApplePS2SmartTouchPad.kext/Contents/PlugIns/ApplePS2Keyboard.kext ApplePS2SmartTouchPad.kext 笔记本 VoodooRMI.kext 和 VoodooSMBus.kext 细节调整 首先确保 VoodooPS2 配置如下： 启用 VoodooPS2Controller.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooPS2Mouse.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooPS2Keyboard.kext VoodooPS2Controller.kext/Contents/PlugIns/VoodooPS2Trackpad.kext 禁用 VoodooPS2Controller.kext/Contents/PlugIns/VoodooInput.kext 然后启用加载基础的 RMI 配置： VoodooRMI.kext VoodooRMI.kext/Contents/PlugIns/VoodooInput.kext 如果你是 SMBus 触控板的话，还需要加载： VoodooSMBus.kext VoodooRMI.kext/Contents/PlugIns/RMISMBus.kext 如果你是 I2C触控板的话，还需要加载： VoodooI2C.kext VoodooRMI.kext/Contents/PlugIns/RMII2C.kext 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:00:26 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/":{"url":"4-OC配置/","title":"五、配置 config.list","keywords":"","body":"五、配置 config.list 正式配置 OC 配置文件的一些细节操作，主要包括如下内容： 1. ACPI 2. Booter 3. DeviceProperties 4. Kernel 5. Misc 6. NVRAM 7. PlatformInfo 8. UEFI powered by Gitbook该文章最后修改时间： 2022-02-02 21:33:49 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-1.html":{"url":"4-OC配置/4-1.html","title":"1. ACPI","keywords":"","body":"1. ACPI 通过上一节准备工作的配置，我们的 SSDT 应该都已经加载进来了，此时一般调整下 Quiks（怪癖）即可，少数的 SSDT 需要打对应的补丁才可以生效，关于打补丁细节可以参考视频内容，不过下面的示例配置如果需要打补丁的话，也会写出来的，模仿一下即可。 完整的 Quiks 怪癖 因为各个平台的版本不太一样，在详细说明之前写来一个 OC 0.7.3 完整的 Quiks 怪癖 说明，这样心里大家设置的时候心里一般就有个底了。 FadtEnableReset 在旧硬件上修复重启和关机, 除非需要, 否则不推荐开启 一些较新的笔记本可能也需要这个选项来修复重启和关机 NormalizeHeaders 清除 ACPI 头字段, 只有 macOS 10.13 需要 10.14 后面的版本已经修复这个问题了 RebaseRegions 尝试试探性地重新定位 ACPI 内存区域, 使用自定义 DSDT 则必须开启 ResetHwSig 适用于无法在重新启动期间维护硬件签名并导致从休眠中唤醒问题的硬件 ResetLogoStatus 无法在有 BGRT 表的系统上显示 OEM Windows 标志的硬件需要开启 SyncTableIds 这可以解决修补表与 SLIC 表不兼容导致旧 Windows 操作系统中的许可问题。 Intel 桌面平台 Yonah、Conroe、Penryn、Lynnfield、Clarkdale 最初支持的版本为 OS X 10.4.10，最后支持的操作系统版本为 macOS 10.13.6 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 Sandy Bridge、Ivy Bridge Sandy Bridge 的 iGPU 核显仅在 macOS 10.13 之前得到官方支持，大多数 Sandy 桥接的主板不支持 UEFI Sandy Bridge 和 Ivy Bridge 的 ACPI 往往需要配合「删除」使用：删除 CpuPm、删除 Cpu0Ist 幸运的是，默认示例文件自带了这些，我们只需要勾选「启用」就 OK 了： 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 Haswell、Broadwell、Skylake、Kaby Lake、Coffee Lake、Comet Lake 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 Intel 高端桌面平台 Nehalem 、Westmere、Sandy、Ivy Bridge-E、Haswell-E、Broadwell-E、Skylake-X/W 、Cascade Lake-X/W 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 Intel 笔记本平台 Clarksfield、Arrandale 因为使用了 SSDT-XOSI 的原因，所以还需要配合 Change _OSI to XOSI 补丁来使用： Comment String Change _OSI to XOSI Enabled Boolean YES Count Number 0 Limit Number 0 Find Data 5f4f5349 Replace Data 584f5349 OCC 里面也集成了这个 XOSI 补丁，只需要一键就可以补丁并启用： 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 Sandy Bridge、Ivy Bridge Sandy Bridge 的 iGPU 核显仅在 macOS 10.13 之前得到官方支持，大多数 Sandy 桥接的主板不支持 UEFI Sandy Bridge 和 Ivy Bridge 的 ACPI 往往需要配合「删除」使用：删除 CpuPm、删除 Cpu0Ist 幸运的是，默认示例文件自带了这些，我们只需要勾选「启用」就 OK 了： 因为使用了 SSDT-XOSI 的原因，所以还需要配合 Change _OSI to XOSI 补丁来使用： Comment String Change _OSI to XOSI Enabled Boolean YES Count Number 0 Limit Number 0 Find Data 5f4f5349 Replace Data 584f5349 OCC 里面也集成了这个 XOSI 补丁，只需要一键就可以补丁并启用： 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 Haswell、Broadwell、Skylake、Kaby Lake、Coffee Lake 、Whiskey Lake、Coffee Lake Plus、Comet Lake、Icelake 因为使用了 SSDT-XOSI 的原因，所以还需要配合 Change _OSI to XOSI 补丁来使用： Comment String Change _OSI to XOSI Enabled Boolean YES Count Number 0 Limit Number 0 Find Data 5f4f5349 Replace Data 584f5349 OCC 里面也集成了这个 XOSI 补丁，只需要一键就可以补丁并启用： 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 AMD 桌面平台 Bulldozer(15h)、Jaguar(16h)、Ryzen、Threadripper(17h and 19h) 这些版本不需要调整 Quiks 怪癖，全部保持示例配置中默认的即可。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:36 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-2.html":{"url":"4-OC配置/4-2.html","title":"2. Booter","keywords":"","body":"2. Booter 本节允许对操作系统引导加载程序应用不同类型的UEFI修改，主要是Apple引导加载程序（boot.efi）。这些修改目前为不同的固件类型提供了各种修补程序和环境更改。其中一些功能最初是作为 AptioeMoryFix.efi （不再维护）的一部分实现的。 完整的 Quiks 怪癖 因为各个平台的版本不太一样，在详细说明之前写来一个 OC 0.7.3 完整的 Quiks 怪癖 说明，这样心里大家设置的时候心里一般就有个底了。 AllowRelocationBlock 允许通过重新定位块引导 macOS 此怪癖需要启用 ProvideCustomSlide，通常还需要启用 AvoidRuntimeDefrag 才能正常工作 虽然在使用较低内存的平台上运行旧 macOS 版本需要这种怪癖 但它与某些硬件和 Mac OS 11 不兼容，在这种情况下，应考虑使用 EnableSafeModeSlide AvoidRuntimeDefrag 防止 boot.efi 运行时内存碎片整理 开启后会修复 UEFI 的运行服务, 例如日期、时间、NVRAM、电源控制 除了苹果和 VMware 之外，大多数类型的固件都需要这种怪癖 DevirtualiseMmio 从某些 MMIO 区域删除运行时属性 删除已知内存区域的运行时位来减少内存映射中被盗的内存占用 一般情况下，采用 slide=1 的方式进行连续性内存注入，故一般不勾选，除非你的机器用了 KASLR 方式。 DisableSingleUser 禁用单用户模式 开启后会禁止 Cmd + S 和 -s 的使用，使设备更加接近于 T2 白苹果 DisableVariableWrite 防止 macOS NVRAM 写入访问 开启后会禁止 NVRAM 写入, 在 Z390/HM370 等没有原生 macOS 支持 NVRAM 的主板上需要开启 DiscardHibernateMap 开启后会重用原始休眠内存映射，仅某些旧硬件需要 EnableSafeModeSlide 开启后会允许在安全模式下使用 Slide 值 安全模式下（-x）是否用连续性的内存注入方式 EnableWriteUnprotector 允许对 UEFI 运行时服务代码进行写访问 开启后会在执行期间删除 CR0 寄存器中的写入保护 ForceExitBootServices 失败时使用新内存映射重试 ExitBootServices 开启后会确保 ExitBootServices 即使在 MemoryMap 发生更改时也能调用成功 一般很老很旧的主板可能需要使用，新主板一般不需要使用 ProtectMemoryRegions 保护内存区域不被错误访问 确保 CSM 内存区域标记为 ACPI NVS，以防止 boot.efi 或 XNU 重新定位或使用它们 AvoidRuntimeDefrag 解决了类似的问题。默认不勾选 一些老旧的主板可能需要勾选 ProtectSecureBoot 保护 UEFI 安全引导变量不被写入 避免操作系统对 UEFI 安全启动变量 (db, dbx, PX, KEK) 进行写入 这个选项主要用于避免 Insyde 主板和 MacPro5,1 的 NVRAM 问题 ProtectUefiServices 保护 UEFI 服务不被固件覆盖 用于修复 Z390 在 DevirtualiseMmio、ProtectCsmRegion 或 ShrinkMemoryMap 上的问题 非 Z390 主板一般默认不勾选 ProvideCustomSlide 在内存不足时提供自定义 KASLR 幻灯片 此选项时强制 macOS 在可用的 slide 值中使用一个随机的、不产生冲突的 slide 值 如果 Slide 值存在冲突, 此选项将强制 macOS 执行以下操作，使用一个伪随机值 只有在遇到 Only N/256 slide values are usable! 时需要 RebuildAppleMemoryMap 重建 macOS 兼容的内存映射 一般在启动 macOS 10.6 及更早版本时可能需要这个选项 SetupVirtualMap 在 SetVirtualAddresses 上设置虚拟内存 开启后会将 SetVirtualAddresses 调用修复为虚拟地址 通过虚拟内存建立连续性内存供 OC 使用，并映射到分散的物理内存中 SignalAppleOS 通过任何操作系统的操作系统信息报告正在加载的 macOS 将其他操作系统的信息报告给正在加载的 macOS 用于在 Windows 中为 MacBook 启用 iGPU SyncRuntimePermissions 更新运行时环境的内存权限 主要用于早期的 macOS 或 Linux/Windows Intel 桌面平台 Yonah、Conroe、Penryn 传统引导设置 Quirk Enabled Comment AvoidRuntimeDefrag No Big Sur 可能需要启用此怪癖 EnableSafeModeSlide No EnableWriteUnprotector No ProvideCustomSlide No RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 SetupVirtualMap No UEFI 引导设置 Quirk Enabled Comment RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 Lynnfield、Clarkdale 传统引导设置 Quirk Enabled Comment AvoidRuntimeDefrag No Big Sur 可能需要启用此怪癖 EnableSafeModeSlide No EnableWriteUnprotector No ProvideCustomSlide No RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 SetupVirtualMap No UEFI 引导设置 Quirk Enabled Comment RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 Sandy Bridge、Ivy Bridge、Haswell、Broadwell、Skylake、Kaby Lake ProperTree OpenCore Configurator OCAuxiliaryTools Coffee Lake、Comet Lake ProperTree OpenCore Configurator OCAuxiliaryTools Intel 高端桌面平台 Nehalem、Westmere 传统引导设置 Quirk Enabled Comment AvoidRuntimeDefrag No Big Sur 可能需要启用此怪癖 EnableSafeModeSlide No EnableWriteUnprotector No ProvideCustomSlide No RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 SetupVirtualMap No UEFI 引导设置 Quirk Enabled Comment RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 Sandy、Ivy Bridge-E、 Haswell-E、Broadwell-E ProperTree OpenCore Configurator OCAuxiliaryTools Skylake-X/W、Cascade Lake-X/W ProperTree OpenCore Configurator OCAuxiliaryTools Intel 笔记本平台 Clarksfield、Arrandale Arrandale 的 iGPU 核显仅在 macOS 10.13 之前得到官方支持，大多数 Clarksfield 和 Arrandale 主板不支持 UEFI 传统引导设置 Quirk Enabled Comment AvoidRuntimeDefrag No Big Sur 可能需要启用此怪癖 EnableSafeModeSlide No EnableWriteUnprotector No ProvideCustomSlide No RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 SetupVirtualMap No UEFI 引导设置 Quirk Enabled Comment RebuildAppleMemoryMap Yes 这是引导 OS X 10.4 到 10.6 所必需的 Sandy Bridge、Ivy Bridge、Haswell、Broadwell、Skylake、Kaby Lake Sandy Bridge 的 iGPU 仅在 macOS 10.13 之前得到官方支持、大多数 Sandy 主板不支持 UEFI ProperTree OpenCore Configurator OCAuxiliaryTools Coffee Lake、Whiskey Lake ProperTree OpenCore Configurator OCAuxiliaryTools Coffee Lake Plus、Comet Lake ProperTree OpenCore Configurator OCAuxiliaryTools Icelake ProperTree OpenCore Configurator OCAuxiliaryTools AMD 桌面平台 Bulldozer(15h)、Jaguar(16h) ProperTree OpenCore Configurator OCAuxiliaryTools Ryzen、Threadripper(17h and 19h) ProperTree DevirtualiseMmio 注意 TRx40 需要这个标志 SetupVirtualMap 注意 B550、A520 和 TRx40 板应禁用此功能。 较新的 X570 BIOS 版本也需要禁用此功能 2020 年末 BIOS 更新的 X470 和 B450 也需要禁用此功能 OpenCore Configurator OCAuxiliaryTools 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:31 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-3.html":{"url":"4-OC配置/4-3.html","title":"3. DeviceProperties","keywords":"","body":"3. DeviceProperties 设备配置通过专用缓冲区提供给 macOS，用于设置 PCI 设备属性，如英特尔缓冲帧补丁，声卡 Layout ID 等。当然声卡的 ID 也可以直接通过启动项添加 alcid=xx 这种形式来添加也是 OK 的。 寻找设备地址 不同的设备的硬件地址是不一样的，可以使用 Hackintool 查看具体的地址信息： 或者直接使用 OCC 也是可以识别添加设备地址信息的： 添加好的效果如下： 当然设备属性这里还是有一些缺失的，这就需要我们来手动来补充了。 Intel 桌面平台 Yonah、Conroe 、Penryn、Lynnfield、Clarkdale PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 这些平台无需特殊设置，只需要添加完善声卡信息即可，当然也可以直接通过启动项添加，前期调试的过程中，国光我建议大家是通过启动项添加 alcid=xx 这种形式。 Sandy Bridge PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,snb-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 AAPL,snb-platform-id 说明解释 10000300 当桌面 iGPU 用于驱动输出显示信号 00000500 核显仅计算使用而不驱动输出显示信号（有独显的时候建议使用） device-id 说明解释 26010000 当桌面 iGPU 用于驱动输出显示信号 02010000 核显仅计算使用而不驱动输出显示信号（有独显的时候建议使用） 下面是桌面 HD 3000 核显的最终配置的示例： Ivy Bridge PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提供兼容度 AAPL,ig-platform-id 说明解释 0A006601 当桌面 iGPU 用于驱动输出显示信号 07006201 核显仅计算使用而不驱动输出显示信号（有独显的时候建议使用） 台式机 HD 4000 核显的 AAPL,ig-platform-id 为 0A006601 PciRoot(0x0)/Pci(0x16,0x0) Ivy Bridge CPU 与 6 系列主板（即 H61、B65、Q65、P67、H67、Q67、Z68）配合使用需要 欺骗 IMEI 设备以获得支持 无论是否使用 SSDT-IMEI，此属性仍然是必需的 Key Type Value device-id Data 3A1E0000 如果是 7 系列主板（即 B75、Q75、Z75、H77、Q77、Z77），则不需要此项 Haswell、Broadwell PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id 解释说明 0300220D 当桌面 iGPU 用于驱动输出显示信号 04001204 核显仅计算使用而不驱动输出显示信号（有独显的时候建议使用 07002216 当桌面 iGPU 用于驱动输出显示信号的另一个可选 ID device-id 说明解释 12040000 HD 4600 核显的设备 ID 下面是 HD 4400 核显的最终配置的示例： Key Type Value AAPL,ig-platform-id Data 0300220D framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 device-id Data 12040000 下面是 lris Pro 6200 核显的最终配置示例： Key Type Value AAPL,ig-platform-id Data 07002216 framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 Skylake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id 解释说明 00001219 当桌面 iGPU 用于驱动显示器时使用 01001219 核显仅计算使用而不驱动输出显示信号（有独显的时候建议使用） HD P530 核显用户需要注意的是，您的 iGPU 核显不受本机支持，因此您需要添加以下属性： Key Type Value device-id Data 1B190000 下面是 HD P530 核显的最终配置示例： Key Type Value AAPL,ig-platform-id Data 00001219 framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 device-id Data 1B190000 Kaby Lake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id 解释说明 00001259 当桌面 iGPU 用于驱动输出显示信号 03001259 当桌面 iGPU 仅用于计算任务且不驱动显示器时使用 下面是 HD630 核显的最终配置示例： Key Type Value AAPL,ig-platform-id Data 00001259 framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 Coffee Lake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id 解释说明 07009B3E 当桌面 iGPU 用于驱动输出显示信号 00009B3E 如果07009B3E 不起作用的话，可以考虑使用这个 ID 看看 0300913E 核显仅计算使用而不驱动输出显示信号（有独显的时候建议使用） 下面是 HD630 核显的最终配置示例： Key Type Value AAPL,ig-platform-id Data 07009B3E framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 Comet Lake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id 解释说明 07009B3E 当桌面 iGPU 用于驱动输出显示信号 00009B3E 如果07009B3E 不起作用的话，可以考虑使用这个 ID 看看 0300C89B 核显仅计算使用而不驱动输出显示信号（有独显的时候建议使用） 下面是 HD630 核显的最终配置示例： Key Type Value AAPL,ig-platform-id Data 07009B3E framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 Intel 高端桌面平台 Nehalem、Westmere、Sandy and Ivy Bridge-E、Haswell-E、Skylake-X/W and Cascade Lake-X/W PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 这些平台无需特殊设置，只需要添加完善声卡信息即可，当然也可以直接通过启动项添加，前期调试的过程中，国光我建议大家是通过启动项添加 alcid=xx 这种形式。 Intel 笔记本平台 Skylake-X/W、Cascade Lake-X/W PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-singlelink 帧缓冲区单链接 一些老的笔记本需要配置这个选项 Property Type Value framebuffer-patch-enable Data 01000000 framebuffer-singlelink Data 01000000 Sandy Bridge PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,snb-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 AAPL,snb-platform-id Type 解释说明 00000100 Laptop 笔记本电脑使用 10000300 NUC Intel NUC 使用 PciRoot(0x0)/Pci(0x16,0x0) 使用 Sandy Bridge CPU 和 Ivy Bridge 芯片组常用的配置 欺骗 IMEI 设备以获得支持 无论是否使用 SSDT-IMEI，此属性仍然是必需的 芯片组为 Hx6x 的机型需要配置，可以室友 AIDA64 查看下，比如 Core i3-3110M 的芯片组为 HM67 Key Type Value device-id Data 3A1C0000 Ivy Bridge PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-memorycount 匹配 FBMemoryCount framebuffer-pipecount 匹配 PipeCount framebuffer-portcount 匹配 PortCount framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-con1-enable 启用外接显示器 1 的修补 framebuffer-con1-alldata 显示器 1 的连接信息（端口信息等） AAPL,ig-platform-id Type 解释说明 03006601 Laptop 1366*768 或者更低分辨率的显示器推荐使用 04006601 Laptop 1600*900 或者更高分辨率的显示器推荐使用 09006601 Laptop 如果上面两个 ID 不行的话，可以试试看，主要是与某些 eDP 显示器配合使用 0B006601 NUC Intel NUC 推荐使用 缓冲区的设置如下： framebuffer-patch-enable Number 1 framebuffer-memorycount Number 2 framebuffer-pipecount Number 2 framebuffer-portcount Number 4 framebuffer-stolenmem Data 00000004 framebuffer-con1-enable Number 1 framebuffer-con1-alldata Data 02050000 00040000 07040000 03040000 00040000 81000000 04060000 00040000 81000000 Haswell PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id Type 解释说明 0500260A Laptop HD 5000、HD 5100 和 HD 5200 核显推荐的 ID 值 0600260A Laptop HD 4200、HD 4400 和 HD 4600 核显推荐的 ID 值，需要配合 Device-id 0300220D NUC 推荐所有的 Hasewell 架构的 NUC 使用，核显推荐的 ID 值。需要配合 Device-id 缓冲区的设置如下： Key Type Value framebuffer-patch-enable Data 01000000 framebuffer-cursormem Data 00009000 针对 HD 4200, HD 4400 and HD 4600 核显配套使用的 Device-id 值： Key Type Value device-id Data 12040000 Broadwell PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id Type 解释说明 06002616 Laptop 推荐大多数的笔记本使用 02001616 NUC 推荐 Broadwell 架构的 NUC 使用 如果你的显卡是 HD 5600 的话，一般还需要伪造一下 device-id 值： Key Type Value device-id data 26160000 缓冲区的设置如下： Key Type Value framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 Skylake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id Type 解释说明 00001619 Laptop HD 515, HD 520, HD 530, HD 540, HD 550 and P530 核显推荐使用 00001E19 Laptop 如果你上面的 ID 不行的话，可以尝试这个 00001B19 Laptop HD 510 推荐使用 00001E19 NUC HD 515 推荐使用 02001619 NUC HD 520/530 推荐使用 02002619 NUC HD 540/550 推荐使用 05003B19 NUC HD 580 推荐使用 如果你的核显为 HD 510 的话呢，一般还需要伪造一下 device-id 值： Key Type Value device-id Data 02190000 如果你的核显为 HD 550、P530 的话呢，一般还需要伪造一下 device-id 值： Key Type Value device-id Data 16190000 缓冲区的设置如下： Key Type Value framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 Kaby Lake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id Type 解释说明 00001B59 Laptop HD 615, HD 620, HD 630, HD 640 and HD 650 推荐使用 00001659 Laptop 如果 00001B59 无法加速的话，可以尝试一下这个值 0000C087 Laptop 推荐用于 Amber Lake 的 UHD 617 和 Kaby Lake-R 的 UHD 62 00001E59 NUC HD 615 推荐使用 00001B59 NUC HD 630推荐使用 02002659 NUC HD 640/650 推荐使用 如果你的核显为 HD 620 的话呢，一般还需要伪造一下 device-id 值： Key Type Value device-id Data 16590000 所有的 HD 6XX 系列（UHD 没问题），输出会存在一些小问题，可能会导致锁定或者内核崩溃，下面的一些缓冲帧补丁可以考虑一下： framebuffer-con1-enable Data 01000000 framebuffer-con1-alldata Data 01050A00 00080000 87010000 02040A00 00080000 87010000 FF000000 01000000 20000000 其他的一些缓冲帧设置： Key Type Value framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 Coffee Lake、Whiskey Lake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id Type 解释说明 0900A53E Laptop UHD 630 推荐使用 00009B3E Laptop UHD 620 推荐使用 07009B3E NUC UHD 620/630 推荐使用 0000A53E NUC UHD 655 推荐使用 UHD 630 可以尝试使用以下 device-id 提高稳定性： Key Type Value device-id Data 9B3E0000 Coffee Lake CPU UHD 620 可以尝试使用以下 device-id 提高稳定性： Key Type Value device-id Data 9B3E0000 其他缓冲区设置的参考设置如下： Key Type Value framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 Coffee Lake Plus and Comet Lake PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 PciRoot(0x0)/Pci(0x2,0x0) 配置 iGPU 核显 AAPL,ig-platform-id macOS 用来确定 iGPU 驱动程序如何与我们的系统交互的 device-id 解决一些驱动异常问题，提高兼容度 framebuffer-patch-enable 启用通过 WhateverGreen.kext 进行修补 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 也不需要 framebuffer-stolenmem 设置核显最小被盗内存 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 framebuffer-fbmem 设置缓冲帧内存大小 如果是独显输出的话可以不需要这个属性 BIOS 可以设置 DVMT Pre-Allocated: 64MB 的话也不需要 AAPL,ig-platform-id Type 解释说明 0900A53E Laptop UHD 630 推荐使用 00009B3E Laptop UHD 620 推荐使用 07009B3E NUC UHD 620/630 推荐使用 0000A53E NUC UHD 655 推荐使用 UHD 630 可以尝试使用以下 device-id 提高稳定性： Key Type Value device-id Data 9B3E0000 Comet Lake CPU UHD 620 可以尝试使用以下 device-id 提高稳定性： Key Type Value device-id Data 9B3E0000 其他缓冲区设置的参考设置如下： Key Type Value framebuffer-patch-enable Data 01000000 framebuffer-stolenmem Data 00003001 framebuffer-fbmem Data 00009000 AMD 桌面平台 因为 AMD CPU 没有核显的原因，所以这些平台无需特殊设置，只需要添加完善声卡信息即可，当然也可以直接通过启动项添加，前期调试的过程中，国光我建议大家是通过启动项添加 alcid=xx 这种形式： PciRoot(0x0)/Pci(0x1b,0x0) 这个设备路径以实际为准，可能有误差，可使用 Hackintool 获取具体的设备路径 layout-id AppleALC 音频注入，完整的 ALC ID 可以参考：AppleALC 支持设备列表 国光我建议大家是直接通过启动项添加 alcid=xx 这种形式，简单方便。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:26 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-4.html":{"url":"4-OC配置/4-4.html","title":"4. Kernel","keywords":"","body":"4. Kernel 内核相关的选项设置。 完整的 Quiks 怪癖 因为各个平台的版本不太一样，在详细说明之前写来一个 OC 0.7.3 完整的 Quiks 怪癖 说明，这样心里大家设置的时候心里一般就有个底了。 AppleCpuPmCfgLock 如果你 BIOS 里面 CFG-Lock 已经关闭那么不需要这个 AppleXcpmCfgLock 如果你 BIOS 里面 CFG-Lock 已经关闭那么不需要这个 AppleXcpmExtraMsrs 对没有本机 XCPM 支持的某些 CPU 禁用多个关键 MSR 访问 主要是在无原生电源管理的 CPU上 使用 一般是Haswell-E，Broadwell-E，Skylake-X这三种 CPU 才勾选使用 AppleXcpmForceBoost 强制在 XCPM 模式下实现最大性能 强制拉高睿频 建议在长期高负载的专业设备上使用 某些 Xeon 系列的处理器开启这个选项会受益 CustomSMBIOSGuid 为 UpdatesBiosModeCustom 自定义模式执行 GUID 修补 戴尔笔记本电脑通常要勾选这个 如果你的笔记本无法正常显示序列号的话，也可以勾选试试看 DisableIoMapper 禁用 XNU（VT-d）中的 IOMapper 支持 如果 BIOS 里面禁止了 VT-d，那么就不需要勾选了 DisableLinkeditJettison 此选项允许 Lilu.kext 和可能的其他 kext 在 macOS Big Sur 中以最佳性能级别运行 而不需要在启动项中添加 keepsyms=1，相当于替代掉了他 DisableRtcChecksum 禁用在 AppleRTC 中写入主校验 ExtendBTFeatureFlags 将 FeatureFlags 设置为0x0F，以实现蓝牙的全部功能 ForceSecureBootScheme 强制 x86 方案用于 IMG4 验证 当使用不同于 x86 legacy 的 SecureBootModel 时，虚拟机上需要此选项 IncreasePciBarSize 将 IOPCIFamily 中的 32 位 PCI Bar 大小从 1GBs 增加到 4GBs 需要此选项表示固件配置错误或有缺陷，所以一般也不使用 LapicKernelPanic 禁用由 AP 核心 lapic 中断造成的内核崩溃 用于惠普笔记本的内核奔溃，如果没有奔溃的话就不建议勾选了 LegacyCommpage 将默认的 64 位 commpage bcopy 实现替换为不需要 SSE3 的实现 这对于传统的老平台非常有用 10.4-10.6 新平台基本上不勾选使用 PanicNoKextDump 在发生内核崩溃时阻止输出 Kext 列表, 提供可供排错参考的崩溃日志 排错时的时候建议开启 PowerTimeoutKernelPanic 修复 macOS Catalina 中由于设备电源状态变化超时而导致的内核崩溃 当遇到睡眠不能唤醒，只有重启后才能唤醒的情况下勾选 台式机一般不勾选 ProvideCurrentCpuInfo 向内核提供当前 CPU 信息 SetApfsTrimTimeout 10.14 之前的版本不需要设置 主要针对 SATA SSD，根据不同的主控，设置不同的延迟 ThirdPartyDrives 为 SSD 启用 TRIM 指令，可能会改善休眠情况 NVMe SSD 会自动被 macOS 加载因此不需要 SATA SSD 可以在终端执行 sudo trimforce enable 开启，效果一样 XhciPortLimit 解除 15 个端口限制，确认 USB 端口完美定制的可以不勾选 Intel 桌面平台 Yonah、Conroe、Penryn ProperTree OpenCore Configurator OCAuxiliaryTools Lynnfield、Clarkdale、Sandy Bridge、Ivy Bridge ProperTree CustomSMBIOSGuid：Dell 或者 VIAO 的机器考虑开启 LapicKernelPanic：惠普机器考虑开启 XhciPortLimit：如果你的电脑没有 USB 3.0 的话，不用开启 OpenCore Configurator OCAuxiliaryTools Haswell、Broadwell、Skylake、Kaby Lake、Coffee Lake、Comet Lake ProperTree AppleCpuPmCfgLock：10.10 或者更老的系统需要开启 CustomSMBIOSGuid：Dell 或者 VIAO 的机器考虑开启 LapicKernelPanic：惠普机器考虑开启 XhciPortLimit：解除 15 个端口限制，确认 USB 端口完美定制的可以不勾选 OpenCore Configurator OCAuxiliaryTools Intel 高端桌面平台 Nehalem、Westmere、Sandy and Ivy Bridge-E、Haswell-E、 Broadwell-E ProperTree CustomSMBIOSGuid：Dell 或者 VIAO 的机器考虑开启 LapicKernelPanic：惠普机器考虑开启 XhciPortLimit：解除 15 个端口限制，如果你的电脑没有 USB 3.0 的话，不用开启，或者确认 USB 端口完美定制的话也可以不勾选 OpenCore Configurator OCAuxiliaryTools Skylake-X/W and Cascade Lake-X/W ProperTree CustomSMBIOSGuid：Dell 或者 VIAO 的机器考虑开启 LapicKernelPanic：惠普机器考虑开启 XhciPortLimit：解除 15 个端口限制，如果你的电脑没有 USB 3.0 的话，不用开启，或者确认 USB 端口完美定制的话也可以不勾选 OpenCore Configurator OCAuxiliaryTools Intel 笔记本平台 Clarksfield、Arrandale、Sandy Bridge、Ivy Bridge、 ProperTree CustomSMBIOSGuid：Dell 或者 VIAO 的机器考虑开启 LapicKernelPanic：惠普机器考虑开启 XhciPortLimit：解除 15 个端口限制，如果你的电脑没有 USB 3.0 的话，不用开启，或者确认 USB 端口完美定制的话也可以不勾选 OpenCore Configurator OCAuxiliaryTools Haswell、Broadwell、Skylake、Kaby Lake、Coffee Lake、Whiskey Lake、Coffee Lake Plus、Comet Lake、Icelake ProperTree AppleCpuPmCfgLock：安装 10.10 或者更老的系统需要开启 CustomSMBIOSGuid：Dell 或者 VIAO 的机器考虑开启 LapicKernelPanic：惠普机器考虑开启 XhciPortLimit：解除 15 个端口限制，如果你的电脑没有 USB 3.0 的话，不用开启，或者确认 USB 端口完美定制的话也可以不勾选 OpenCore Configurator OCAuxiliaryTools AMD 桌面平台 Bulldozer(15h)、 Jaguar(16h)、Ryzen、Threadripper(17h and 19h) AMD 平台稍微特殊一点，还需要勾选 DummyPowerManagement，其他的 Quirks 可以参考下图来配置： 除此之外还需要打 Path 补丁，因为属性比较多，建议大家文本方式操作效率更高一点： 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:21 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-5.html":{"url":"4-OC配置/4-5.html","title":"5. Misc","keywords":"","body":"5. Misc Misc 杂项部分，这部分基本上是通用的，所以国光我很喜欢这一章，这样就不用考虑各个机型了，写起来会比较顺心。 Boot 下面是国光我的使用习惯： Picker Mode：这个选择 External，表示启用外部主题（前提是你拷贝了对应的主题文件） PickerVariant：这里可以手动选择自己想要加载的主题 PollAppleHotKeys： 需要与 Quirk KeySupport=Yes 结合使用, 这个是国光我的个人习惯，表示模拟苹果热键 这样无需在启动项里面添加-v 参数了，直接在选择系统界面 Commad/Ctrl + V 即可，非常简约方便。 快捷键组合: Cmd + V: 启用 -v 跑码 Cmd + Opt + P + R: 重置 NVRAM Cmd + R: 启动恢复分区 Cmd + S: 启动至单用户模式 Option / ALT: 在 ShowPicker 设置成 NO 时显示引导项选择界面, ALT 不可用时可用 ESC 键代替 Cmd + C + 减号: 关闭主板兼容性检查, 等同于添加引导标识符 -no_compat_check Shift: 安全模式 Debug 这个主要用于 Debug 调试使用的，实际上使用默认的也行，下面是 OC 官方建议的设置： 其中 Target 表示： 会每次把启动日志记录到 EFI 分区根目录下，方便调试使用，后期稳定的话可以取消勾选这个「记录到文件」即 Target 的值为 3 Security 下面也是国光的使用习惯： Scan Policy 可以改为 0，实际上可选的值如下： 有时候安装系统的时候遇到 OC 无法识别 Windows 的启动项的情况，勾选了「允许扫描 EFI 系统分区文件系统」解决了，理论上 Scan Policy 改为 0 也可以解决这类问题。 Valut：Optional 搞错了理论上会直接无法开机，所以基本上相当于是必选项了。 AllowToggle：勾选 这个也是国光我的习惯，勾选这个后，每次开关 SIP 只需要在选择系统界面切换一下即可，很方便： 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:16 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-6.html":{"url":"4-OC配置/4-6.html","title":"6. NVRAM","keywords":"","body":"6. NVRAM NVRAM 部分，这部分基本上是通用的，所以国光我也很喜欢这一章，这样就不用考虑各个机型了，写起来会比较顺心。 这部分一般主要关注以下 5 个选项。 UIScale UI 缩放 UIScale 有 01 和 02 两个值可选： 01 表示默认缩放 02 表示开启 HiDPi 一般如果搭配的是原生 4k 显示器使用，效果会好一些 如果非 4k 显示器使用脚本强制开启 HiDPi 的话也建议使用，这样开机 Logo 不会大小变 更新一下，OC 后面的版本这部分调整了，具体变动如下： OC 后面的版本将 UCScale 这个参数移动到了「UEFI 设置」下面的 「显示输出」标签里面了，这样大家手动选择对应的值就 OK 了： boot-args 启动项 主要设置一些启动项之类的： 常用内核引导标识符合集： 引导标识符 作用 -amd_no_dgpu_accel 关闭 AMD 显卡硬件加速 cpus=# 启用 # 个 CPU 核心 darkwake=0 禁用 Power Nap dart=0 禁用 VT-d debug=0x100 发生 KP 时不自动重启 kext-dev-mode=1 启用 Kext 开发模式, 非开发者请勿使用 -no_compat_check 关闭兼容性检查 -s 单用户模式 slide=# 手动设置 KASLR slide 值为 # -v verbose 跑码模式 -x 安全模式 alcid=x 注入 AppleALC 声卡 ID agdpmod=pikera 5700XT 等高端 A 卡需要配合这个参数，否则可能黑屏 -wegnoegpu 用于禁用除集成 Intel iGPU 之外的所有其他 GPU csr-active-config SIP 相关 系统完整性保护 (SIP) 的设置，一般建议默认就行， 相关值的说明： 00000000 - SIP 完全启用 (0x0)。 03000000 - 禁用 kext 签名 (0x1) 和文件系统保护 (0x2)。 FF030000- 禁用macOS High Sierra 中的所有标志(0x3ff)。 FF070000- 禁用macOS Mojave 中的所有标志在macOS Catalina(0x7ff)，因为 Apple 为可执行策略引入了一个值。 FF0F0000- 禁用 macOS Big Sur (0xfff) 中的所有标志，该标志为经过身份验证的 root提供了另一个新标志 国光我个人建议使用下面这个切换 SIP，这样比较方便高效： prev-lang:kbd 语言设置 这里设置到安装系统的时候的语言： 如果你安装系统发现为俄语的话，那么多半是这里语言设置不对，记得改回对应的语言，改好了要重置下 NVRAM 才可以生效。 常见的语言： 语种 字符串 DATA类型 英语 en-US:0 656e2d55533a30 中文 zh-Hans:0 7A682D48 616E733A 323532 WriteFlash 这个选项也是默认配置就勾选的，表示允许为所添加的变量写入闪存，我们保留默认即可： 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:58:53 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-7.html":{"url":"4-OC配置/4-7.html","title":"7. PlatformInfo","keywords":"","body":"7. PlatformInfo 这部分主要介绍的机型相关的信息，可以使用 OCC 这类工具一键生成，选择和自己 CPU 相近的即可，由于 intel CPU 比较冗杂，不确定的话可以去官网搜索一下，确保是同一架构的也可以，这样效率最高也最简单。或者参考 OC 官方的 SMBIOS 选择建议也可以。 OCAuxiliaryTools Opencore Configurator OCC 会自动根据你选择的机型更改 CPU 型号，如果发现你的 CPU 型号错乱的话，那么手动将 ProcessorType 改为 0 就可以了。 AMD 和无核显的 CPU 设置 一般如果你的 CPU 没有核显（F 结尾的）或者你的 CPU 的核显无解（AMD 系列），那么建议设置的最佳机型为 iMac Pro1,1 因为这块的 Mac 机型本身也是没有核显的，所以可以充分利用独显来进行硬解： 你的序列号是否完美？ 因为序列号会影响到 iMessage（短信）的使用，所以要想更接近白苹果的体验的话，得选择一个有效的序列号。苹果官方的序列号查询地址为： https://checkcoverage.apple.com/cn/zh/ 序列号有 3 种级别。 有效没有被用过的序列号 > 无效序列号 > 有效被用过的序列号 国光测试其实编辑器自动生成的无效序列号并不影响苹果服务使用的，所以国光建议如果你刷不到完美的有效没有被用过的序列号的话，直接使用无效序列号就完事，因为随时时间的流逝，有效没有被用过的序列号只会越来越少了。 无效序列号 有效但是被用过的序列号 接着就是有效的序列号，但是被人用过了,可能电话技术支持已经到期： 被用过了 电话支持也到期了 也可能是电话技术支持依然有效的： 被用过了 但是电话支持还是有效的 但是并没有什么卵用，这表示这个序列号也被使用过了。 有效且没有被用过的序列号 最完美的序列号，国光我这里尝试了很久很久终于刷到了一次： 这表示序列号存在而且还没有被激活过，看到这种序列号不要犹豫，赶紧冲！ 不过呢，一些老款的机型基本上刷不出这种序列号了，都停产很久了，所以呢这种序列号运气和机遇都得具备才可以刷到。 到达次数限制怎么办 实际上情况浏览器缓存就好了，什么，你不会清空浏览器缓存？那自己去利用搜索引擎搜索去！ 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:08 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"4-OC配置/4-8.html":{"url":"4-OC配置/4-8.html","title":"8. UEFI","keywords":"","body":"8. UEFI 这种 config.list 的最后一章节，姿势有点杂，但是成功就在眼前了，再坚持一下。 嵌入式 APFS 安装 Big Sur 及其以上系统默认就可以了： 如果需要安装 High Sierra(10.13) - Catalina(10.15) 系统的话，需要将 MinDate 和 MinVersion 都设置为 -1 AppleInput 这部分不需要动，全部保持默认即可： 开机音频 基本上默认也行： 国光我习惯将 PlayChime 改为 Disabled，即关闭开机音频，这个开机音频就是白苹果开机那个 Duang 的一声音，还需要选择你的音频设备路径以及打对应的 Drivers 才可以生效，所以还不如直接关掉省心。 UFFI 驱动 这一步就是用于加载我们之前章节放置驱动的部分： 记住要勾选下面的「连接驱动程序」英文名称为：ConnectDrivers Apple 快捷键相关 这一部分一般默认即可： 显示输出 这一部分一般默认即可： 协议覆盖 这一部分一般默认即可： Quiks 怪癖 先来看下怪癖部分，有些平台是需要修改怪癖信息的，不过绝大多数情况下默认就行。 ActivateHpetSupport 老主板比如 ICH6 芯片组不具备相关的 HPET 设置，所以老主板需要开启 EnableVectorAcceleration 在 CPU 支持 avx512 或者 avx 的情况下，在 UEFI 界面中开启 avx 加速 DisableSecurityPolicy 关闭主板的 UEFI 上的 Secure Boot ExitBootServicesDelay 旧主板需要给予主板退出时间（单位为微秒） 较新的主板直接填 0 旧的主板比如 Z87pro，填 3000000-5000000 ForceOcWriteFlash 为所有OpenCore系统变量启用写入闪存一般不勾选 ForgeUefiSupport 勾选时允许在旧版 EFI 1.x 固件（如MacPro5,1）的硬件上运行为UEFI 2.x固件 IgnoreInvalidFlexRatio 如果你没有在 BIOS 中解锁 MSR0x194，即没有解锁 CFG，一定要勾选 ReleaseUsbOwnership 大部分的主板都有自动释放 USB 所有权的功能 如果开机键盘鼠标卡死或者 USB 失灵可以考虑勾选 ReloadOptionRoms 允许在固件版本通过升级后在较旧的 Mac 上重新加载 NVIDIA GOP Option ROM 一般不勾选 RequestBootVarRouting 开启启动磁盘的选项 TscSyncTimeout 帮助一些 X99、X299 的主板开启全核同步功能，但是不如一些 Kexts 专业 此选项旨在代替 TSCAdjustReset.kext 等类似补丁，推荐的值是 500000 但是这并不能在睡眠唤醒后生效，所以请填写默认值 0，并使用 TSCAdjustReset.kext 来做全核同步 UnblockFsConnect 惠普笔记本可能会让 OC 无法扫描到启动项 如果你的笔记本无法识别启动项的话，可以尝试开启 Intel 桌面 - Yonah、Conroe、Penryn、Lynnfield、Clarkdale、Sandy Bridge、Ivy Bridge、Haswell、Broadwell Intel 桌面 - Skylake、Kaby Lake、Coffee Lake、Comet Lake Intel 高端桌面 - Nehalem、Westmere、Sandy and Ivy Bridge-E、Haswell-E、Broadwell-E Intel 高端桌面 - Skylake-X/W、Cascade Lake-X/W Intel 笔记本 - Clarksfield、Arrandale、Sandy Bridge、Ivy Bridge、Haswell、Broadwell Intel 笔记本 - Skylake、Kaby Lake、Coffee Lake、Whiskey Lake、Coffee Lake Plus、Comet Lake、Icelake AMD 桌面系列 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:59:02 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/":{"url":"5-实战演示/","title":"六、实战演示","keywords":"","body":"六、实战演示 使用的 B360M + i5-8500 的主机来进行实战演示： 1. 机器概览 2. BIOS 设置 3. 磁盘划分 4. 安装 Windows 5. 安装 macOS 6. 完善引导 powered by Gitbook该文章最后修改时间： 2022-02-02 21:33:49 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/5-1.html":{"url":"5-实战演示/5-1.html","title":"1. 机器概览","keywords":"","body":"1. 机器概览 有感而发 这个时间小白太多，我不是他们的父母，我没有义务手把手把饭喂到他们嘴边。 机器概览 说了一大堆，但是根本表达不完我此刻内心的想法，算了，继续回到正轨，写文章去了： 配件 型号 CPU i5-8500 显卡 Intel UHD 630 核显 主板 技嘉 360M AORUS Pro 内存 金士顿骇客神条 8GB 2666Mhz * 2 条 硬盘 海康威视 C2000 Pro 512GB 网卡 Fenvi T919 BCM94360CD 四天线版 机箱 乔思伯 T03 电源 爱国者电竞 500W 散热 乔思伯 CR1000 所使用的网卡也是我自费从咸鱼上买的，卖家还认识我，所以给我优惠了一点点。 整机性价比的话不做评价，1 千个人有 1 千个哈姆雷特，性价比在每个人眼中可能也都是不一样的，总之这台机器拿来做黑苹果教程挺合适的，中规中矩是一个比较大众的配置。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:01:40 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/5-2.html":{"url":"5-实战演示/5-2.html","title":"2. BIOS 设置","keywords":"","body":"2. BIOS 设置 BIOS 之前的章节已经介绍过了，这里直接列出最终的设置情况吧： 主板型号：GIGABYTE B360M AORUS PRO BIOS 版本：F3 BIOS 日期：2019-05-17 【BIOS 功能】-【Windows 8/10】-【其他操作系统】 【BIOS 功能】-【CSM 支持】-【关闭】 【BIOS 功能】-【安全模式】-【Secure Boot Enable】-【关闭】 【集成外设】-【预设启动的显示设备】-【IGFX】（这里用的核显） 【集成外设】-【Intel Platform Trust Technology (PTT)】-【关闭】 【集成外设】-【Software Guard Extension (SGX)】-【关闭】 【集成外设】-【Trusted Computing】-【Security Device Support】-【Disable】 【集成外设】-【Super IO 配置】-【Serial Port】-【关闭】 【集成外设】-【USB 程序】-【Legacy USB Support】-【开启】 【集成外设】-【集成外设】-【XHCI Hand-off】-【开启】 【集成外设】-【集成外设】-【USB Mass Storege Driver Support】-【开启】 【集成外设】-【Network Stack Configuration】-【Network Stack】-【关闭】 【集成外设】-【SATA And RST Configuration】-【SATA Mode Selection】-【AHCI】 【芯片组】-【VT-d】-【关闭】 【芯片组】-【Internal Graphics】-【启动】 【芯片组】-【DVMT Pre-Allocated】-【64M】 【芯片组】-【DVMT Total Gfx Mem】-【256M】 【芯片组】-【4G 以上解码】-【启动】 【芯片组】-【Wake on LAN Enable】-【关闭】 【电源管理】-【平台电力管理】-【关闭】 【电源管理】-【鼠标唤醒】-【双击】 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:02:15 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/5-3.html":{"url":"5-实战演示/5-3.html","title":"3. 磁盘划分","keywords":"","body":"3. 磁盘划分 Windows + macOS 这个一个 512GB SSD 双系统磁盘划分的情况： C 盘为未来会用作 Windows 的 C 盘，123 GB 一般也足够日常轻度使用了 D 盘到时候用来安装 macOS，353 GB 日常使用也足够了实际上 E 盘这个盘符是临时划分的，实际上他就是 ESP 引导分区（分区必须 > 200MB），未来 Windows 和 macOS 的引导都会放这里 macOS 单系统 如果是 macOS 单系统的话，实际上无需进 PE 进行磁盘划分了，安装系统的时候，直接选择整个磁盘就 OK 了。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:02:21 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/5-4.html":{"url":"5-实战演示/5-4.html","title":"4. 安装 Windows","keywords":"","body":"4. 安装 Windows 这一章有点多此一举了，正常情况下默认大家都会安装 Windows 的，如果 Windows 都不可以很顺利安装的话，那么黑苹果就难如登天了。 拷贝镜像到 D 盘 这一步不一定是把镜像 D 盘，镜像直接放 U 盘里面然后插电脑上也行，但是理论镜像放在硬盘当中的话，安装速度要快很多。 WinNTSetup 安装系统 基本上各大 Windows PE 里面都自带这个工具，翻译过来也叫 Windows 安装器，认准这个图标就行。 主要操作如下，关键步骤都标注在图片上了： 配置好，点击「安装」就可以了，安装完成后，拔掉 PE U盘，点击「重启」即可： 等待 Windows 初始化 重启根据提示走一遍设置，耐心等待 Windows 10 初始化即可： 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:02:26 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/5-5.html":{"url":"5-实战演示/5-5.html","title":"5. 安装 macOS","keywords":"","body":"5. 安装 macOS 黑苹果 U 盘制作 可以参考之前写的章节：U 盘准备 本机型本次安装所使用的 EFI 我也开源到 Github 了。 项目地址为：https://github.com/sqlsec/GIGABYTE-B360M-AORUS-PRO 设置 U 盘为第一启动 不同的主板不太一样，本次操作的 U 盘启动快捷键为 F12，如果你实在找不到 U 盘启动快捷键的话，直接去 BIOS 将 U 盘改为第一启动项也是可以的： 可以看到我的 U 盘名称为 SMI ZEN-SMI，有两个启动分区，这里一个分区的 Windows PE 一个分区是 OC，因为我们安装需要 OC 了，所以选择 OC 分区即可，不知道哪个分区的可以都试一遍。 OpenCore 界面讲解 进入 OpenCore 界面的主界面如下： 从左到右分别是：Windows PE、硬盘上的 Window 10、安装 macOS 的启动盘、切换 SIP、重置 NVRAM 由于我们的 EFI 是定制好的，直接选择 Install macOS Big Sur 就可以了。 如果你对 EFI 没有信心的话，可以在回车前按下：Command/Windows + V键，这样就进入了 -v 啰嗦模式。 如果你快捷键没有效果的话，说明你的 EFI 没有配置好苹果热键，那么可去 boot-args 启动项里面手动添加 -v 第 1 遍进度条 如果你的 EFI 很完美的话，进度条应该会走的很快： 进入安装系统界面 然后会来到安装系统界面： 如果你的这个界面是俄语的话，那么是你的 EFI NVRAM 部分语言设置不对，可以设置完汉语后，再重置一下 NVRAM 即可。 格式化为苹果的磁盘格式 现在我们打开「磁盘工具」，找到之前留给 macOS 的磁盘分区，选择后点击右上角的「抹掉」： 然后随便写个你喜欢的名称，格式记住要选择「APFS」格式（老的 macOS 系统没有这个格式，就选 HFS 格式）。 格式化成功后的界面如下： 点击「完成」后就可以退出磁盘工具了，找到左上角，点击「磁盘工具」选择「退出磁盘工具」即可退出： 安装 macOS 接着会回到之前的界面，此时选择「安装 macOS Big Sur」，然后点击「继续」： 一直继续，且「同意」苹果的协议，然后选择我们之前格式的苹果格式的磁盘分区「Macintosh」，然后点击「继续」： 接着会开始从 U 盘中拷贝镜像写入到硬盘中： 写入速度根据你的硬盘和 U 盘的速度而定，所以一个高速的 U 盘是可以节约很多时间的。 第 2 遍进度条 上述写入操作的过程会突然重启一下，我们继续选择 OC 分区： 此时的 OC 安装界面稍微不一样了，大概像下面这个样子： 此时我们选择新冒出来的「 macOS Install」，然后会继续走一遍进度条： 和之前不同的是，这个进度条后面会显示安装的剩余时间，我们耐心等待即可。 第 3 遍进度条 上面的进度条走着走着同样也会自动重启，继续选择 U 盘的 OC 分区为第一启动： 此时又回到了这个界面： 我们依然选择「 macOS Install」，然后会继续走一遍进度条，不过这次进度条没有出现倒计时了，就是一个简约的苹果 Logo： 同样这个 Logo 走完也会自动重启。 第 4 遍进度条 自动重启后，继续选择 U 盘的 OC 分区为第一启动： 此时 OC 的界面如下，可以看到我们之前自定义名称的 Mac 格式的硬盘出现了「Macintosh」： 选择「Macintosh」然后回车，这个时候会再走一次进度条： 然后走完进度条之后会自动重启一次。 第 5 遍进度条 自动重启后，继续选择 U 盘的 OC 分区为第一启动： 此时 OC 的界面如下，可以看到我们之前自定义名称的 Mac 格式的硬盘出现了「Macintosh」： 选择「Macintosh」然后回车，这个时候会再走一次进度条，这次进度条不会重启了，顺利的话会进入到苹果的初始化界面。 初始化设置 上面步骤顺利的话会来到苹果的初始化设置界面： 选择好自己的国家地区，然后点击「继续」，接着到了「语言与输入法」界面： 这里都是符合我的需求的，所以继续点击「继续」，接着到了「辅助功能」界面，这些我们可以先不用设置，点击「以后」跳过这一步： 接着到了网络这一步，我们可以选择先不联网，选择「其他网络选项」： 因为正常的电脑联网这一步是需要后续调整的，我这里是因为使用免驱网卡的原因才可以看到 WiFi 的选项，接着选择「我的电脑不接入互联网」： 不联网减少不必要的操作，联网这些操作我们进系统后再设置都是 OK 的。此时应该会弹出提示框，我们忽略警告，选择「继续」操作： 接着到「数据与隐私」部分，选择「继续」： 接着到「迁移助手」界面了，根据自己的情况选择，一般干净安装的话，选择左下角的「以后」： 挖槽，怎么这么多界面，写的好累啊，到了「Apple ID」登录界面，因为我们没有联网，所以选择左下角的「稍后设置」： 然后弹出警告，我们忽略掉，选择「跳过」： 最后同意一下苹果的条款： 设置一些自己的账户和登录密码，选择一下头像然后点击「继续」： 挖槽，太累了不截图了，鸡儿这么多界面，反正一直根据自己的感觉点击就可以了，正常人都没问题的，最后会成功进入系统： 至此，安装就大功告成了！！！ 此刻的你一定很高兴，这个时候丢出打赏链接，效果应该不错的，2333 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:02:34 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/5-6.html":{"url":"5-实战演示/5-6.html","title":"6. 完善引导","keywords":"","body":"6. 完善引导 疑问 聪明的网友肯定会发现：哎，不对啊！我不能每次要进 macOS 系统都得插个 U 盘，然后快捷键启动吧： 2333，当然可以不需要 U 盘了，下面跟着国光的步骤来一步一个脚印的操作。 挂载磁盘引导分区 这一步在 macOS 和 在 Windows 下操作都是可以的。 如果你在 Windows 下操作，一般需要使用 DiskGenius 这个工具来辅助操作，如果是在 macOS 下挂载工具就多了去了了，下面国光使用的 OCC 来进行 EFI 分区的挂载。 首先下载好 OCC 工具，这个工具就算不挂载也是黑苹果必备工具了， OCC 官网下载地址为：https://mackie100projects.altervista.org/download-opencore-configurator/ 打开之后，选择右上角的 OC 图标，点击，找到自己的安装系统的硬盘，点击「挂载分区」： 输入密码后，即可挂载成功，然后点击左上角图标的「打开分区」即可，硬盘的引导分区内容如下： 挂载 U 盘的引导分区 同理，挂载下 U 盘的引导分区，此时 U 盘的引导分区内容如下： 将 OC 文件拷贝到硬盘目录下 任务完成，现在可以拔掉 U 盘，然后关机重启进 Windows 操作系统了。 情况讲解 多硬盘多系统 举个例子： 磁盘 A：安装了 Windows 磁盘 B：安装了 macOS 这种情况下无需手动使用工具添加引导项也可以，直接将 OC 的 EFI 引导文件拷贝到 磁盘B 的 EFI 引导分区下，然后在 BIOS 里面将 磁盘 B的引导设置第 1 启动即可。 单硬盘多系统 举个例子： 磁盘 A：安装了 Windows 和 macOS 这种情况下，就得使用下面的 DG 或者 EasyUEFI 手动添加引导了。 DG 方法 其实这种方法更简单，和下面的 EasyIUEFI 方法原理一模一样： EasyIUEFI 方法 来到 Windows 下我们可以使用 EasyUEFI 工具来添加引导，当然也有一些替代品如 Bootice，但是呢，这样就篇幅很多，显得很啰嗦了，所以本文只使用 EasyUEFI 做一个演示使用。 EasyUEFI 刚刚出来的时候是免费的，后面慢慢收费了，所以国光这里使用的网上搬运过来的破解版，文件安全与否请自行查杀。 EasyUEFI 破解版下载地址：https://sqlsec.lanzouw.com/i4amxzmj1cj 绿色版本点击即可使用， 打开后的主界面如下： 选择「管理 EFI 启动项」，最终效果如下： 首先点击「创建新项」： 操作系统类型选择「Linux 或者其他操作系统」，描述随便写一个，目标分区选择「硬盘的第一个 ESP 引导分区」，然后点击「浏览数据」，选择 EFI/OC/ 目录下的 OpenCpre.efi 文化后，点击确定即可： 接着将刚刚添加的启动项，「上移」到第一位即可： 最终的效果 拔掉 U 盘后，每次开机选择操作系统的界面如下： 可以很方便的进入 Windows 和 macOS 系统，至此大功告成了。 没有效果？ 如果使用了 DG 或者 EasyUEFI 手动添加引导但是依然没有 OC 为第 1 启动的话，很简单，直接 BIOS 里面将你手动添加的引导设置为第 1 启动即可。 打赏支持一下 此刻的你一定很高兴，这个时候丢出打赏链接，效果应该不错的，2333 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:02:41 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"5-实战演示/5-7.html":{"url":"5-实战演示/5-7.html","title":"7. 更新系统","keywords":"","body":"7. 更新系统 前言 正常情况下使用 OC 引导的话，小版本可以无脑直接升级，大版本的话可能有些微调，需要及时关注大版本的系统变化啥，不过总有人会先去踩坑总结的，遇到大的变化，OC 或者一些著名 Kexts 那边也会调整升级的。 演示 某日正在愉快的上网，突然右上角收到了一个「有更新项目」的提醒： 强迫症这都能忍？直接点击「立即重新启动」： 然后安装更新后会重启，此时回到 OC 引导界面，会发现有新的启动项出现了： 没错，我们选择这个新的启动项「Macintosh HD」来启动 macOS 系统小更新都会有这个启动项，所以强烈不建议你把自己的磁盘名称也改为 Macintosh HD，因为更新的时候容易搞混淆 安装完更新之后可能重启几次，总之这启动项还在的话，就一直选择这个新的启动项「Macintosh HD」来启动。 更新成功后，启动项恢复正常了，我们选择原本的启动项 「Macintosh」来启动： 最终本次更新很顺利，直接就升级到最新的版本了： 打赏 此刻的你一定很高兴，这个时候丢出打赏链接，效果应该不错的，2333 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:02:47 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/":{"url":"6-实用姿势/","title":"七、实用姿势","keywords":"","body":"七、实用姿势 powered by Gitbook该文章最后修改时间： 2022-05-05 11:55:06 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-1.html":{"url":"6-实用姿势/6-1.html","title":"1. USB 定制","keywords":"","body":"1. USB 定制 USB 定制的意义 如果 USB 定制不完美的话，可能会出现以下情况： 蓝牙无法使用，因为蓝牙走 USB 协议 无法正常进入系统安装界面，提示鼠标或者妙控板之类的画面 睡眠立马就醒来，因为蓝牙等 USB 没有内建 USB 接口没有反应或者速率无法跑满 建议安装系统前先定制一下 USB，避免后面遇到不必要的麻烦 啰嗦一下 早期使用 Hackintool 工具定制 USB 这种方法比较多，但是到 macOS 11 后面的版本的时候，这种方法不再好用了，目前最完美的方法就是 Windows 下使用 USBToolBox 来定制 USB，最后再使用 Hackintool 简单微调修正一下。 运行工具 USBToolBox 的官方项目地址：https://github.com/USBToolBox/tool/ 已编译的下载地址：https://github.com/USBToolBox/tool/releases 蓝奏云的下载地址：https://sqlsec.lanzouw.com/iqncozmga8b 下载 「Windows.exe」到 Windows 平台，双击即可运行： 探测端口 输入 D 然后回车来探测电脑上的端口： 此时的会出现如下界面： 这个界面每 5 秒会刷新一次。 插入 USB 设备 分部在各个 USB 接口插入 USB2.0 和 USB 3.X 的设备，每插入一次停留 5 秒钟，如果有 Type-C 设备的话，正反都要分别插入记录，最终我的笔记本最终探测端口的效果如下： 都挨个插一遍后，输入 B 回车即可返回主菜单： 查看端口 回到主菜单，输入 S 来查看端口探测的结果： 最终我的设备端口探测的结果如下： 可以看到 1、2、4、5、6、10、13、15、16 这个 9 个都是活跃的 USB 的端口。 导出端口 此时结果查看感觉没问题的话，输入 K 回车，即可导出 UTBMap.kext 文件： 一般情况下会保存在当前程序的同级目录下： OC 加载 Kexts 除了上述生成的 UTBMap.kext 文件以外，我们还需要配合 USBToolBox.kext 使用。 USBToolBox.kext 官方下载地址为：https://github.com/USBToolBox/kext/releases 1.10 国内的蓝奏云下载地址为：https://sqlsec.lanzouw.com/iDh3gzmlxsj 将上述两个 Kext 放到 OC 的 Kexts 文件夹下面并加载，然后记得取消 XhciPortLimit 勾选： 重启即可生效，至此你的 USB 基本上定制完了，正常使用不是问题了，强迫症换着可以继续看下去。 Hackintool 验证 使用 Hackintool 查看发现 USB 各个接口均正常识别并工作： 不过各个接口都插一遍，发现这个 SS02 的端口确实多了，非强逼症可以不用管它，引用罗永浩那句名言：又不是不能用？ Hackintool 优化 使用 Hackintool 重新删除掉多余的 SS02 端口，然后导出 USBPorts.kext，使用 OC 加载，然后取消之前 USBToolBox 的两个 Kexts 的启用状态： 重启，最终的效果如下： 这样强逼症终于舒服了，也没有多余的端口。 实际上还是有瑕疵，就是第一个 HS01 应该是 USB2 设备，解决方法就是使用 Hackintool 纠正再定制一下，不过国光我这里懒了，又不是不能用！ 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:02:55 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-2.html":{"url":"6-实用姿势/6-2.html","title":"2. 编译触控板驱动","keywords":"","body":"2. 编译触控板驱动 前言 当你看到这部分内容的时候，表示你黑苹果已经研究的比较深了，驱动得自己定制魔改了。所以这里就假设你已经是一个高玩了，不会再啰嗦一些基础的姿势。 实际上这块内容搬运自我博客的这篇文章：双屏笔记本在 macOS 下的触控板驱动研究 由于文章比较长，所以就从里面提起关键的部分放到了这个教程里面，感兴趣的朋友也可以去原文观看一下。下面直接开始 VoodooI2C 项目的编译教程。 更新一下：VoodooI2C 的项目一直在变化，所以国光我没有精力去一直维护更新这篇文文章，虽然项目一直变，但是本文基本的思路还是值得参考的。 克隆源码 VoodooI2C 项目所依赖的模块属于不同的仓库，所以 git clone 的时候需要使用 recursive 参数一次性克隆下载完： # 本次存放的文件夹路径仅供参考 $ pwd /Users/bytedance/Desktop/XCode $ cd ~/Desktop/XCode $ git clone --recursive https://github.com/VoodooI2C/VoodooI2C.git 打开项目 使用 Xcode 打开VoodooI2C.xcworkspace文件： 打开项目肯定不是一帆风顺的，我们会看到许多 issue： 这里实际上我们不用管它，全部默认就好了，不要手动去点击「Perform Changes」哦。 IOKit 缺失 点击「Product」-「Build」先编译一下，发现报错了，提示：'IOKit/IOLib.h' file not found： 这个地方一开始卡了我很久，后面发现在项目的「Build Settings」里面的「Library Search Paths」里面的 MacKernelSDK这个文件夹我并没有： 所以才会导致找不到 IOKit 的库文件，解决方法就是手动去补充完善 MacKernelSDK 的文件夹。 acidanthera 大佬维护的 MacKernelSDK 的一个开源项目地址为：https://github.com/acidanthera/MacKernelSDK # 注意我当前操作的路径 $ pwd  ✔ /Users/bytedance/Desktop/XCode/VoodooI2C # 直接下载这个项目 $ git clone https://github.com/acidanthera/MacKernelSDK.git 此时再编译会发现之前的'IOKit/IOLib.h' file not found 报错消失了，这个问题得到了解决。 VoodooInputMultitouch 缺失 解决完上面一个小问题后，会发现又出了新的报错了： 'VoodooInputMultitouch/VoodooInputTransducer.h' file not found 不要慌，问题很大，这是因为项目里面缺少了对应的文件，也需要我们手动去补充一下。比较巧合的是，这个项目也是由acidanthera 大佬维护的 ，地址为：https://github.com/acidanthera/VoodooInput 将 VoodooInputMultitouch 文件拷贝到 VoodooI2C/Multitouch\\ Support/Native 目录下： 此时再编译应该不会报错了。 cldoc 或者 cpplint 缺失 不过总有人会各种不顺，还可能会遇到 xargs: cldoc: No such file or directory 或者 cpplint: command not found这类报错，国光我这里忘记怎么解决的了，好像是直接安装 Python 的库来解决的： sudo easy_install cldoc sudo easy_install cpplint 貌似 macOS 12.3 开始移除了 Python2 了，就没有 easy_install命令， 我们可以使用 brew 命令来替代： brew install cpplint 接着可能还遇到 cldoc 命令缺失的问题，除了安装对应的 cldoc 命令以外，还可以在项目里面直接移除掉：「Generate Documentation」部分： 具体更多细节忘记了，但是这块不复杂，既然都研究到 Xcode 编译这一步了，所以这个问题应该也难不倒大家的吧。 编译项目 至此所有的报错都解决了，下面直接来编译生成 kexts 吧，首先点击 build编译一下，很顺利： 然后点击「Product」接着点击「Archive」打包项目： 然后会弹出应该窗口，选择我们打包的最新版本，选择「Distribute Content」 后面默认选择「Build Products」即可： 最后桌面上就躺好了我们编译好的 kexts 文件了： 坑点记录 我们编译的 VoodooI2C.kext 的 Pluglns 不完整，里面是两个替身： 解决方法可以手动复制目录外面的 kext 进去，或者直接使用官方编译好的 VoodooI2C.kext。 支持一下？ 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:03:02 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-3.html":{"url":"6-实用姿势/6-3.html","title":"3. 触控板中断示例","keywords":"","body":"3. 触控板中断示例 前言 当你看到这部分内容的时候，表示你黑苹果已经研究的比较深了，触控板工作在轮询模式下已经无法满足你了，非得搞个 GPIO 中断才满意。实际上这块内容搬运自我博客的这篇文章：双屏笔记本在 macOS 下的触控板驱动研究 由于文章比较长，所以就从里面提起关键的部分放到了这个教程里面，感兴趣的朋友也可以去原文观看一下。下面直接开始触控板中断教程的部分。 硬件信息 中断之前先收集一下自己触控板的基础信息，先在 Windows 下对触控板信息进行一个简短的整理，使用的是标准的符合微软 I2C 协议触控板： 在 macOS 下使用IORegistryExplorer也是可识别到触控板的型号为：GDX1515 将以上可能有用的信息整理出来如下： Windows 下这种二合一触控板叫法：ScreenPad 触控板型号：GDX1515 触控板的屏幕型号：ScreenXpert IRQ：0x0000006D (109) APIC Pin：6d（109） 设备实例路径：ACPI\\GDX1515\\1 硬件 Id： ACPI\\VEN_GDX&DEV_1515 ACPI\\GDX1515 *GDX1515 BIOS 设备名称：\\_SB.PCI0.I2C1.ETPD 位置路径： ACPI(_SB)#ACPI(PCI0)#(I2C1)#ACPI(ETPD) ACPI(_SB)#ACPI(USBX)#(I2C1)#ACPI(ETPD) 触控板的工作模式 比较完美的情况是让触控板工作在中断模式（interrupts）下，关于轮询和中断可以参考下面几个概念： APIC 中断 macOS 使用的中断模式，功能完美，极少数设备支持 只有 APIC Pin 值小于 2F (47)的时候才支持 GPIO 中断 Windows 系统下大多使用的中断模式 仅次于 APIC 中断，比较高效，但是需要自己更改定制 SSDT 轮询 比较低效的模式 但是兼容性比较好，大部分触控板都适用 容易出现指针漂移等不灵敏的 BUG 那我们目前的触控板工作在啥模式情况下呢？通过前面的信息收集，我们知道触控板的 APIC Pin 值为： IRQ：0x0000006D (109) APIC Pin：6d（109） 判断触控板的工作模式 那么如何判断当前触控板的工作模式呢？目前有下面 3 种方法： 查看 dmesg 日志 顺利的情况下使用 dmesg 命令可以直接根据触控板型号的关键词可以搜索到中断还是轮询的工作状态： 但是黑苹果总不会一帆风顺的，正如你所见，dmesg 查看的日志结果为空的，这是因为 macOS 12.0 系统限制了 dmesg 查看的内容，我们这里需要手动加载 kexts 来查看日志。 关闭 SIP 很多 OC 的配置默认是开启 SIP 的，因为我们要加载自己的 Kexts，所以需要在开机选择系统的界面手动切换下 SIP 状态： 如果你的 OC 没有这个选项，是因为没有勾选这个配置开关，具体细节可以参考我的这部分文章：国光的黑苹果安装教程：手把手教你配置 OpenCore OC 里面禁用 Kexts 通过 OpenCore 注入的 kexts 是无法正常看到 dmesg 日志的，所以我们需要手动禁用下相关的 kexts： 手动加载 Kexts 将 VoodooI2C.kext 和 VoodooI2CHID.kext 拷贝到桌面上，然后执行以下命令： # 修改所有者 sudo chown -R root:wheel VoodooI2C* # 修改权限 sudo chmod -R 755 VoodooI2C* # 加载 kexts sudo kextload -v VoodooI2C* 当然第一次加载 kexts 得在设置的「安全性与隐私」里面同意下权限，然后重启下电脑才可以成功加载： 经过上述折腾，最终查看的效果如下： 可以看到通过 dmesg 日志可以发现此 GDX1515 触控板工作在 polling 模式下，即轮询模式。 关于日志的查看细节，下面会单独开个子目录详细介绍。 使用 IORegistryExplore 上面的方法可能有点繁琐，实际上使用IORegistryExplorer也是直接看到当前触控板的工作状态的，因为在 Windows 的设备管理器下我的触控板的位置路径为： ACPI(_SB)#ACPI(PCI0)#(I2C1)#ACPI(ETPD) ACPI(_SB)#ACPI(USBX)#(I2C1)#ACPI(ETPD) 所以搜索 ETPD 可以看到我们触控板的详细信息，一般会搜索出两个结果，下面是第一个结果： 不过第一个结果没有参考价值，我们一般关注搜索出来的第 2 个结果： 像上面这个图就是一个典型的没有工作在中断模式的情况。 这个时候肯定有网友会问，如果是 GPIO 中断模式的话，那这里应该长啥样子呢？ 2333 这个问题问的不错，国光请教了 Bat.bat 大佬，下面是大佬的原话： 代码里走到 GPIO 会有个 set property 把 IRQ 和 Pin 写到 ioreg 下，所以使用 IORegistryExplorer 查看的话，关注是否有这两个新增的属性即可。 说到这里可能还有网友不是很明白，下面国光我帖一个处于 GPIO 中断模式下的 IORegistryExplorer 截图，大家应该就懂了： 定制修补 DSDT 提取 DSDT 因为制作触控板肯定是需要定制 SSDT 的，所以提取出主板原始的 DSDT 少不了。 提取 DSDT 的方法有很多，可以使用 Clover，Windows 下可以使用 AIDA64，macOS 下可以使用 DPCIManager ，直接打开点击左上角的「Extract DSDT」即可： DSDT 排错 可以使用 OC 直接在 ACPI 里面加载 DSDT，也可以将 DSDT 里面触控板的相关代码单独提取出来，保存为 SSDT 文件。两个方法都可以，这里国光我是直接在 DSDT 这里修改的（简单粗暴）。 DSDT 排错的话这里要使用必备的 MaciASL 这个软件，直接点击「Compile」编译即可，如果没猜错的话肯定会有一堆报错： 这是因为每家主板的 DSDT 的 ACPI 规范不统一，所以我们得根据自己的编程经验去修改报错，这块不太好写文章描述出来，因为每个主板都不一样，国光我这里的报错还算比较容易理解，我直接删掉了这些Zero 代码即可，23333（具体排错得根据对应报错情况来） 最终成功 0 errors 了： DSDT 没问题的话就可以直接使用 OC 加载了： 寻找触控板代码 因为根据前面的信息收集，我们知道了触控板的路径为 ETPD，所以直接搜索 ETPD 即可找到触控板的代码， 发现左下角的路径也满足我们上面信息收集（ACPI(_SB)#ACPI(PCI0)#(I2C1)#ACPI(ETPD)）的情况： 下面将触控板的代码部分贴出来： Scope (_SB.PCI0.I2C1) { Device (ETPD) { Name (_ADR, One) // _ADR: Address Name (ETPH, Package (0x01) { \"ASUE1407\" }) Name (FTPH, Package (0x09) { \"FTE1001\", \"FTE1200\", \"FTE1200\", \"FTE1300\", \"FTE1300\", \"FTE1201\", \"FTE1200\", \"FTE1200\", \"FTE1200\" }) Name (GTPH, Package (0x05) { \"GDX1505\", \"GDX1300\", \"GDX1200\", \"GDX1301\", \"GDX1515\" }) Method (_HID, 0, NotSerialized) // _HID: Hardware ID { If (And (TPDI, 0x04)) { Return (DerefOf (Index (ETPH, TPHI))) } If (And (TPDI, 0x10)) { Return (DerefOf (Index (FTPH, TPHI))) } If (And (TPDI, 0x40)) { Return (DerefOf (Index (GTPH, TPHI))) } Return (\"ELAN1010\") } Name (_CID, \"PNP0C50\") // _CID: Compatible ID Name (_UID, One) // _UID: Unique ID Name (_S0W, 0x03) // _S0W: S0 Device Wake State Method (_DSM, 4, NotSerialized) // _DSM: Device-Specific Method { If (LEqual (Arg0, ToUUID (\"3cdff6f7-4267-4555-ad05-b30a3d8938de\") /* HID I2C Device */)) { If (LEqual (Arg2, Zero)) { If (LEqual (Arg1, One)) { Return (Buffer (One) { 0x03 }) } Else { Return (Buffer (One) { 0x00 }) } } If (LEqual (Arg2, One)) { Return (One) } } Else { Return (Buffer (One) { 0x00 }) } } Method (_STA, 0, NotSerialized) // _STA: Status { If (LOr (LNotEqual (TPIF, One), LAnd (DSYN, One))) { Return (Zero) } Return (0x0F) } Method (_CRS, 0, Serialized) // _CRS: Current Resource Settings { Name (SBFI, ResourceTemplate () { I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80, AddressingMode7Bit, \"\\\\_SB.PCI0.I2C1\", 0x00, ResourceConsumer, , Exclusive, ) Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, ) { 0x0000006D, } }) Return (SBFI) } } } } GPIO Pinning 固定 国光这里只介绍如何定制 GPIO 中断，轮询和其他模式不在本文的范畴内。 寻找触控板关键代码 根据_CRS方法这个特征，我们可以很容易直找到触控板代码中类似如下的代码片段： Method (_CRS, 0, Serialized) // _CRS: Current Resource Settings { Name (SBFI, ResourceTemplate () { I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80, AddressingMode7Bit, \"\\\\_SB.PCI0.I2C1\", 0x00, ResourceConsumer, , Exclusive, ) Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, ) { 0x0000006D, } }) Return (SBFI) } 重命名 SBFI VoodooI2C 在以 GPIO 中断模式调用 DSDT 中触摸设备的_CRS 方法时，一律使用 SBFG 参数而不是 SBFI 参数。所以我们目前的触控板代码里面的 SBFI 变量是不满足要求的，我们先把 SBFI重命名为 SBFB，至于 SBFG 变量我们后面单独添加一下（如果你的 DSDT 里面没有的话）。 Method (_CRS, 0, Serialized) // _CRS: Current Resource Settings { Name (SBFB, ResourceTemplate () { I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80, AddressingMode7Bit, \"\\\\_SB.PCI0.I2C1\", 0x00, ResourceConsumer, , Exclusive, ) // Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, ) // { // 0x0000006D, // } }) Return (SBFB) } 重命名后移除 _CRS 方法中的以下内容（即上面代码注释的部分）： Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, ) { 0x0000006D, } 寻找 GPIO Pin 在触控板的代码中寻找类似如下的代码片段： Name (SBFG, ResourceTemplate () { GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000, \"\\\\_SB.PCI0.GPI0\", 0x00, ResourceConsumer, , ) { // Pin list 0x0000 } }) 如果找到的话，那么恭喜你，你的设备可能都不需要计算 GPIO Pin 值。没有找到也没有关系，我们可以手动添加，具体参考下面内容。 添加 GPIO 模板 很明显我的触控板搜索不到 GPIO 相关的代码，所以我们需要复制上面的代码片段，将其添加到 _CRS 方法下面： Method (_CRS, 0, Serialized) // _CRS: Current Resource Settings { Name (SBFB, ResourceTemplate () { I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80, AddressingMode7Bit, \"\\\\_SB.PCI0.I2C1\", 0x00, ResourceConsumer, , Exclusive, ) }) // 下面是新增的 GPIO 模板代码片段 Name (SBFG, ResourceTemplate () { GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000, \"\\\\_SB.PCI0.GPI0\", 0x00, ResourceConsumer, , ) { // Pin list 0x0000 // 这个值 我们待会要计算一下 } }) Return (SBFB) } 修改 _CRS 返回值 因为我们 _CRS 方法里面还引入了 SBFG 变量，所以得将默认的 Return (SBFB) 返回值修改为： Return (ConcatenateResTemplate (SBFB, SBFG)) Bat.bat 大佬原话：有 gpioint 的设备不用算 pin，没有的加上也基本上不可能成功，算 pin 其实是最后死马当活马医的方案。 计算 GPIO Pin 值 我们上面添加的模板中，GPIO Pin 值为 0x0000，这个一般是跑不起来的，只能起占位的作用，所以需要计算一个正确的 GPIO 值。这一步比较关键，不同的 CPU 有不同的计算公式，下面的这个公式也是 Bat.bat 大佬提供的： Skylake（intel 6 代 CPU） If APICPIN > 47 And APICPIN 79 And APICPIN CoffeeLake-H（intel 8 代标压 CPU） If APICPIN > 47 And APICPIN 47 And APICPIN 71 And APICPIN 95 And APICPIN 108 And APICPIN CoffeeLake-LF 和 Whiskylake（intel 8 代低压 CPU 和 Whiskylake 架构 CPU） If APICPIN > 47 And APICPIN 71 And APICPIN 95 And APICPIN 108 And APICPIN 我的笔记本 CPU 是 i7-10510U，属于 Comet Lake 的低压 CPU，会发现上述公式并没有 Comet Lake 系列的，不过 Bat.bat 大佬说 10 代就是 8 代的马甲，所以使用 CoffeeLake-LF 和 Whiskylake 公式即可，带入公式可计算出我们的 GPIO Pin 的十进制： 我们的 APICPIN 的 16进制为 6d，转换为 10 进制为 109，满足公式如下条件： ElseIf APICPIN > 95 And APICPIN 即 GPIOPIN = 109，转换为 16 进制就是 6d 同时会发现我们的 APICPIN 也满足如下条件： ElseIf APICPIN > 108 And APICPIN 即GPIOPIN = 65，转换为 16 进制就是 41 可以看到我们算出了 2 个值，分别是 6d和41，得一个个尝试去验证就可以了。 在极少数情况下，计算出来的 GPIO Pin 值不起作用。在这种情况下，你可以尝试一些常见的值：0x17，0x1B，0x34和0x55。 最终国光尝试了我的这个 GDX1515 触控板的 GPIO Pin 值为 6d： 放一个贴图，这样大家看起来应该会比较直观一点。 最终效果 使用IORegistryExplorer 可以看到我们的这个 GDX1515 冷门小众的触控板终于工作在 GPIO 中断模式下了，可以看到出现了 gpioPin 和 gpioIRQ 属性值，完美： 再来看下 dmesg 的日志情况： # 发现了 GDX1515 的 I2C 协议的触控板 [ 44.313108]: VoodooI2CControllerDriver::pci8086,2e9 Found I2C device: GDX1515 # ETPD 发现了有效的 _CRS 方法 [ 44.313178]: VoodooI2CDeviceNub::ETPD Found valid resources from _CRS method [ 44.313182]: VoodooI2CControllerDriver::pci8086,2e8 Got bus configuration values [ 44.313231]: VoodooI2CDeviceNub::ETPD Returned index 0x0 from _DSM or XDSM method is not supported [ 44.313235]: VoodooI2CDeviceNub::ETPD Could not retrieve resources from _DSM or XDSM method # ETPD 发现了有效的 GPIO 中断 [ 44.313244]: VoodooI2CDeviceNub::ETPD Found valid GPIO interrupts [ 44.313344]: VoodooI2CControllerDriver::pci8086,2e8 Publishing device nubs # ETPD 得到 GPIO 控制器 [ 44.313347]: VoodooI2CDeviceNub::ETPD Got GPIO Controller! VoodooGPIOCannonLakeLP [ 44.816012]: VoodooI2CHIDDevice:0x100000738 start # GDX1515 设备启动的重置完成 [ 44.919729]: VoodooI2CHIDDevice::GDX1515 Device initiated reset accomplished [ 45.050029]: VoodooI2CHIDDevice:0x100000738 creating interfaces [ 45.051068]: VoodooI2CHIDDevice:0x100000738 Matching has vendor DeviceUsagePage : ff0c bundleIdentifier com.apple.AppleUserHIDDrivers ioclass AppleUserHIDEventService but transport and vendorID is missing [ 45.053582]: VoodooI2CPrecisionTouchpadHIDEventDriver:0x10000073d start [ 45.059693]: open by VoodooI2CPrecisionTouchpadHIDEventDriver 0x10000073d (0x0) # GDX1515 进入 Precision Touchpad Mode (PTP)模式，即高精度触控板模式 [ 45.059739]: VoodooI2CPrecisionTouchpadHIDEventDriver::GDX1515 Putting device into Precision Touchpad Mode 从日志中也可以看到完美工作了，工作在 GPIO 中断模式下。 为了有对比，下面再附上没有工作在 GPIO 中断模式下的日志情况： 没有定制 DSDT 在轮询下的日志 [ 48.517816]: VoodooI2CControllerDriver::pci8086,2e9 Found I2C device: GDX1515 [ 48.517869]: VoodooI2CDeviceNub::ETPD Found valid resources from _CRS method [ 48.517913]: VoodooI2CDeviceNub::ETPD Returned index 0x0 from _DSM or XDSM method is not supported [ 48.517917]: VoodooI2CDeviceNub::ETPD Could not retrieve resources from _DSM or XDSM method # ETPD 警告，发现了不兼容的 APIC pin 值 6d，它是大于 2f 的 [ 48.517925]: VoodooI2CDeviceNub::ETPD Warning: Incompatible APIC interrupt pin (0x6d > 0x2f) # ETPD 找不到任何 APIC 或 GPIO 中断。 您可能将在轮询模式下运行。 [ 48.517931]: VoodooI2CDeviceNub::ETPD Warning: Could not find any APIC nor GPIO interrupts. Your chosen satellite will run in polling mode if implemented. [ 48.519529]: VoodooI2CHIDDevice:0x100000725 start # GDX1515 无法获取中断事件源，改用轮询模式 [ 48.519539]: VoodooI2CHIDDevice::GDX1515 Warning: Could not get interrupt event source, using polling instead [ 48.722472]: VoodooI2CHIDDevice::GDX1515 Device initiated reset accomplished [ 48.854707]: VoodooI2CHIDDevice:0x100000725 creating interfaces [ 48.856351]: VoodooI2CHIDDevice:0x100000725 Matching has vendor DeviceUsagePage : ff0c bundleIdentifier com.apple.AppleUserHIDDrivers ioclass AppleUserHIDEventService but transport and vendorID is missing [ 48.860549]: VoodooI2CPrecisionTouchpadHIDEventDriver:0x10000072a start [ 48.866671]: open by VoodooI2CPrecisionTouchpadHIDEventDriver 0x10000072a (0x0) # GDX1515 进入 Precision Touchpad Mode (PTP)模式，即高精度触控板模式 [ 48.866716]: VoodooI2CPrecisionTouchpadHIDEventDriver::GDX1515 Putting device into Precision Touchpad Mode 定制了 DSDT，但 GPIO 不正确的日志 [ 37.835221]: VoodooI2CControllerDriver::pci8086,2e9 Found I2C device: GDX1515 [ 37.835266]: VoodooI2CDeviceNub::ETPD Found valid resources from _CRS method [ 37.835298]: VoodooI2CDeviceNub::ETPD Returned index 0x0 from _DSM or XDSM method is not supported [ 37.835306]: VoodooI2CDeviceNub::ETPD Could not retrieve resources from _DSM or XDSM method [ 37.835309]: KextLog: AuxKC bundle com.alexandred.VoodooI2CServices marked as loadable # ETPD 发现了有效的 GPIO 中断 [ 37.835312]: VoodooI2CDeviceNub::ETPD Found valid GPIO interrupts [ 37.835408]: VoodooI2CDeviceNub::ETPD Got GPIO Controller! VoodooGPIOCannonLakeLP [ 38.337232]: VoodooI2CHIDDevice:0x100000761 start # 无法获取 GPIO 引脚的硬件引脚 81（错误的 GPIO Pin 的10进制），无法获取中断事件源，改用轮询 [ 38.337263]: VoodooGPIOCannonLakeLP::Failed getting hardware pin for GPIO pin 81VoodooI2CHIDDevice::GDX1515 Warning: Could not get interrupt event source, using polling instead [ 38.539715]: VoodooI2CHIDDevice::GDX1515 Device initiated reset accomplished [ 38.670485]: VoodooI2CHIDDevice:0x100000761 creating interfaces [ 38.672136]: VoodooI2CHIDDevice:0x100000761 Matching has vendor DeviceUsagePage : ff0c bundleIdentifier com.apple.AppleUserHIDDrivers ioclass AppleUserHIDEventService but transport and vendorID is missing [ 38.676469]: VoodooI2CPrecisionTouchpadHIDEventDriver:0x100000766 start [ 38.682612]: open by VoodooI2CPrecisionTouchpadHIDEventDriver 0x100000766 (0x0) # GDX1515 进入 Precision Touchpad Mode (PTP)模式，即高精度触控板模式 [ 38.682668]: VoodooI2CPrecisionTouchpadHIDEventDriver::GDX1515 Putting device into Precision Touchpad Mode 炫耀一下 双屏笔记本真的很帅，等我最近做一期视频记录一下，到时候也又可以去 B 站水了： 另外有对这个设备感兴趣的朋友，也欢迎进群艾特我哦，做完视频就准备出掉了，价格不贵，16+512GB MX250 双屏只要 4-4.5k元，可小刀很香哦。 支持一下？ 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:03:09 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-4.html":{"url":"6-实用姿势/6-4.html","title":"4. 台式机双显卡显示","keywords":"","body":"4. 台式机双显卡显示 前言 首先说明一下这个双显卡指的不是两个独显，而且核显和独显，就像下面这个图一样，可以看到核显和独显都可以正常显示： 实际上这个台式机双显卡配置不是最标准的配置，但是有些网友就比较好奇怎么做到的，这个问题被问了很久了： 既然如此，不如直接开一个章节记录分享一下吧，实际上还是非常简单的。 核显仅计算 下面是国光我的黑苹果台式机平常使用的默认策略（因为不怎么使用 HDMI 所以没有定制接口数据）： AAPL,ig-platform-id 这里使用的是 0300C89B，不输出信号（因为已经有独显了），而且白苹果的 iMac 默认也是这个调度策略，即核显仅计算，不驱动显示器，完整的 UHD 630 的 AAPL,ig-platform-id 可参考下表： AAPL,ig-platform-id 解释说明 07009B3E 当桌面 iGPU 用于驱动显示器时使用 00009B3E 如果07009B3E 不起作用的话，可以考虑使用这个 ID 看看 0300C89B 当桌面 iGPU 仅用于计算任务而不驱动显示器时使用 device-id：9B3E0000 解决一些驱动异常问题，提高兼容度 可以看到国光我 DeviceProperties 这里，显卡部分并没有注入很多参数，这是因为我的 BIOS 设置了 DVMT Pre-Allocated: 64MB，所以并不需要 framebuffer-patch-enable、framebuffer-stolenmem 以及 framebuffer-fbmem 参数了。 这种情况下我们来打开各个软件识别一下： 可以看到 Hackintool 的杂项里面和系统信息里面也只识别到了 1 个独显，Intel Power Gadget 里面检测到了核显的频率，Video Proc 双硬解正常。 让核显驱动显示器 既然知道是核显没有驱动显示器的原因，我们直接将 AAPL,ig-platform-id 改为 07009B3E 试试看呢： 现在我看下各个软件的识别情况： 可以看到除了 Hackintool 这里识别到了两个显卡以外，其他软件并没有啥变化，系统信息里面依然只可以看到独显。 另外补充一下，使用 GeekBench 5 跑分软件也是可以识别到两个显卡了： 虽然有进展了，但是系统信息里面依然没有识别到显卡，所以革命尚未成功，我们仍需努力。 系统信息显示独显和核显 实际上这个姿势非常小众，和你的 OC 配置关系都不大了。这个问题我最终在远景里面得到了答案，原贴地址为： 台式机完美的显示独显和核显的正确姿势是？ 最终 12F 给出了正确答案： 确实，这个实际上和主板是有关系的，主板里面设置核显优先显示就 OK 了，现在想一下为啥我的室友那个成功了呢？是因为当初矿潮，他一开始是用核显的，独显是后加的，所以后面才纯属巧合出现了双显卡的情况。 国光我的主板为 AsRock 华擎的 Z490 钢铁传奇，我的 BIOS 只需要开启如下两个设置即可： 「高级」-「芯片组配置」-「主图形适配器」-「板载」 「高级」-「芯片组配置」-「IGPU 多监视器」-「启用」 如果不启用的话，在有独显的情况下，会禁用掉核显 很多技嘉的 B 系列主板默认就是禁用的 很难受 那么我们来看一下最终的效果图： 再看下核显的情况： 最后上一个总的图就差不多了： 提醒一下 我写这个章节只是纯属好奇，实际上这个姿势并不实用。 在台式机有免驱独显的情况下，不建议开启核显作为显示器输出，所以建议搭建进 BIOS 里面依然设置 PCIE 独显为主要的显示设备，然后进 OC 换一个不做显示输出的 AAPL,ig-platform-id，因为这是 iMac 白苹果的默认策略，黑苹果的最高境界就是向白苹果靠拢，另外同时也会提高开机的速度，缩短开机时间，何乐而不为呢？ 支持一下 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:03:15 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-5.html":{"url":"6-实用姿势/6-5.html","title":"5. 开启 HiDPi","keywords":"","body":"5. 开启 HiDPi 关于 HiDPi 几年前之前写过一篇，感兴趣的网友可以去看看：HiDPI 是什么？以及黑苹果如何开HiDPI 这个这个教程里面就只写关键的操作了，不再啰嗦了。 HiDPi 是啥 简单来说是苹果一直使用的显示技术，通过多个像素点合成一个像素点来提高清晰度，当显示器达到苹果定义的视网膜标准时，会自动开启 HiDPi，MBP 全系列都开启了 HiDPi，如果你自己购买 4k 显示器的话，默认也是开启 HiDPi 的，或者使用 4k 笔记本黑苹果的时候（XPS 系列），也是自动开启 HiDPi 的。 HiDPi 因为牺牲像素点的原因，虽然看上去会比原来清晰，但是实际看上去的分辨率会低，相当于是牺牲分辨率换清晰度，所以 1080P 显示器开启 HiDPi 的话，最终显示的效果接近于 720P，这么看的话，2k 分辨率的设备更适合 HiDPi（高不成 低不就）。 开启 HiDPi 效果前 ZenBoook 13 默认情况下的效果： 可以看到图片的字体还是比较模糊的，看着不是很舒服。 开启 HiDPi 效果后 Zenbook 13 开启 HiDPi 后： 可以看到明显清晰了很多，看上去很清爽，虽然牺牲了一点分辨率，但是值！ 如何开启 HiDPi 实际上开启 HiDPi 并不复杂，有成熟的轮子工具可以使用了：脚本的 Github 项目地址: GitHub - xzhih/one-key-hidpi: Enable macOS HiDPI 只需要一条命令即可开启 HiDPi： sh -c \"$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi.sh)\" 不过官方项目在 Github 很容易被墙，如果访问 Github 出现网络超时的情况，可以使用下面我放在国内的脚本命令： sh -c \"$(curl -fsSL https://html.sqlsec.com/hidpi.sh)\" 国内的脚本是定期同步 Github 官方脚本的，主要代码转移到了国内的码云，基本上国内是可以很顺畅的使用的。 脚本使用细节一 上面是国光常用的选项，因为这是一个双屏笔记本，所以列出了 2 个显示器，如果你们外接显示器的话，这里也会显示 2 个显示器。另外选择显示器 ICON 图标这里大家也可以根据自己的喜好来。 脚本使用细节二 一般情况下 1080P 的显示器，分辨率配置这里选择 1 和 2 都可以，具体大家自己尝试看看。 不过有些笔记本的分辨率比较小众，比如之前的 驰为 Corebook X 14，它的分辨率为：2160x1440 这个时候就得自己拿计算器算好分辨率了，最终驰为这个 笔记本的 HiDPi 分辨率为： 1920x1280 1620x1080 1380x920 1080x720 其中在 1620x1080 面积会比较大，但是清晰度不及 1380x920，居然网友们可以根据自己的喜好来。 开启 HiDPi 的设置 设置 - 显示器 里面选择缩放，可以看到开启 HiDPi 的显示器的效果，有小窗口的图标： 不过有些显示器是没有这个小窗口的，不过这种情况下也会有 HiDPi 的文字提醒： 没开 HiDPi 的设置 没有开 HiDPi 的显示器选择缩放的话，只会通过文字形式（无 HiDPi 标识）列出来各个分辨率： 开启 HiDPi 的缺点 凡是必有利弊，除了开启 HiDPi 会牺牲分辨率（显示面积）以外，还会加重显卡负担，如果你的核显或者 CPU 本身性能就薄弱的话，就会造成明显的卡顿现象。 说到这里有朋友肯定会问了？为啥会加重显卡负担呢？看下面这种开启 HiDPi 的图你就明白了： 因为 HiDPi 是牺牲分辨率换清晰度的，当你设置的 UI 分辨率要高一点的时候，必然需要更大的分辨率，原来的物理分辨率并不能满足，此时显卡会模拟输出更高的分辨率，这也就是 HiDPi 可能会造成系统卡顿的原因。（常见于核显，独显的话，无脑开启不会错） 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:03:55 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-6.html":{"url":"6-实用姿势/6-6.html","title":"6. 睡眠问题排查","keywords":"","body":"6. 睡眠问题排查 参考官方的这个来就行了：https://dortania.github.io/OpenCore-Post-Install/universal/sleep.html 不懂的配合谷歌翻译你可以的，加油，国光精力有限，肝不动了，还是这种授人以渔的方式比较省心。 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:04:01 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-7.html":{"url":"6-实用姿势/6-7.html","title":"7. macOS 12 蓝牙","keywords":"","body":"7. macOS 12 蓝牙 博通免驱网卡 使用 BlueToolFixup.kext 替代掉 BrcmBluetoothInjector.kext 即可。 最终使用驱动如下： BlueToolFixup.kext BrcmFirmwareData.kext BrcmPatchRAM3.kext intel 无线网卡 使用 BlueToolFixup.kext 替代掉 IntelBluetoothInjector.kext 即可。 BlueToolFixup.kext 可以从这里下载：https://github.com/acidanthera/BrcmPatchRAM/releases 最终使用驱动如下： BlueToolFixup.kext IntelBluetoothFirmware.kext 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:04:09 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-8.html":{"url":"6-实用姿势/6-8.html","title":"8. 屏蔽不支持的硬盘","keywords":"","body":"8. 屏蔽不支持的硬盘 黑苹果这块经常在 NVME 硬盘这里翻车，比如常见的 三星 Samsung PM961/PM981/PM981a/PM991 系列、镁光 Micron 2200V MTFDHBA512TCK、Micron 2200S 等，关于无解的硬盘详细可以参考教程的：硬件限制 - 硬盘支持 PXPX 方法 需要先在 Windows 下查看到具体的硬盘路径，不同的电脑都不太一样，实际路径以你的实际为准： 然后将下面的内容_SB_.PCI0.RP21替换成你自己看到实际路径就行了，接着将文件保存为 SSDT-RP.PXSX-disbale.aml，OC 加载这个 SSDT 即可： DefinitionBlock (\"\", \"SSDT\", 2, \"OCLT\", \"noRPxx\", 0x00000000) { External (_SB_.PCI0.RP21, DeviceObj) Scope (_SB.PCI0.RP21) { OperationRegion (DE01, PCI_Config, 0x50, One) Field (DE01, AnyAcc, NoLock, Preserve) { , 4, DDDD, 1 } Method (_STA, 0, Serialized) // _STA: Status { If (_OSI (\"Darwin\")) { Return (Zero) } } } Scope (\\) { If (_OSI (\"Darwin\")) { \\_SB.PCI0.RP21.DDDD = One } } } 屏蔽独显法 这个其实是国光我自己命名的，因为屏蔽独显也是这种姿势，有些 NVME 硬盘控制器也可以使用这种方法来屏蔽。 需要先在 Windows 下查看到具体的硬盘路径，不同的电脑都不太一样，实际路径以你的实际为准： 根据上图我们的 NVME 硬盘的路径为： _SB_.PCI0.GPP0 然后将下面的内容_SB_.PCI0.GPP0替换成你自己看到实际路径就行了 ： DefinitionBlock (\"\", \"SSDT\", 2, \"DRTNIA\", \"spoof\", 0x00000000) { External (_SB_.PCI0.GPP0, DeviceObj) Method (_SB_.PCI0.GPP0._DSM, 4, NotSerialized) // _DSM: Device-Specific Method { If ((!Arg2 || (_OSI (\"Darwin\") == Zero))) { Return (Buffer (One) { 0x03 // . }) } Return (Package (0x0A) { \"name\", Buffer (0x09) { \"#display\" }, \"IOName\", \"#display\", \"class-code\", Buffer (0x04) { 0xFF, 0xFF, 0xFF, 0xFF // .... }, \"vendor-id\", Buffer (0x04) { 0xFF, 0xFF, 0x00, 0x00 // .... }, \"device-id\", Buffer (0x04) { 0xFF, 0xFF, 0x00, 0x00 // .... } }) } } 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:04:16 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-9.html":{"url":"6-实用姿势/6-9.html","title":"9. AMD 免驱独显优化","keywords":"","body":"9. AMD 免驱独显优化 温度传感器 从 Radeon VII 开始，Apple 停止直接报告温度，需要 kexts 介入并实施该功能。对于 Vega 10 及更早版本，其他工具已经可以显示 GPU 温度，而无需额外的 kext。 所需项目地址：https://github.com/aluveitie/RadeonSensor 支持从 Radeon HD 7000 系列到 RX 6000 系列的所有 GPU。 先看下这个项目里面下载下来的几个文件： RadeonSensor.kext：读取GPU温度所需，需要Lilu SMCRadeonGPU.kext：可以选择用于将 GPU 温度导出到 VirtualSMC 以供监控工具读取 RadeonGadget.app：在状态栏中显示 GPU 温度，只需要加载 RadeonSensor.kext 使用方法也比较简单，将 RadeonSensor.kext 和 SMCRadeonGPU.kext 拷贝到 EFI/OC/Kexts 目录下，然后在 config.plist 里面启用即可： 重启电脑即可生效。 使用 Sensei 可以正常查看 GPU 温度： 使用 iStat Menus 也可以正常查看 GPU 温度： 不想安装 SMCRadeonGPU.kext 的话，使用自带的 app 也是可看的，虽然有点丑： 性能优化 前言 在 macOS 10.15 Catalina 的年代，第三方的独显通过注入白苹果的数据（EFI Version 等信息）可以伪造成白苹果的 W 系列的专业卡，从而性能跑分上有巨大提升，但是在 macOS 11.X Big Sur 后，苹果官方封禁了这种提高方式，所以目前 AMD 免驱独显性能提升的话，并没有啥好姿势了。 不过天无绝人之路，国光我经过大量测试，最终还是发现一个可以明显提升性能的一个参数，虽然提升不如之前明显，但是呢还是有点作用的，下面我细细说来。 性能测试 因为 Geekbench5 跑分太预览的，同配置的情况下，的跑分误差很大，完全没有参考价值，所以我们需要一个稳定的测试环境用于记录不同配置的显卡性能情况。 环境信息 本次测试的一些环境信息：macOS 12.2.1 + i7-10700 + 64GB 2667MHz 内存 + 蓝宝石 RX 6600XT 白金版 软件名 版本信息 Final Cut Pro 10.6.1 Compressor 4.6 新建项目 首先点击「文件」-「新建」-「项目」，新建一个 4K 60 的项目，然后在「字幕和发生器」变栏中选择「发生器」搜索「云」发生器，然后拖入到时间轴： 导出测试 因为 Final Cut Pro 可能会后台自己就渲染了，这里我们选择「文件」-「发送到 Compressor」-「新建批处理」： 然后选择左侧的「YouTube 和 Facebook」-「最高 4K」拖入到我们 Final Cut Pro 发过来的项目上： 最后点击右下角的「开始批处理」，最后我们可以看到整个导出的时间： 导出的视频默认在用户文件夹下面的「影片」文件下： 最终结果 说明 第1次 第2次 平均时间 显卡负载 仿冒 W6900X + 解锁功耗墙 + 显存超频 04 分 22 秒 04 分 19 秒 04 分 21 秒 27% 核显不工作 仿冒 W6900X 04 分 23 秒 04 分 21 秒 04 分 22 秒 27% 核显不工作 RX 6600XT + EFI Version + 零散的信息 04 分 20 秒 04 分 19 秒 04 分 20 秒 27% 核显不工作 RX 6600XT 原生数据 04 分 39 秒 04 分 41 秒 04 分 40 秒 19% 核显轻度工作 不正确的 ROM 号、EFI + 解锁功耗墙 + 显存超频 04 分 43 秒 04 分 46 秒 04 分 45 秒 19% 核显轻度工作 RX 6600XT + 只有 EFI Version 04 分 44 秒 04 分 45 秒 04 分 45 秒 20% 核显轻度工作 RX 6600XT + EFI Version + AAPL,slot-name 04 分 16 秒 04 分 14 秒 04 分 15 秒 22% 核显不工作 RX 6600XT + AAPL,slot-name 04 分 14 秒 04 分 14 秒 04 分 15 秒 22% 核显不工作 很明显的负载占用高低： 测试结论 下面是本次测试的几个结论： 显卡不要随便注入别人显卡的 ROM，哪怕是白苹果的数据信息也提升不大 核显参与导出的时候，独显占用会比较低，此时导出时间也比较长 解锁功耗墙 + 显存超频貌似并没有啥卵用，导出时间不会因此缩短 AAPL,slot-name 为关键的参数，注入这个参数即可缩短导出时间，原因不详，有了解的大佬欢迎留言 最终成绩 在蓝宝石 RX 6600XT 白金版 + 注入 AAPL,slot-name 的情况下： 自己的显卡路径可以直接在 Hackintool 这个软件里面的「PCIe」标签下找到，直接 Copy 设备路径即可： 最终就这样操作之后，Geekbench5 跑分明显提高了不少，最高的跑分成绩如下： Geekbench5 的跑分娱乐一下就行了，大家不必当真。 主要是 Final Cut Pro + Compressor 的 4k 导出时间，从最慢的 04 分 41 秒 可以优化到 04 分 14 秒，性能提升大约 10% 左右，总之还是很划算的。 本章下面的评论可能也对大家也有参考意义，大家留意自己去实践一下看看。 macOS 12.3.1 macOS 12.3.1 后很多网友反应自己的显卡被负优化了，跑分下降很明显，国光这里也补充一下新系统的仿冒姿势。 OCC 设备属性直接仿冒就行了，以 RX 5300M 为例： 详细的注入参数可以参考下面的细节。 Radeon 5300 DeviceProperties Add 这里写你显卡的实际的设备路径(Hackintool PCIE里面可以看到) @0,name ATY,Keelback @1,name ATY,Keelback @2,name ATY,Keelback @3,name ATY,Keelback ATY,EFIVersion 01.01.190 device_type ATY,KeelbackParent Radeon 5500 DeviceProperties Add 这里写你显卡的实际的设备路径(Hackintool PCIE里面可以看到) @0,name ATY,Python @1,name ATY,Python @2,name ATY,Python @3,name ATY,Python ATY,EFIVersion 01.01.231 device_type ATY,PythonParent Radeon 5700 DeviceProperties Add 这里写你显卡的实际的设备路径(Hackintool PCIE里面可以看到) @0,name ATY,Adder @1,name ATY,Adder @2,name ATY,Adder @3,name ATY,Adder AAPL00,DualLink AQAAAA== ATY,Card# 102-D32200-00 ATY,Copyright Copyright AMD Inc. All Rights Reserved. 2005-2019 ATY,DeviceName W5700X ATY,EFIVersion 01.01.190 ATY,FamilyName Radeon Pro ATY,Rom# 113-D3220E-190 CAIL_EnableLBPWSupport 0 CAIL_EnableMaxPlayloadSizeSync 1 CFG_CAA 0 CFG_FB_LIMIT 0 CFG_FORCE_MAX_DPS 1 CFG_GEN_FLAGS 0 CFG_NO_MST 0 CFG_NVV 2 CFG_PAA 0 CFG_PULSE_INT 1 CFG_TPS1S 1 CFG_TRANS_WSRV 1 CFG_UFL_CHK 0 CFG_UFL_STP 0 CFG_USE_AGDC 1 CFG_USE_CP2 1 CFG_USE_CPSTATUS 1 CFG_USE_DPT 1 CFG_USE_FBC 0 CFG_USE_FBWRKLP 1 CFG_USE_FEDS 1 CFG_USE_LPT 1 CFG_USE_PSR 0 CFG_USE_SCANOUT 1 CFG_USE_SRRB 0 CFG_USE_STUTTER 1 CFG_USE_TCON 1 PP_DisableDIDT 1 PP_DisablePowerContainment 1 PP_DisableVoltageIsland 0 PP_FuzzyFanControl 1 device_type ATY,AdderParent hda-gfx onboard-1 model Radeon Pro W5700X name ATY_GPU Radeon 6600 这里写你显卡的实际的设备路径(Hackintool PCIE里面可以看到) @0,name ATY,Henbury @1,name ATY,Henbury @2,name ATY,Henbury @3,name ATY,Henbury ATY,DeviceName W6600X ATY,EFIVersion 01.01.270 ATY,FamilyName Radeon Pro device_type ATY,HenburyParent model AMD Radeon RRO W6600X name ATY,Henbury Radeon 6800 DeviceProperties Add 这里写你显卡的实际的设备路径(Hackintool PCIE里面可以看到) @0,name ATY,Belknap @1,name ATY,Belknap @2,name ATY,Belknap @3,name ATY,Belknap device_type ATY,BelknapParent Delete Radeon 6900 DeviceProperties Add 这里写你显卡的实际的设备路径(Hackintool PCIE里面可以看到) @0,name ATY,Carswell @1,name ATY,Carswell @2,name ATY,Carswell @3,name ATY,Carswell device_type ATY,CarswellParent Delete 参考链接 下面是写这篇文章的一些参考链接，感兴趣的朋友可以自己去看看： Asrock Radeon RX 5500 XT Challenger D 8G OC 注入优化 Hackintosh - AsRock Z490 Phantom Gaming ITX/TB3 - intel Core 10850k - OpenCorePkg 远景论坛：xjn819 - 6900XT及苹果自家显示器相关 远景论坛：xjn819 - 5700xt 专享优化贴（我写完了） AMD Radeon PRO W6800X Duo and W6900X - macOS System Information 支持一下 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:04:27 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-10.html":{"url":"6-实用姿势/6-10.html","title":"10. OC 主题与启动项","keywords":"","body":"10. OC 主题与启动项 本章节由网友：2449016809 （QQ号）贡献 官方主题 这是OpenCore官方提供的主题： https://github.com/acidanthera/OcBinaryData/ 你也可以自己制作图标同名替换即可，或者下载别人制作好的主题包替换，前面国光也贴出了一些主题下载网站，详见\"Drivers说明\"部分 设置 PickerMode -> External PickerAttributes -> 129(0x81)驱动 OpenCanopy.efi 必须的图标 如果缺少这些图标主题将不会生效 BtnFocus - 显示其他（关机和重启）按钮的焦点 (BtnFocus.icns) Cursor - 鼠标光标 (Cursor.icns, 下同.) Dot - 密码输入隐藏字符点 Enter - 密码输入输入符号 Left - 左侧的附加选择器条目 Lock - 密码锁 Password - 密码输入文本区 Restart - 附加按钮：重启 Right - 右侧的附加选择器条目 Selected - 选定的启动项背景 Selector - 显示所选条目 SetDefault - 在“设置默认值”模式下显示所选条目 ShutDown - 附加按钮：关机 ExtHardDrive - 可引导操作系统（外部驱动器上的系统，例如U盘） HardDrive - 可引导操作系统（本地硬盘） 自动检测到的启动项 OpenCore会自动检测该系统是Windows还是macOS来匹配启动项图标，macOS会自动检测系统版本，而Windows不会检测系统版本，至于是Windows11还是Windows10......OpenCore只能检测到这个系统是Windows。 图标 Windows HardDrive.icns是基础启动项图标，如果你没有为启动项自定义图标，所有系统都会显示这个图标。 如果你想给Windows自定义一个图标，你先自己设计好Windows图标之后命名为Windows.icns，当OpenCore启动时会自动为其匹配该图标。 macOS同理，你需要一个Apple.icns图标，否则将退回HardDrive.icns 那么问题来了，当你同一个机器上有多个Windows系统和多个mac系统（硬盘大就是任性）时该怎么让不同的Windows或者mac系统显示不同的图标呢。 这时就需要一个文件.contentFlavour，这个文件你可以在Windows系统下用记事本创建一个txt文本文件，当你想给Windows11单独做一个启动项图标时，这个文本文件的内容你要这样填写Windows11:Windows这说明你还需要设计一个图标文件，名为Windows11.icns。该文本文件内容填好后保存退出，然后重命名该文本文件为.contentFlavour,该txt文件后缀.txt也要删除，文本文件的完整的名字就是重命名为.contentFlavour，然后把这个文件复制到Windows启动文件所在的目录一般都是\\EFI1\\Microsoft\\Boot\\ 同理如果你还有一个Windows10系统，上面说到的文本文件的内容就改为Windows10:Windows，同时你还需要准备一个Windows10.icns图标文件 上面提到的图标文件如果缺少将会一步步回退，如果缺少Windows10.icns将回退到Windows.icns，如果又缺少Windows.icns，最终会回退到HardDrive.icnsmacOS macOS启动项就没这么麻烦了不需要.contentFlavour这个文件，因为OpenCore会自动检测mac系统版本，只需要对图标文件做一下手脚就可以了 Apple12.icns自动匹配为Monterey的图标 Apple11.icns自动匹配为Big Sur的图标 Apple10_15.icns自动匹配为Catalina的图标 Apple10_14:Apple自动匹配为Mojave的图标 Apple10_13:Apple自动匹配为High Sierra的图标 其他等等都一样 启动项标题 Windows 自定义启动项标题和自定义图标的方式差不多，只不过txt文件要重命名为.contentDetails ，该文本文件的内容就为你想自定义的标题内容，比如你想命名为Windows11那么该文本文件的内容就为Windows11,该文件也是放在启动文件所在的目录\\EFI1\\Microsoft\\Boot\\ macOS 你想把mac的启动项标题命名为Monterey，则文本文件的内容就为Monterey,文件复制到/System/Volumes/Preboot/UUID-number/System/Library/CoreServices至于UUID每个人都不同，你只需要访达前往输入/System/Volumes/Preboot/接下来的目录用鼠标点击即可。 这一步要在mac环境下进行.contentDetails在 Windows下是隐藏文件，终端输入以下命令即可显示隐藏文件 defaults write com.apple.finder AppleShowAllFiles -boolean true;killall Finder 终端输入以下命令隐藏隐藏文件 defaults write com.apple.finder AppleShowAllFiles -boolean false;killall Finder 此项工作需要关闭SIP，如何关闭请看OC配置的Misc章节最后部分 手动添加的启动项 这个就比较简单了，不需要上述的两个文件，直接在config.plist文件中修改配置就好 Misc -> Boot -> Entries启动项条目中有一项Flavour该项内容填法和上述自动过检测到的Windows自定义启动项图标填法一样，例如你想为Windows11自定义图标，应这样填写Windows11:Windows 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:04:42 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-11.html":{"url":"6-实用姿势/6-11.html","title":"11. macOS 下触屏驱动","keywords":"","body":"11. macOS 下触屏驱动 前言 最近一直想入手 XPS 13 7390 二合一 或者 XPS 13 9300 笔记本，这两款携带的是目前黑苹果可以黑的最高版本的 CPU 了，而且颜值都挺高的，就是价格不便宜。不过经过冷静分析，发现我貌似只馋他们的 4k 触控屏，所以就想了一下，为啥我不直接去买一个 4k 触控便携显示器呢，而且价格便宜很多，2333 于是我就真的这么做了，这篇文章也就诞生了。 默认情况 macOS 底层是不支持触控的，所以这个触屏默认情况下只能单指点击，就像一个鼠标一样，体验可以说很差了。但是卖我这个屏幕的是一个小姐姐，她之前是搭配 Macmini 使用的，我不是很理解她为啥买这样一个支持 10点触控的屏幕，却在 macOS 默认只能单指操作的情况下使用。 从小姐姐晒的图片我貌似也理解了： 这个显示器的左侧接口从上到下分别是： Micro-USB 供电 Type-C 供电 Type-C 一线通同传投屏 反向 USB 供电 触控 USB 协议 标准 HDMI 非 Mirco HDMI 支持 4k 60hz 从图上貌似小姐姐她一直都没有外接第三个接口，所以触屏功能可能她一直就没有正经用过，怪不得要出掉这个显示器呢。 扯得有点多，先来看下 macOS 下这个触控屏的工作情况，可以看到识别到底层的触控芯片为 ILITEK-TP： ILITEK芯片电容式触控控制器是为满足更轻松的业务领域而开发的，它是台湾 ILITEK 公司提供的2511/2302/2312芯片，兼容10.4-32寸的电容式触摸屏，提供经济的触摸解决方案。 加载触屏驱动 说到 macOS 触屏驱动，实际上我们经典的 I2C 触控板驱动本身也是支持触屏的，原项目地址为： https://github.com/VoodooI2C/VoodooI2C/ 很多经典的黑苹果机型，比如 XPS 系列也就使用这个项目驱动的。 废话不多说，我们这个台式机黑苹果想要驱动触控屏的话也很简单： VoodooI2C.kext 和VoodooI2CHID.kext 放到 EFI/OC/Kexts 目录下 使用 OCC 按照如下图的顺序加载： 然后重启即可，最终 10 点触摸可以在 macOS 下完美工作（虽然 macOS 用不到 10 点手势）： 不过这触控屏实际上是这种情况下单指操作是模拟触控笔，鼠标跟随手指，多指操作模拟妙控板，基本上妙控板的手势全部支持： 基本上可以完成妙控板的大多数功能了。 多屏幕操作因为鼠标跟随手指的原因，可以辅助功能开启「三指拖移」 白苹果驱动姿势 上面操作通过 OC 来操作很简单，但是白苹果下没有 OC 该怎么呢？实际上也非常简单，就是使用命令行去手动记载对应的 kexts 即可。 首先下载最新的驱动版本：https://github.com/VoodooI2C/VoodooI2C/releases 删除掉其他无关紧要的 Kexts，只保留 VoodooI2C.kext 和 VoodooI2CHID.kext 接下来进入终端操作： # 修改 kexts 所有者 ➜ sudo chown -R root:wheel VoodooI2C* # 添加执行权限 ➜ sudo chmod -R 755 VoodooI2C* # 加载 Kexts ➜ sudo kextload -v VoodooI2C* 此时应该会弹出「系统扩展已更新」的提示： 打开设置里面的「安全与隐私」，点击允许： 接着根据提示重启电脑即可。 重启后回到 Kexts 命令下继续执行加载命令： # 加载 Kexts ➜ sudo kextload -v VoodooI2C* 输入下面命令查看 Kexts 的加载状态： ➜ VoodooI2C-2.7 sudo dmesg|grep Voodoo 出现类似下图的情况即表示 Kexts 加载成功： 但是此时你的触控屏依然不支持多指手势，我们拔插一下 USB 协议的数据线重新看下日志看看： ➜ VoodooI2C-2.7 sudo dmesg|grep Voodoo 可以看到日志明显变化了，检测到了我们的显示器： 此时你的触屏显示器多指手势应该在白苹果下也可以正常工作了。 支持一下 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:04:53 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"6-实用姿势/6-12.html":{"url":"6-实用姿势/6-12.html","title":"12. 自定义显示器图标","keywords":"","body":"12. 自定义显示器图标 成品效果 使用 HiDPi 的脚本也可以自定义显示器图标，但是授人以鱼不如授人以渔，废话不多说，上教程。 查看显示器信息 使用 Hackintool 查看显示器信息： 以上面的 DP 显示器为例，提取出关键信息（后面要用）： 供应商 ID = 216D 产品 ID = 2800 创建文件夹和图标文件 前往：/Library/Displays/Contents/Resources/Overrides 文件夹下，只需要两个步骤： 创建 DisplayVendorID-{供应商ID}文件夹 将你的图标命名为：DisplayProductID-{产品ID}.icns 替换完重启就完事了。 powered by Gitbook该文章最后修改时间： 2022-05-05 14:23:46 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"7-完美黑果/":{"url":"7-完美黑果/","title":"八、完美黑果","keywords":"","body":"八、完美黑果 很多朋友自己鼓捣完黑苹果或者花钱请被人帮忙安装好黑苹果后，并不清楚目前自己的黑苹果完美度是多少，所以国光就单独开了这个章节，分享一下我心目中完美的黑苹果。 powered by Gitbook该文章最后修改时间： 2022-05-05 12:05:59 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"7-完美黑果/7-1.html":{"url":"7-完美黑果/7-1.html","title":"1. 黑苹果","keywords":"","body":"1. 黑苹果 前言 很多朋友自己鼓捣完黑苹果或者花钱请被人帮忙安装好黑苹果后，并不清楚目前自己的黑苹果完美度是多少，所以国光就单独开了这个章节，分享一下我心目中完美的黑苹果。 另外如果有对白苹果下各项参数表现的话，可以参考这个章节白苹果 通用部分 这部分笔记本和台式机都可以参考，为啥单独分笔记本和台式机呢？因为台式机很容易完美，但是笔记本的话就有一堆各种各样的问题了，所以下面会单独列出笔记本的部分。 Intel Power Gadget intel 官方出品的软件，常用来查看 CPU 的频率、功耗、稳定等相关参数。 官方下载地址为：https://www.intel.com/content/www/us/en/developer/articles/tool/power-gadget.html 先看一个 CPU 正常驱动的软件运行截图： 下面分别从上到下依次解释一下各个模块的作用： Power 显示 CPU 的实时功耗情况 一般这块大家基本上都是正常的，除非少数配置不当，导致 CPU 一直处于超频状态 Frequency 显示 CPU 以及 核显的实时频率 主要关注一下是否高低频正常，不是一直超频状态，或者一直达不到睿频的频率就行了 CORE MAX：最大频率，关注一下这个是否达到你 CPU 的睿频的标准 CORE AVG：平均频率 CORE MIN：最低频率，一般最低频率得低于 1.0 才符合预期，笔记本尤为要关注这一点，因为低频有助于续航 CORE REQ：系统预判需要调度的 CPU 频率，理想情况下这个 REQ 的粉红线要和 AVG 的蓝线曲线走势符合 GFX AVG：实际核显达到的频率，如果你的核显没有驱动的话，是看不到这个选项的 GFX REQ：系统预判需要调用的核显频率，如果你的核显没有驱动的话，是看不到这个选项的 补充一下，可以 GFX AVG 和 GFX REQ 的频率没任何意义，这个 Intel Power Gadget 不同版本看到的评率都变化很大，所以完全没规律可言，实际完美效果以自己的体验为准。 另外提醒一下，使用 CPU-S 这类软件查看变频档位的话没有参考意义，这个国光以前拿白苹果和黑苹果对比过，白苹果的变频档位居然还不如黑苹果多，所以国光认为并不是变频档位越多越好，黑苹果的最高境界应该就是无限接近于白苹果才对。 Temperature CPU 的实时温度 台式机散热厉害的话，基本上日常使用最高温度不会超过 50℃ 吧 笔记本的话，intel 的 CPU 发热一直是硬伤，国光我的白苹果经常温度到 95℃+，早已经习惯了 Utilization CPU 的实时使用率 这个和 Windows 下的任务管理器查看的结果差不多，这里不再赘述了 压力测试 Intel Power Gadget 自带压力测试，可以很方便测试 CPU 和 核显的睿频情况： 反面教材 说了这么多，我们来看一个这块有明显问题的截图： 图上有几个问题，我们下面来一一列出来： 测试核显的时候，CPU 的 CORE AVG 平均频率上不去，达不到睿频的标准，可以看到很明显的 CPU 频率下跌了 CORE REQ 实际上预判了需要 3.47Ghz 的频率，实际上只跑到了 0.40Ghz 的频率 Hackintool 可以说是黑苹果必备的一个软件了，下载传送门：https://github.com/headkaze/Hackintool/releases Hackintool 可以看很多驱动的完美情况，我们先一个个来，先看下系统部分，重点关注一下我标记出来的： VDA 解码器，这个比较关键，如果不是完美支持的话，你的硬解肯定是不正常的。 如果是台式机的话，关注一下是否这里可以看到核显的信息 另外关注一下显卡是否支持 Metal，这个是 macOS 下一个很重要图形引擎 最后这个 Hackintool 的系统界面不要有一些 ??? 识别不出的信息最好 杂项 首先关注网卡是否都内建了 蓝牙固件是否可以正常显示，没有的话请尝试重新 USB 定制 显卡型号识别正常，这里没有核显的原因是因为国光我使用了无头 ID，仅计算使用，也建议大家这样使用 音频设备里面除了自带的声卡以外，应该还可看到 HDMI 音频相关 硬盘这块没的说，基本上大家都是正常的 USB 没有多余的 USB的端口，且正确识别了 USB 类型，速率也均正常，同时记得把网卡等内部设备 Internal 内建一下： VideoProc H264 和 HEVC 的状态应该都是可用状态才比较正常： Geekbench5 Geekbench5 单核跑分：1302，多核跑分：8393 分 这个分数比我在 macOS 11.4 Big Sur 上跑的要略低一点，当时跑分 Geekbench5 单核跑分：1314，多核跑分：8687 分 不过这个问题不大，参考一下历届 Mac 跑分，只要跑出 CPU 应有的水平就可以了：Geekbench5 历届 Mac 跑分情况 蓝宝石 6600XT 白金版，解锁功耗墙，小超一下，Metal 98462 分，OpenCL 72542 分： Geekbench5 的显卡跑分这块一直不稳定，误差比较大，大家也不必过多关注 GPU 跑分这块，对了关于 AMD 显卡优化的话，可以参考这个章节：AMD 免驱独显优化 系统信息 NVMExpress WD 西数系列 TRIM 下工作比较完美，TRIM 是苹果独有的技术，可以提高 SSD 的寿命，在这个 issue 下面也列举了一些硬盘与 TRIM 的兼容程序： 如果你的 SSD 不在上述列表，但是不确定是否在 TRIM 下工作良好的话，该怎么判断呢？下面是 TRIM 工作不良好的一些特征： 打开程序比较慢，总是得跳很久 鼠标很容易出现小彩虹 某些情况下甚至经常卡死不动 如果你的引导没有问题的话，那么很大程度上是你的 SSD 和 TRIM 兼容度不行，这个时候只需要在 「Kernel 内核设置」的「SetApfsTrimTimout」设置为 999 即可关闭 TRIM： 以太网 主要关注一下最高链接速度是否跑满了你的网卡硬件标注的规格： 图形卡 有待补充，暂时不贴图。 台式机的话图形化这里最完美的是看到 1 个显卡，这是 iMac 的默认策略配置。关于有些人可以看到核显和独显，实际上这不是标准的配置，对这个配置感兴趣的朋友可以参考：台式机双显卡显示 第二个有争议的就是显卡这里没有显示了EFI驱动程序版本，白苹果基本上都是显示的这些信息的。 这种情况在早期 10.15 的时候，第三方显卡通过注入 EFI 驱动程序版本等白果卡的信息，确实对性能提升很有帮助，但是从 Big Sur 11 开始，这种方法已经不再有效了，所以我们不用过多的关注是否显示 EFI 驱动程序版本了。 蓝牙 这块也没啥好说的，如果蓝牙驱动话，这里是可以看到蓝牙的相关信息的，如果你的蓝牙不正常工作的话，很可能与 USB 定制有关，可以参考：USB 定制，如果定制好的话，蓝牙还是有问题可能还和这个有关 macOS 12 蓝牙。 WiFi 主要关注是否支持隔空投送，其他的没有是特别关注的： 关于国家和地区代码这个网上可能也有争议，实际上没有准确权威的结论，国光认为只要正常使用的话，地区代码是无所谓的，当然如果你看着不爽的话，非得改的话，博通网卡确实也支持修改，下面搬运的官方文档： 启动项添加如下参数即可： brcmfx-country=XX将国家代码更改为 XX (US, CN, #a, ...)，也可以通过引导加载程序中的 DSDT 或 Properties → DeviceProperties 注入 声音 支持内置扬声器以及 HDMI 或者 DP 声音输出： 同时插上耳机的话，也应该是支持自动切换到耳机设备的。 麦克风 系统内置麦克风可以正常识别，Siri 语音助手可以正常交互沟通： HiDPi 没有 HiDPi 的 macOS 是没有灵魂的，4K 显示器一般默认开启 HiDPi，其他分辨率低一些的显示器得手动开启 HiDPi 了，关于开启的细节可以参考：开启 HiDPi 传感器相关 使用腾讯柠檬清理可以很方便看到 CPU 的温度和转速： 笔记本这块很容易转速无法识别，这块有些笔记本确实是硬伤，确实是无解的，所以我这块一直是随缘的。 iStat Menus 可以看到更详细的温度情况： 这里不知道为啥 iStat Menus 也没有识别到风扇的转速，不过问题不大，这里要关注的一点是 AMD 的这个 GPU 温度也识别， 独显温度没有识别的同学可以参考：AMD 免驱独显优化 AppStore AppStore 应该可以正常下载 APP，下载和更新应该都是比较丝滑的： 这块提一下的原因是，早期使用 Clover 引导的很多人配置不规范，可能导致 AppStore 使用体验很差，所以早日转入 OC 吧，跟着这个教程配置一遍简单的。 Sensi Sensi 测试硬盘读写速度也很方便，颜值也高： Blackmagic Disk Speed Test 这个软件可以直接在 AppStore 商店下载，可以测试下你的 SSD 读写速度是否正常： 如果你的 SSD 读写速度很明显低于标称规格的话，那么很可能是你的 SSD 和 TRIM 支持不良好，具体解决细节可以参考：通用部分 - 系统信息 - NVMExpress Blackmagic RAW Speed Test 这个软件可以直接在 AppStore 商店下载，用于测试 CPU 和显卡的性能表现，下图是 i7-10700 和 RX 6600XT 的测试结果： 可以看到短板是我的 i7-10700 CPU 了，当然是和显卡相比的情况下，不过实际上这个 CPU 国光我用来作为日常生产力已经绰绰有余了。 信息 如果你还有 iOS 设备的话，那么你的 macOS 上的短信应该可以正常发送的： 同理也应该可以正常接收： 如果你有 iOS 设备，网卡确定也是合格的话，依然不可以接收和发送短信的话，那么只需要如下配置一下就 OK 了，先在 macOS 上面对信息进行如下设置： 然后 iOS 这边进行如下设置： iCloud 围绕着 iCloud 等周边功能也应该可以正常使用： 隔空投送 在 iOS、iPadOS、macOS 设备直接互相传输文件，目前博通系列的免驱无线网卡都可以做到： 接力 macOS 上可以直接在程序坞的右下角直接打开 iOS 和 iPadOS 的系统级别应用： 跨设备粘贴 实际上 macOS 12.3 后面的通用控制更强大，再次之前只能简单的通过剪贴板跨设备粘贴文字之类的： 随航 这个和无线网卡有关，如果无线网卡免驱的话，理论上可以无线模式下随航，否则只能在有线模式下正常工作，随航的作用是将 iPad 当中 macOS 的显示器使用： 这样可以让闲置的 iPad 重新利用起来，用来挂个 QQ 和微信还是美滋滋的。 通用控制 macOS 12.3 开始正式支持通用控制功能，这个功能比随航就更加实用了，可以直接使用 macOS 的键盘和鼠标去操作你的 iPad，鼠标直接划过去就行了： 这个和随航在设置里面的区别就是，通用控制的 iPad 和显示器不是挨边靠着的，而随航是贴在一起的。这个也可以在控制中心那边直接连接： 这里小提一下，我这个显示器这边的亮度滑块无法使用，这是因为第三方显示器的原因，使用苹果自家的显示器理论上可以调节的。不过第三方显示器也不要灰心，使用开源下面 MonitorControl 也是可以实现第三方显示器的亮度和音量调节的，十分方便： 笔记本专题 笔记本很多参考上面的通用部分即可，笔记本主要关注的就是睡眠、电池、触控板、快捷键、亮度调节。 触控板 触控板的应该支持多指手势，且体验应该得丝滑： 触控板进阶 触控板应该工作在最高效的 GPIO 模式，而不是大众的轮训模式： 上图存在 gpioPin 和 gpioIRQ 就是 GPIO 中断模式的标志，或者你看 dmesg 日志也可以判断出来，关于触控板进阶可参考我的这篇文章：触控板中断示例 亮度调节 如果你的笔记本没有打 SSDT-PNLF.aml SSDT 的话，请打上再检测看看。 如果依然不行的话，尝试启动项添加： -igfxblr引导参数（或者 enable-backlight-registers-fix属性）修复 KBL、CFL 和 ICL 平台上的背光寄存器。 其他可能对你有帮助的启动项： -igfxbls 引导参数（或者 enable-backlight-smoother属性）以使 IVB+ 平台上的亮度过渡更平滑。 快捷键 笔记本各个快捷键应该都正常使用： 一般来说 BrightnessKeys.kext 笔记本亮度快捷键驱动就足够了，或者你技术可以的话，自己去写 SSDT 定制理论上也 OK 的。 电池 首先充电状态和非充电状态应该是可以正常丝滑切换的，而且电池没有提示不健康： 用电历史也应该是正常的： 电池选项里面也有 7 个选项： 使用 sensi 健康度和温度也应该是正常的： 不过我这里的生成日期啥的信息没有完善，这又不是不能用？？？ 支持一下 本文也贴了不少图，写起来还是比较耗费时间的，估计有白苹果的人还研究黑苹果的人少之又少吧。黑苹果这块我也确实不打算耗费太多时间了，慢慢收尾了，后面还是搞我的本职工作去了。 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:05:54 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"7-完美黑果/7-2.html":{"url":"7-完美黑果/7-2.html","title":"2. 白苹果","keywords":"","body":"2. 白苹果 前言 为了和黑苹果有个比较，下面附上 2019 款 Macbook Pro 16 寸的白苹果各项软件截图，这样也方便没有白苹果的朋友有个参考。 概览 系统信息 硬件 NVME 独显 核显 摄像头 电池 蓝牙 WiFi 雷电 音频输出 插入耳机是会自动切换输出设备的： 音频输入 输入电平是有反应的，可以侦听到声音： 所以此时的 Siri 是可以正常工作的： 电池 白苹果的这个选项要多出不少： 触控 ID 键盘 白苹果的键盘这里的选项也比较多： 短信 隔空投送 Intel Power Gadget 压力测试一下： 可以看到白果的散热真的是硬伤，CPU 100℃ 是常态了 Hackintool 系统 杂项 USB PCIe 电源 Video Proc 你没有看错，白果使用这个软件提示不支持 HEVC 解码？？？ 关于这个我在远景开了帖子讨论，但是好像都没有说到点子上，原贴地址为： 麻了，白苹果也不支持双硬解？ 触控板 MBP 的触控板最高支持 10 点触控，而且可以通过 FingerMgmt 可以看出是支持按压感应的： 电源管理 IOService 可以看到 X86PlatformPlugin 是加载的： 摄像头 Facetime 查找 iCloud 支持 Geekbench i7-9750HQ 的 CPU 单核跑分：1044 分，多核跑分：5467 分 UHD 630 Metal 跑分：4784 分，OpenCL 跑分：5254 分 AMD RX 5300M Metal 跑分：26933 分，OpenCL 跑分 25458 分 WiFi 控制中心 传感器 相比黑苹果的话，白苹果传感器这块很全了，黑苹果确实比不上： 下面是 Sensi 的散热截图： 最后补上 iStat Menus 的截图，这个真的很齐全了，黑苹果瑟瑟发抖： 支持一下 本文也贴了不少图，写起来还是比较耗费时间的，估计有白苹果的人还研究黑苹果的人少之又少吧。黑苹果这块我也确实不打算耗费太多时间了，慢慢收尾了，后面还是搞我的本职工作去了。 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:05:47 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"10-排错/":{"url":"10-排错/","title":"九、OC 排错","keywords":"","body":"OpenCore 排错 拍错建议开启 -v 模式后，多多谷歌，你去问别人的话，别人的脑子又不是机器，这些千篇一律十分类似的报错，除了几个典型的 其他真的很难直接判断出来。 另外如果你实在要去请教别人，最起码你得先看教程配置过一份 EFI，否则你拿别人的 EFI 去问为啥报错了，这个会很让人讨厌。因为谁知道你的 EFI 从哪里搞来的，如果你拿的 EFI 是一坨屎的话，去找别人拍错只会互相加重对方的脾气。 可能对你们排错有用的资料： 【持续更新】OpenCore引导-v各种卡及OC引导常见问题解决方案速查表合集 OpenCore配置错误、故障与解决办法（05月02日更新） 如果拍错没有帮助的话，参考我的教程来依然有错，可以考虑参考被人的教程或者 OC 官方教程： 黑苹果快速安装手册 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:49:51 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"10-排错/9-1.html":{"url":"10-排错/9-1.html","title":"1. 正常日志","keywords":"","body":"1. 正常日志 Recovery EB 初始化 加载 ACPI 然后加载 VirtualSMC 开始跑 CPU 部分的 ACPI： GPU 传感器和 NVME AMD GPU 传感器和 NVME 相关： 然后可以看到 NVME 控制器成功加载： NVRAM 和 安全策略 网络和硬盘相关 加载了以太网卡驱动，并且初始化磁盘工具，涉及到硬盘部分： XCMP 变频 、启动项加载 XCMP 与 XNU 电源管理相关，另外还加载了 boot-args 启动项： 无线网卡相关 加载基础系统的设置 包括：系统语言、基础系统的文件等 基础系统加载 USB 控制器 基础系统加载 基础加载收尾 一般这里是核显加载，然后 USB 这些也开始收尾了： 正常进系统 正常加载和上面的 Recovery 是差不多的，没有太多的区别，国光这里就不再赘述了，只列举不一样的 基础系统加载 区别是，基础系统加载后，正常系统这里会对 USB 控制器进行检测： 基础加载收尾 要成功的标志 出现下面标记的这个多半是要成功了： 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 13:53:31 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"10-排错/9-2.html":{"url":"10-排错/9-2.html","title":"1. 异常日志","keywords":"","body":"2. 异常日志 拍错建议开启 -v 模式后，多多谷歌，你去问别人的话，别人的脑子又不是机器，这些千篇一律十分类似的报错，除了几个典型的 其他真的很难直接判断出来。 另外如果你实在要去请教别人，最起码你得先看教程配置过一份 EFI，否则你拿别人的 EFI 去问为啥报错了，这个会很让人讨厌。因为谁知道你的 EFI 从哪里搞来的，如果你拿的 EFI 是一坨屎的话，去找别人拍错只会互相加重对方的脾气。 可能对你们排错有用的资料： 【持续更新】OpenCore引导-v各种卡及OC引导常见问题解决方案速查表合集 OpenCore配置错误、故障与解决办法（05月02日更新） 如果拍错没有帮助的话，参考我的教程来依然有错，可以考虑参考被人的教程或者 OC 官方教程： 黑苹果快速安装手册 AppleUSBHostPort::createDevice: failed to create device 这是因为 XhciPortLimit 与 macOS 11.3+ 高版本冲突造成的，可以先参考 USB 定制章节 定制下你的 USB 接口，然后在 Kernel -> Quirks 下禁用 XhciPortLimit。 ACPI Error:[\\_SB_.PCI0.XHC_.RHUB.HS11] Namespace lookup failure 下面这个错误虽然一大堆，但实际上最关键的就是我圈出来的部分： 打一个 SSDT-RHUB.aml 即可解决问题，修复某些 400 系列主板的问题，需要关闭 RHUB 设备并强制 macOS 手动重建端口。 AppleUSBHostPort::enumeratDeviceComplete_block_invoke 这种情况是 USB 出了问题，如果换其他端口没有解决的话，尝试参考 USB 定制 教程先提前定制一下即可。 ACPI Warning: Unsupported module-level 看上去好像是 apfs_module_start:2568 的硬盘问题，实际上这个报错关键是上面那个 ACPI 报错，在七彩虹主板上遇到过，这是因为 SSDT 除了问题，想办法解决 SSDT 拍错就 OK 了。 com.apple.xpc.launchd 这种常出现在一些 AMD 或者 intel 非正式版 CPU 上（这个确实坑啊），解决方法就是仿冒 CPU 进行安装就酱！ AppleUSBXHCI::creatPorts: unsupported speed mantissa 1248 exponent 2 顾名思义这种卡 USB 了，在一个 Dell 笔记本上遇到过，好像 USB 控制器都是 3.0 的，但是使用 了 USB2.0 U盘安装就会这样： 去买个 USB3.0 的 U 盘，然后参考 USB 定制教程就行了。 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:09:40 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"9-常见QA/":{"url":"9-常见QA/","title":"十、常见 QA","keywords":"","body":"十、常见 QA 使用方法 如何使用本页面呢？电脑端直接 Ctrl/Command + F 快捷键，快速搜索你想查找的关键词即可。 如果你也想来贡献 QA 完善这个页面，欢迎邮件发送给我 admin@sqlsec.com，黑苹果非常需要大家一起的贡献努力。 问题列表 尝试添加在启动项添加 igfxonln=1 参数，还可与尝试启动项添加gfxrst=1 参数 尝试添加在启动项添加 agdpmod=pikera 参数，可用于 RX5500/5600/5700/6600/6800/6900 新的免驱系列显卡，防止启动过程中黑屏 这种情况有很多种可能，有一种可能是没有屏蔽独显的原因，请尝试在启动项添加 -wegnoegpu 参数 群里有小伙伴遇到这个问题了，解决方法就是：连接网线就行了，真的是顾名思义呀。 打开 OCC，在「Misc-其他设置」-「Security」标签下面，将 SecureBootMode 改为 Default 即可。 DeviceProperties 设备属性设置里面的核显设备，删除 AAPL,slot-name 即可。 基本就是【Misc】-->【security】下的【SecureBootModel 】的问题，默认【Default 】可以改为【Disabled 】或其他。 基本就是【Misc】-->【security】下的【SecureBootModel 】的问题，默认【Default 】可以改为【Disabled 】或其他。 尝试核显属性里面注入更大的显存，比如 2048MB framebuffer-unifiedmem 00000080 data 类型 使用 OCC在 ACPI 选项中打一个 Fix RTC _STA bug 补丁即可，或者是你的 OCC 版本高于已安装系统的版本，在「UEFI设置」-「嵌入式 APFS」-「MinVersion」改为「-1」无限制即可。 两种可能 顾名思义，安装镜像真的损坏了，解决方法就是换个镜像重新刻录安装。（这种可能性不高） 当前的时间不太对，打开终端输入 date 看看时间是否正确，不正确的话使用 date 命令改下时间就 OK 了 首先确保你的网卡路径正确，然后驱动的姿势正确，下面两个是关键的参数： 然后从 macOS12.3 开始，启动项参数也由之前的dk.e1000=0参数变为了添加e1000=0参数 ，所以如果不对就替换或者添加一下。 在部分 USB3.1 的设备比如 ASMedia ASM1142 上可能出现过，定制 USB的时候不要插这个接口，然后到下面这一步的时候选择「I」忽略即可： 其实就是 10.13.6 的应用商店太老了，更新一下浏览器和 iTunes ，这些玄学问题即可解决： 使用这个 SSDT-USB3-1-XHC2.aml SSDT 即可解决。 原因就是当前的时间太新了，我们安装的系统已经不维护了 ，直接改时间为 2015 年就可以了，详细操作参考网上的一篇文章：这个安装macOS Mojave 应用程序副本已损坏，不能用来安装Mac OS 如果确认你的 Type-C 走的是核显的话，那么多半和机型有关，如果是16寸笔记本型号 改成13寸的，确保核显 ID 正确的情况下，多半就可以 Type-C 输出信号了。 更多的是 U 盘问题，macOS 下记得清除回收站，Windows 下可以手动删除 .Trashes 垃圾文件： 或者在 macOS 下，挂载 EFI 分区后使用命令行手动删除垃圾文件： cd /Volumes/EFI && rm -rf .Trashes 两种可能： USB 没有定制，建议参考 USB 定制教程重新定制 缺少键鼠驱动，打一下 VoodooPS2Controller.kext 即可 BIOS 里面调整休眠策略为 Linux，即可开启 S3 睡眠，自测一晚上耗电正常，特此记录给后人一些经验吧。 这里以 Dell Latitude 3400 i5-8265U 的 DELL08BC 触控板为例，默认的 IRQ 为 0x00000033（51）是大于 2F 的，但是使用默认的 XOSI 轮询模式却不工作，实际上这种 i2cAddress 地址为 0x2c 的都比较坑，缺少了 SSCN，我们打 1 个下面的 SSCN SSDT 即可解决问题：Dell-Latitude-3400-i5-8265U- DefinitionBlock (\"\", \"SSDT\", 2, \"LENOVO\", \"ICL \", 0x20170001) { External (_SB_.PCI0.I2C0, DeviceObj) External (FMD1, IntObj) External (FMH1, IntObj) External (FML1, IntObj) External (SSD1, IntObj) External (SSH1, IntObj) External (SSL1, IntObj) External (TPDM, IntObj) Method (PKG3, 3, Serialized) { Name (PKG, Package (0x03) { Zero, Zero, Zero }) PKG [Zero] = Arg0 PKG [One] = Arg1 PKG [0x02] = Arg2 Return (PKG) /* \\PKG3.PKG_ */ } Scope (_SB.PCI0.I2C0) { Method (SSCN, 0, NotSerialized) { Return (PKG3 (SSH1, SSL1, SSD1)) } Method (FMCN, 0, NotSerialized) { Return (PKG3 (FMH1, FML1, FMD1)) } } } 下面是打了 SSCN SSDT 的前后对比，可以看到一开始（左边的那个）的确是一个不完整的 I2C： 在一些 Dell 的笔记本上看到过这种情况，BIOS 里面勾选「Enable Custom Mode」接口解决这个问题 这种问题常见于 400 系列主板，这种情况打一个 这种问题常见于华硕主板，OC 配置文件里面 Kernel 里面勾选「DisableRtcChecksum」即可 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 12:17:51 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "},"持续更新/":{"url":"持续更新/","title":"持续更新中....","keywords":"","body":"持续更新中.... 由于工作量实在太大了，做了这个教程牺牲了我很多自己的时间，所以短期内不能全部覆盖，后面的黑苹果进阶或者琐碎的知识点也会不定期更新，敬请关注本网站：apple.sqlsec.com 希望可以让大家都可以很轻松上手黑苹果。 在这个喧嚣浮躁的时代，坚持写博客输出原创文章的人还有多少呢？写博客感觉一直是用爱发电的状态...... 如果你恰巧财力雄厚，感觉本文对你有所帮助的话，可以考虑打赏一下本文，用以维持高昂的服务器运营费用（域名费用、服务器费用、CDN 费用等） 微信 支付宝 国光我也写了一个打赏页面用以感谢支持我的朋友，详情请看 打赏列表 | 国光 打个广告 OC 排错 没有人比我更懂黑苹果 OpenCore 报错。 苦苦折腾配置了几天的 EFI 结果卡 EB、卡Panic、卡代码？ 铛铛铛，针对网友的这个痛点，国光我上线了这个 OC 拍错服务，价格不贵，你省了钱解决了问题， 我也没有手把手耗费时间做一些浪费时间的操作，双赢，岂不是美滋滋？ 重要提示：适用于有黑苹果基础，自己懂点 EFI 配置的网友，一点基础都没有的话就不用付费下单咨询了，否则我的解释你也听不懂的。 咨询前请附上你的 -v 卡代码的截图，排清楚全一点，先付费后咨询，不接受白嫖，不成功申请退款即可。 【闲鱼】https://m.tb.cn/h.fsGhBN0?tk=9XqN2jte390「我在闲鱼发布了【没有人比我更懂黑苹果 OpenCore 报错。】」 点击链接直接打开 疑难杂症 && 安装优化 目前已经有的资料和教程足够动手能力强的网友自己去安装黑苹果了，但是也有一些网友没有时间学习完教程，或者设备比较复杂遇到的问题 都很奇葩难以靠已有的知识去解决， 所以铛铛铛，国光我就抓住了这个用户痛点，咸鱼上挂了这个宝贝，嘿嘿嘿（手动狗头） 我这个服务适合什么样的人群呢？ 自己了解基本的黑苹果原理，最起码知道给你 EFI 自己如何替换安装 掌握基本的 Windows 安装技巧，这个应该都懂的吧，否则也不会想折腾黑苹果了 对黑苹果感兴趣，想体验黑苹果但是没有时间系统学习教程的 手上的设备太过小众冷门的，网上没有相关的资料可以解决 强迫症患者，对黑苹果完美度要求比较高，忍受不了各种小毛病 .... 感兴趣可以去咸鱼看看哦： 【闲鱼】https://m.tb.cn/h.frsFhza?tk=v2m62jHTknZ「我在闲鱼发布了【黑苹果安装服务 专注于解决疑难杂症】」 点击链接直接打开 期间遇到的典型疑难杂症国光我也会同步更新到这个教程里面去的，可以帮助更多的人少走弯路，何乐不为呢？ powered by Gitbook该文章最后修改时间： 2022-05-05 11:52:02 POWERMODE.colorful=!0,POWERMODE.shake=!1,document.body.addEventListener(\"input\",POWERMODE)$(document).ready(function () {if(location.href.indexOf(\"#reloaded\")==-1){location.href=location.href+\"#reloaded\";location.reload();}})new Valine({el: \"#vcomments\",appId: 'jTojmNgsJXy2kLqEYGJS6PoB-gzGzoHsz',appKey: 'ds8WGWCWtYDnVT4QnyN2a3tf',placeholder: '评论重复或者没有评论？刷新一下页面有惊喜！',avatar: '',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) "}}